{"version":3,"sources":["webpack://babylon-mtoon-material/webpack/universalModuleDefinition","webpack://babylon-mtoon-material/webpack/bootstrap","webpack://babylon-mtoon-material/./src/inspectable-custom-properties.ts","webpack://babylon-mtoon-material/./src/mtoon-material-defines.ts","webpack://babylon-mtoon-material/./src/mtoon-material.ts","webpack://babylon-mtoon-material/./src/mtoon-outline-renderer.ts","webpack://babylon-mtoon-material/./src/shaders/bump-fragment.frag","webpack://babylon-mtoon-material/./src/shaders/fragment-declaration.frag","webpack://babylon-mtoon-material/./src/shaders/light-fragment.frag","webpack://babylon-mtoon-material/./src/shaders/mtoon.frag","webpack://babylon-mtoon-material/./src/shaders/mtoon.vert","webpack://babylon-mtoon-material/./src/shaders/ubo-declaration.vert","webpack://babylon-mtoon-material/./src/shaders/vertex-declaration.vert","webpack://babylon-mtoon-material/./src/test/index.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,O;ACVA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,gBAAQ,oBAAoB;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,yBAAiB,4BAA4B;AAC7C;AACA;AACA,0BAAkB,2BAA2B;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,kDAA0C,gCAAgC;AAC1E;AACA;;AAEA;AACA;AACA;AACA,gEAAwD,kBAAkB;AAC1E;AACA,yDAAiD,cAAc;AAC/D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAyC,iCAAiC;AAC1E,wHAAgH,mBAAmB,EAAE;AACrI;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;AAEA;AACA;AACA;AACA;AACA,wBAAgB,uBAAuB;AACvC;;;AAGA;AACA;AACA;AACA;;;;;;;;;;;;;ACvJA;AAAA;AAAA;AAAkF;AAElF;;;;GAIG;AACI,SAAS,8BAA8B;IAC1C,OAAO;QACH;YACI,KAAK,EAAE,cAAc;YACrB,YAAY,EAAE,cAAc;YAC5B,IAAI,EAAE,iFAAe,CAAC,MAAM;SAC/B;QACD;YACI,KAAK,EAAE,cAAc;YACrB,YAAY,EAAE,cAAc;YAC5B,IAAI,EAAE,iFAAe,CAAC,MAAM;SAC/B;QACD;YACI,KAAK,EAAE,eAAe;YACtB,YAAY,EAAE,eAAe;YAC7B,IAAI,EAAE,iFAAe,CAAC,MAAM;SAC/B;QACD;YACI,KAAK,EAAE,YAAY;YACnB,YAAY,EAAE,YAAY;YAC1B,IAAI,EAAE,iFAAe,CAAC,MAAM;SAC/B;QACD;YACI,KAAK,EAAE,UAAU;YACjB,YAAY,EAAE,UAAU;YACxB,IAAI,EAAE,iFAAe,CAAC,MAAM;SAC/B;QACD;YACI,KAAK,EAAE,cAAc;YACrB,YAAY,EAAE,cAAc;YAC5B,IAAI,EAAE,iFAAe,CAAC,MAAM;SAC/B;QACD;YACI,KAAK,EAAE,mBAAmB;YAC1B,YAAY,EAAE,mBAAmB;YACjC,IAAI,EAAE,iFAAe,CAAC,MAAM;YAC5B,GAAG,EAAE,CAAC;YACN,GAAG,EAAE,CAAC;YACN,IAAI,EAAE,IAAI;SACb;QACD;YACI,KAAK,EAAE,kBAAkB;YACzB,YAAY,EAAE,kBAAkB;YAChC,IAAI,EAAE,iFAAe,CAAC,MAAM;YAC5B,GAAG,EAAE,CAAC;YACN,GAAG,EAAE,CAAC;YACN,IAAI,EAAE,IAAI;SACb;QACD;YACI,KAAK,EAAE,YAAY;YACnB,YAAY,EAAE,YAAY;YAC1B,IAAI,EAAE,iFAAe,CAAC,MAAM;YAC5B,GAAG,EAAE,CAAC,CAAC;YACP,GAAG,EAAE,CAAC;YACN,IAAI,EAAE,IAAI;SACb;QACD;YACI,KAAK,EAAE,YAAY;YACnB,YAAY,EAAE,YAAY;YAC1B,IAAI,EAAE,iFAAe,CAAC,MAAM;YAC5B,GAAG,EAAE,CAAC;YACN,GAAG,EAAE,CAAC;YACN,IAAI,EAAE,IAAI;SACb;QACD;YACI,KAAK,EAAE,uBAAuB;YAC9B,YAAY,EAAE,uBAAuB;YACrC,IAAI,EAAE,iFAAe,CAAC,MAAM;YAC5B,GAAG,EAAE,CAAC;YACN,GAAG,EAAE,CAAC;YACN,IAAI,EAAE,IAAI;SACb;QACD;YACI,KAAK,EAAE,wBAAwB;YAC/B,YAAY,EAAE,wBAAwB;YACtC,IAAI,EAAE,iFAAe,CAAC,MAAM;YAC5B,GAAG,EAAE,CAAC;YACN,GAAG,EAAE,CAAC;YACN,IAAI,EAAE,IAAI;SACb;QACD;YACI,KAAK,EAAE,gBAAgB;YACvB,YAAY,EAAE,gBAAgB;YAC9B,IAAI,EAAE,iFAAe,CAAC,MAAM;YAC5B,GAAG,EAAE,CAAC;YACN,GAAG,EAAE,CAAC;YACN,IAAI,EAAE,IAAI;SACb;QACD;YACI,KAAK,EAAE,iBAAiB;YACxB,YAAY,EAAE,iBAAiB;YAC/B,IAAI,EAAE,iFAAe,CAAC,MAAM;YAC5B,GAAG,EAAE,IAAI;YACT,GAAG,EAAE,GAAG;YACR,IAAI,EAAE,CAAC;SACV;QACD;YACI,KAAK,EAAE,SAAS;YAChB,YAAY,EAAE,SAAS;YACvB,IAAI,EAAE,iFAAe,CAAC,MAAM;YAC5B,GAAG,EAAE,GAAG;YACR,GAAG,EAAE,CAAC;YACN,IAAI,EAAE,IAAI;SACb;QACD;YACI,KAAK,EAAE,cAAc;YACrB,YAAY,EAAE,cAAc;YAC5B,IAAI,EAAE,iFAAe,CAAC,MAAM;YAC5B,GAAG,EAAE,IAAI;YACT,GAAG,EAAE,CAAC;YACN,IAAI,EAAE,IAAI;SACb;QACD;YACI,KAAK,EAAE,0BAA0B;YACjC,YAAY,EAAE,0BAA0B;YACxC,IAAI,EAAE,iFAAe,CAAC,MAAM;YAC5B,GAAG,EAAE,GAAG;YACR,GAAG,EAAE,IAAI;YACT,IAAI,EAAE,IAAI;SACb;QACD;YACI,KAAK,EAAE,oBAAoB;YAC3B,YAAY,EAAE,oBAAoB;YAClC,IAAI,EAAE,iFAAe,CAAC,MAAM;YAC5B,GAAG,EAAE,CAAC;YACN,GAAG,EAAE,CAAC;YACN,IAAI,EAAE,IAAI;SACb;QACD;YACI,KAAK,EAAE,WAAW;YAClB,YAAY,EAAE,WAAW;YACzB,IAAI,EAAE,iFAAe,CAAC,MAAM;YAC5B,GAAG,EAAE,CAAC;YACN,GAAG,EAAE,CAAC;YACN,IAAI,EAAE,CAAC;SACV;QACD;YACI,KAAK,EAAE,kBAAkB;YACzB,YAAY,EAAE,kBAAkB;YAChC,IAAI,EAAE,iFAAe,CAAC,MAAM;YAC5B,GAAG,EAAE,CAAC;YACN,GAAG,EAAE,CAAC;YACN,IAAI,EAAE,CAAC;SACV;QACD;YACI,KAAK,EAAE,kBAAkB;YACzB,YAAY,EAAE,kBAAkB;YAChC,IAAI,EAAE,iFAAe,CAAC,MAAM;YAC5B,GAAG,EAAE,CAAC;YACN,GAAG,EAAE,CAAC;YACN,IAAI,EAAE,CAAC;SACV;QACD;YACI,KAAK,EAAE,UAAU;YACjB,YAAY,EAAE,UAAU;YACxB,IAAI,EAAE,iFAAe,CAAC,MAAM;YAC5B,GAAG,EAAE,CAAC;YACN,GAAG,EAAE,CAAC;YACN,IAAI,EAAE,CAAC;SACV;QACD;YACI,KAAK,EAAE,iBAAiB;YACxB,YAAY,EAAE,iBAAiB;YAC/B,IAAI,EAAE,iFAAe,CAAC,MAAM;YAC5B,GAAG,EAAE,CAAC;YACN,GAAG,EAAE,CAAC;YACN,IAAI,EAAE,CAAC;SACV;QACD;YACI,KAAK,EAAE,aAAa;YACpB,YAAY,EAAE,aAAa;YAC3B,IAAI,EAAE,iFAAe,CAAC,MAAM;YAC5B,GAAG,EAAE,CAAC;YACN,GAAG,EAAE,CAAC;YACN,IAAI,EAAE,IAAI;SACb;QACD;YACI,KAAK,EAAE,uBAAuB;YAC9B,YAAY,EAAE,oBAAoB;YAClC,IAAI,EAAE,iFAAe,CAAC,MAAM;YAC5B,GAAG,EAAE,CAAC,CAAC;YACP,GAAG,EAAE,CAAC;YACN,IAAI,EAAE,GAAG;SACZ;QACD;YACI,KAAK,EAAE,uBAAuB;YAC9B,YAAY,EAAE,oBAAoB;YAClC,IAAI,EAAE,iFAAe,CAAC,MAAM;YAC5B,GAAG,EAAE,CAAC,CAAC;YACP,GAAG,EAAE,CAAC;YACN,IAAI,EAAE,GAAG;SACZ;QACD;YACI,KAAK,EAAE,uBAAuB;YAC9B,YAAY,EAAE,qBAAqB;YACnC,IAAI,EAAE,iFAAe,CAAC,MAAM;YAC5B,GAAG,EAAE,CAAC,GAAG;YACT,GAAG,EAAE,GAAG;YACR,IAAI,EAAE,IAAI;SACb;KACJ,CAAC;AACN,CAAC;;;;;;;;;;;;;;;;;;AChN2E;AAE5E;;GAEG;AACH;IAA0C,8EAAe;IAiErD;;OAEG;IACH;QAAA,YACI,iBAAO,SAEV;QAtED,iBAAiB;QACV,+BAAyB,GAAG,KAAK,CAAC;QAClC,gCAA0B,GAAG,KAAK,CAAC;QACnC,+BAAyB,GAAG,KAAK,CAAC;QAClC,+BAAyB,GAAG,KAAK,CAAC;QAClC,wBAAkB,GAAG,KAAK,CAAC;QAC3B,+BAAyB,GAAG,KAAK,CAAC;QAClC,gBAAU,GAAG,KAAK,CAAC;QAE1B,aAAa;QACN,YAAM,GAAG,KAAK,CAAC;QACf,aAAO,GAAG,KAAK,CAAC;QAChB,SAAG,GAAG,KAAK,CAAC;QACZ,SAAG,GAAG,KAAK,CAAC;QACZ,iBAAW,GAAG,KAAK,CAAC;QAE3B,WAAW;QACJ,aAAO,GAAG,KAAK,CAAC;QAChB,aAAO,GAAG,KAAK,CAAC;QAChB,aAAO,GAAG,KAAK,CAAC;QAChB,qBAAe,GAAG,CAAC,CAAC;QACpB,cAAQ,GAAG,KAAK,CAAC;QACjB,sBAAgB,GAAG,CAAC,CAAC;QACrB,UAAI,GAAG,KAAK,CAAC;QACb,kBAAY,GAAG,CAAC,CAAC;QACjB,WAAK,GAAG,KAAK,CAAC;QACd,mBAAa,GAAG,CAAC,CAAC;QAClB,oBAAc,GAAG,KAAK,CAAC;QACvB,4BAAsB,GAAG,CAAC,CAAC;QAC3B,mBAAa,GAAG,KAAK,CAAC;QACtB,2BAAqB,GAAG,CAAC,CAAC;QAC1B,SAAG,GAAG,KAAK,CAAC;QACZ,iBAAW,GAAG,CAAC,CAAC;QAChB,YAAM,GAAG,KAAK,CAAC;QACf,oBAAc,GAAG,CAAC,CAAC;QACnB,mBAAa,GAAG,KAAK,CAAC;QACtB,2BAAqB,GAAG,CAAC,CAAC;QAC1B,uBAAiB,GAAG,KAAK,CAAC;QAC1B,+BAAyB,GAAG,CAAC,CAAC;QAErC,OAAO;QACA,eAAS,GAAG,KAAK,CAAC;QAClB,SAAG,GAAG,KAAK,CAAC;QACZ,eAAS,GAAG,KAAK,CAAC;QAClB,sBAAgB,GAAG,KAAK,CAAC;QACzB,uBAAiB,GAAG,KAAK,CAAC;QAC1B,eAAS,GAAG,KAAK,CAAC;QAClB,kBAAY,GAAG,KAAK,CAAC;QACrB,2BAAqB,GAAG,CAAC,CAAC;QAC1B,0BAAoB,GAAG,CAAC,CAAC;QACzB,kBAAY,GAAG,CAAC,CAAC;QACjB,sBAAgB,GAAG,KAAK,CAAC;QACzB,eAAS,GAAG,KAAK,CAAC;QAClB,gBAAU,GAAG,KAAK,CAAC;QACnB,gBAAU,GAAG,KAAK,CAAC;QACnB,gBAAU,GAAG,KAAK,CAAC;QACnB,iBAAW,GAAG,KAAK,CAAC;QACpB,eAAS,GAAG,KAAK,CAAC;QAClB,iBAAW,GAAG,KAAK,CAAC;QACpB,kBAAY,GAAG,KAAK,CAAC;QACrB,yBAAmB,GAAG,KAAK,CAAC;QAC5B,0BAAoB,GAAG,KAAK,CAAC;QAC7B,sBAAgB,GAAG,KAAK,CAAC,CAAC,0CAA0C;QAOvE,KAAI,CAAC,OAAO,EAAE,CAAC;;IACnB,CAAC;IACL,2BAAC;AAAD,CAAC,CAxEyC,yFAAe,GAwExD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC7E6D;AACa;AACb;AACY;AACJ;AAED;AAER;AAG6E;AAE5F;AAEmC;AACjB;AACA;AAEhE,aAAa;AACb,IAAM,cAAc,GAAG,mBAAO,CAAC,0EAAgC,CAAC,CAAC,OAAO,CAAC;AACzE,IAAM,iBAAiB,GAAG,mBAAO,CAAC,gFAAmC,CAAC,CAAC,OAAO,CAAC;AAC/E,IAAM,mBAAmB,GAAG,mBAAO,CAAC,oFAAqC,CAAC,CAAC,OAAO,CAAC;AACnF,IAAM,YAAY,GAAG,mBAAO,CAAC,sEAA8B,CAAC,CAAC,OAAO,CAAC;AACrE,IAAM,aAAa,GAAG,mBAAO,CAAC,wEAA+B,CAAC,CAAC,OAAO,CAAC;AACvE,IAAM,YAAY,GAAG,mBAAO,CAAC,sDAAsB,CAAC,CAAC,OAAO,CAAC;AAC7D,IAAM,cAAc,GAAG,mBAAO,CAAC,sDAAsB,CAAC,CAAC,OAAO,CAAC;AAE/D;;GAEG;AACH,IAAY,SAIX;AAJD,WAAY,SAAS;IACjB,yCAAQ;IACR,6CAAM;IACN,yDAAY;AAChB,CAAC,EAJW,SAAS,KAAT,SAAS,QAIpB;AACD;;GAEG;AACH,IAAY,gBAGX;AAHD,WAAY,gBAAgB;IACxB,mEAAc;IACd,yEAAa;AACjB,CAAC,EAHW,gBAAgB,KAAhB,gBAAgB,QAG3B;AACD;;GAEG;AACH,IAAY,gBAIX;AAJD,WAAY,gBAAgB;IACxB,uDAAQ;IACR,+EAAgB;IAChB,iFAAiB;AACrB,CAAC,EAJW,gBAAgB,KAAhB,gBAAgB,QAI3B;AACD;;GAEG;AACH,IAAY,QAIX;AAJD,WAAY,QAAQ;IAChB,qCAAO;IACP,yCAAK;IACL,uCAAI;AACR,CAAC,EAJW,QAAQ,KAAR,QAAQ,QAInB;AAED;;;;;;;;;GASG;AACH;IAAmC,uEAAY;IAwc/C,YAAY;IACZ,YAAY;IAER;;OAEG;IACH,uBAAmB,IAAY,EAAE,KAAY;;QAA7C,YACI,kBAAM,IAAI,EAAE,KAAK,CAAC,SAgBrB;QA9dL,oBAAoB;QACpB,kBAAkB;QAEN,qBAAe,GAA0B,IAAI,CAAC;QACtD;;WAEG;QAEI,oBAAc,GAA0B,IAAI,CAAC;QAG5C,sBAAgB,GAA0B,IAAI,CAAC;QACvD;;WAEG;QAEI,qBAAe,GAA0B,IAAI,CAAC;QAG7C,kBAAY,GAA0B,IAAI,CAAC;QACnD;;WAEG;QAEI,iBAAW,GAA0B,IAAI,CAAC;QAGzC,mBAAa,GAA0B,IAAI,CAAC;QACpD;;WAEG;QAEI,kBAAY,GAA0B,IAAI,CAAC;QAG1C,2BAAqB,GAA0B,IAAI,CAAC;QAC5D;;;WAGG;QAEI,0BAAoB,GAA0B,IAAI,CAAC;QAGlD,0BAAoB,GAA0B,IAAI,CAAC;QAC3D;;;WAGG;QAEI,yBAAmB,GAA0B,IAAI,CAAC;QAGjD,iBAAW,GAA0B,IAAI,CAAC;QAClD;;WAEG;QAEI,gBAAU,GAA0B,IAAI,CAAC;QAGxC,oBAAc,GAA0B,IAAI,CAAC;QACrD;;WAEG;QAEI,mBAAa,GAA0B,IAAI,CAAC;QAG3C,0BAAoB,GAA0B,IAAI,CAAC;QAC3D;;WAEG;QAEI,yBAAmB,GAA0B,IAAI,CAAC;QAGjD,6BAAuB,GAA0B,IAAI,CAAC;QAC9D;;WAEG;QAEI,4BAAsB,GAA0B,IAAI,CAAC;QAyBhE,YAAY;QAEZ,4BAA4B;QACxB;;WAEG;QACa,2BAAqB,GAAG,EAAE,CAAC;QAC3C;;WAEG;QACa,uBAAiB,GAAG,KAAK,CAAC;QAC1C;;WAEG;QACa,oBAAc,GAAG,KAAK,CAAC;QACvC;;WAEG;QACa,cAAQ,GAAG,IAAI,CAAC;QAChC;;WAEG;QACa,qBAAe,GAAG,IAAI,CAAC;QACvC;;WAEG;QACa,oBAAc,GAAG,KAAK,CAAC;QAC/B,0BAAoB,GAAG,KAAK,CAAC;QAiB7B,sBAAgB,GAAG,KAAK,CAAC;QACjC;;WAEG;QAEI,qBAAe,GAAG,KAAK,CAAC;QAEvB,uBAAiB,GAAG,KAAK,CAAC;QAClC;;WAEG;QAEI,sBAAgB,GAAG,KAAK,CAAC;QAExB,kBAAY,GAAG,GAAG,CAAC;QAC3B;;WAEG;QAEI,iBAAW,GAAG,GAAG,CAAC;QAC7B,YAAY;QAEZ,gBAAgB;QACZ;;WAEG;QAEI,kBAAY,GAAG,IAAI,iEAAM,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;QAChD;;WAEG;QAEI,kBAAY,GAAG,IAAI,iEAAM,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;QAChD;;;;WAIG;QACO,wBAAkB,GAAG,IAAI,iEAAM,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;QACzD;;WAEG;QAEI,mBAAa,GAAG,IAAI,iEAAM,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;QACjD;;WAEG;QAEI,gBAAU,GAAG,IAAI,iEAAM,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;QACjD;;WAEG;QAEI,cAAQ,GAAG,IAAI,iEAAM,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;QAC5C;;WAEG;QAEI,kBAAY,GAAG,IAAI,iEAAM,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;QACpD,YAAY;QAEZ,0BAA0B;QACd,gBAAU,GAAG,GAAG,CAAC;QAQjB,wBAAkB,GAAG,GAAG,CAAC;QASzB,uBAAiB,GAAG,GAAG,CAAC;QASxB,iBAAW,GAAG,GAAG,CAAC;QASlB,iBAAW,GAAG,GAAG,CAAC;QASlB,4BAAsB,GAAG,GAAG,CAAC;QAS7B,6BAAuB,GAAG,GAAG,CAAC;QAS9B,qBAAe,GAAG,CAAC,CAAC;QASpB,sBAAgB,GAAG,CAAC,CAAC;QASrB,cAAQ,GAAG,CAAC,CAAC;QASb,mBAAa,GAAG,GAAG,CAAC;QASpB,+BAAyB,GAAG,GAAG,CAAC;QAShC,yBAAmB,GAAG,GAAG,CAAC;QAS1B,yBAAmB,GAAG,GAAG,CAAC;QAS1B,yBAAmB,GAAG,GAAG,CAAC;QAS1B,0BAAoB,GAAG,GAAG,CAAC;QAW3B,gBAAU,GAAG,KAAK,CAAC;QAEpB,eAAS,GAAG,KAAK,CAAC;QACjB,iBAAW,GAAG,KAAK,CAAC;QAapB,gBAAU,GAAG,SAAS,CAAC,IAAI,CAAC;QACpC,cAAc;QAEP,eAAS,GAAc,SAAS,CAAC,IAAI,CAAC;QAGrC,uBAAiB,GAAqB,gBAAgB,CAAC,IAAI,CAAC;QAe7D,sBAAgB,GAAqB,gBAAgB,CAAC,aAAa,CAAC;QAEnE,eAAS,GAAa,QAAQ,CAAC,IAAI,CAAC;QA8BpC,sBAAgB,GAAG,QAAQ,CAAC,KAAK,CAAC;QAEnC,qBAAe,GAAa,QAAQ,CAAC,KAAK,CAAC;QAC1C,oBAAc,GAAG,QAAQ,CAAC,IAAI,CAAC;QAkCnC,eAAe;QACf,IAAI,CAAC,uEAAM,CAAC,oBAAoB,CAAC,mBAAmB,EAAE;YAClD,uEAAM,CAAC,oBAAoB,CAAC,mBAAmB,GAAG,cAAc,CAAC;YACjE,uEAAM,CAAC,oBAAoB,CAAC,sBAAsB,GAAG,iBAAiB,CAAC;YACvE,uEAAM,CAAC,oBAAoB,CAAC,wBAAwB,GAAG,mBAAmB,CAAC;YAC3E,uEAAM,CAAC,oBAAoB,CAAC,kBAAkB,GAAG,aAAa,CAAC;YAC/D,uEAAM,CAAC,oBAAoB,CAAC,iBAAiB,GAAG,YAAY,CAAC;YAC7D,uEAAM,CAAC,YAAY,CAAC,iBAAiB,GAAG,YAAY,CAAC;YACrD,uEAAM,CAAC,YAAY,CAAC,mBAAmB,GAAG,cAAc,CAAC;SAC5D;QAED,sBAAsB;QACtB,KAAI,CAAC,2BAA2B,GAAG,KAAI,CAAC,2BAA2B,IAAI,EAAE,CAAC;QAC1E,WAAI,CAAC,2BAA2B,EAAC,IAAI,WAAI,sGAA8B,EAAE,EAAE;;IAC/E,CAAC;IAvYD,sBAAc,2CAAgB;QAH9B;;WAEG;aACH;YACI,OAAO;gBACH,IAAI,CAAC,eAAe;gBACpB,IAAI,CAAC,gBAAgB;gBACrB,IAAI,CAAC,YAAY;gBACjB,IAAI,CAAC,aAAa;gBAClB,IAAI,CAAC,qBAAqB;gBAC1B,IAAI,CAAC,oBAAoB;gBACzB,IAAI,CAAC,WAAW;gBAChB,IAAI,CAAC,cAAc;gBACnB,IAAI,CAAC,oBAAoB;gBACzB,IAAI,CAAC,uBAAuB;aAC/B,CAAC;QACN,CAAC;;;OAAA;IAID,sBAAc,iDAAsB;QAHpC;;WAEG;aACH;YACI,OAAO,IAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC,UAAC,CAAC,IAAK,QAAC,KAAK,IAAI,EAAV,CAAU,CAAkB,CAAC;QAC5E,CAAC;;;OAAA;IAkCD,sBAAW,8CAAmB;QAL9B;;;WAGG;aAEH;YACI,OAAO,IAAI,CAAC,oBAAoB,CAAC;QACrC,CAAC;aACD,UAA+B,KAAc;YACzC,IAAM,QAAQ,GAAG,KAAK,IAAI,IAAI,CAAC,QAAQ,EAAE,CAAC,SAAS,EAAE,CAAC,OAAO,EAAE,CAAC,sBAAsB,CAAC;YACvF,IAAI,IAAI,CAAC,oBAAoB,KAAK,QAAQ,EAAE;gBACxC,IAAI,CAAC,oBAAoB,GAAG,QAAQ,CAAC;gBACrC,IAAI,CAAC,4BAA4B,EAAE,CAAC;aACvC;QACL,CAAC;;;OAPA;IAyED,sBAAW,oCAAS;aAApB;YACI,OAAO,IAAI,CAAC,UAAU,CAAC;QAC3B,CAAC;aACD,UAAqB,KAAa;YAC9B,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;QAC5B,CAAC;;;OAHA;IAMD,sBAAW,4CAAiB;aAA5B;YACI,OAAO,IAAI,CAAC,kBAAkB,CAAC;QACnC,CAAC;aACD,UAA6B,KAAa;YACtC,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC,CAAC;YAC9D,IAAI,CAAC,8BAA8B,EAAE,CAAC;QAC1C,CAAC;;;OAJA;IAOD,sBAAW,2CAAgB;aAA3B;YACI,OAAO,IAAI,CAAC,iBAAiB,CAAC;QAClC,CAAC;aACD,UAA4B,KAAa;YACrC,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC,CAAC;YAC7D,IAAI,CAAC,8BAA8B,EAAE,CAAC;QAC1C,CAAC;;;OAJA;IAOD,sBAAW,qCAAU;aAArB;YACI,OAAO,IAAI,CAAC,WAAW,CAAC;QAC5B,CAAC;aACD,UAAsB,KAAa;YAC/B,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC,CAAC;YACxD,IAAI,CAAC,8BAA8B,EAAE,CAAC;QAC1C,CAAC;;;OAJA;IAOD,sBAAW,qCAAU;aAArB;YACI,OAAO,IAAI,CAAC,WAAW,CAAC;QAC5B,CAAC;aACD,UAAsB,KAAa;YAC/B,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC,CAAC;YACvD,IAAI,CAAC,8BAA8B,EAAE,CAAC;QAC1C,CAAC;;;OAJA;IAOD,sBAAW,gDAAqB;aAAhC;YACI,OAAO,IAAI,CAAC,sBAAsB,CAAC;QACvC,CAAC;aACD,UAAiC,KAAa;YAC1C,IAAI,CAAC,sBAAsB,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC,CAAC;YAClE,IAAI,CAAC,8BAA8B,EAAE,CAAC;QAC1C,CAAC;;;OAJA;IAOD,sBAAW,iDAAsB;aAAjC;YACI,OAAO,IAAI,CAAC,uBAAuB,CAAC;QACxC,CAAC;aACD,UAAkC,KAAa;YAC3C,IAAI,CAAC,uBAAuB,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC,CAAC;YACnE,IAAI,CAAC,8BAA8B,EAAE,CAAC;QAC1C,CAAC;;;OAJA;IAOD,sBAAW,yCAAc;aAAzB;YACI,OAAO,IAAI,CAAC,eAAe,CAAC;QAChC,CAAC;aACD,UAA0B,KAAa;YACnC,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC,CAAC;YAC3D,IAAI,CAAC,8BAA8B,EAAE,CAAC;QAC1C,CAAC;;;OAJA;IAOD,sBAAW,0CAAe;aAA1B;YACI,OAAO,IAAI,CAAC,gBAAgB,CAAC;QACjC,CAAC;aACD,UAA2B,KAAa;YACpC,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,CAAC,GAAG,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC,CAAC;YAC9D,IAAI,CAAC,8BAA8B,EAAE,CAAC;QAC1C,CAAC;;;OAJA;IAOD,sBAAW,kCAAO;aAAlB;YACI,OAAO,IAAI,CAAC,QAAQ,CAAC;QACzB,CAAC;aACD,UAAmB,KAAa;YAC5B,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC,CAAC;YACpD,IAAI,CAAC,8BAA8B,EAAE,CAAC;QAC1C,CAAC;;;OAJA;IAOD,sBAAW,uCAAY;aAAvB;YACI,OAAO,IAAI,CAAC,aAAa,CAAC;QAC9B,CAAC;aACD,UAAwB,KAAa;YACjC,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,EAAE,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC,CAAC;YAC1D,IAAI,CAAC,kCAAkC,EAAE,CAAC;QAC9C,CAAC;;;OAJA;IAOD,sBAAW,mDAAwB;aAAnC;YACI,OAAO,IAAI,CAAC,yBAAyB,CAAC;QAC1C,CAAC;aACD,UAAoC,KAAa;YAC7C,IAAI,CAAC,yBAAyB,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,CAAC,GAAG,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC,CAAC;YACtE,IAAI,CAAC,kCAAkC,EAAE,CAAC;QAC9C,CAAC;;;OAJA;IAOD,sBAAW,6CAAkB;aAA7B;YACI,OAAO,IAAI,CAAC,mBAAmB,CAAC;QACpC,CAAC;aACD,UAA8B,KAAa;YACvC,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC,CAAC;YAC/D,IAAI,CAAC,kCAAkC,EAAE,CAAC;QAC9C,CAAC;;;OAJA;IAOD,sBAAW,6CAAkB;aAA7B;YACI,OAAO,IAAI,CAAC,mBAAmB,CAAC;QACpC,CAAC;aACD,UAA8B,KAAa;YACvC,IAAI,CAAC,mBAAmB,GAAG,KAAK,CAAC;YACjC,IAAI,CAAC,4BAA4B,EAAE,CAAC;QACxC,CAAC;;;OAJA;IAOD,sBAAW,6CAAkB;aAA7B;YACI,OAAO,IAAI,CAAC,mBAAmB,CAAC;QACpC,CAAC;aACD,UAA8B,KAAa;YACvC,IAAI,CAAC,mBAAmB,GAAG,KAAK,CAAC;YACjC,IAAI,CAAC,4BAA4B,EAAE,CAAC;QACxC,CAAC;;;OAJA;IAOD,sBAAW,8CAAmB;aAA9B;YACI,OAAO,IAAI,CAAC,oBAAoB,CAAC;QACrC,CAAC;aACD,UAA+B,KAAa;YACxC,IAAI,CAAC,oBAAoB,GAAG,KAAK,CAAC;YAClC,IAAI,CAAC,4BAA4B,EAAE,CAAC;QACxC,CAAC;;;OAJA;IAYD,sBAAW,qCAAU;aAArB;YACI,OAAO,IAAI,CAAC,WAAW,CAAC;QAC5B,CAAC;aACD,UAAsB,KAAc;YAChC,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;YACzB,IAAI,KAAK,EAAE;gBACP,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC;aAC/B;YACD,IAAI,CAAC,4BAA4B,EAAE,CAAC;QACxC,CAAC;;;OAPA;IAgBD,sBAAW,2CAAgB;aAA3B;YACI,OAAO,IAAI,CAAC,iBAAiB,CAAC;QAClC,CAAC;aACD,UAA4B,KAAuB;YAC/C,IAAI,CAAC,iBAAiB,GAAG,KAAK,CAAC;YAC/B,IAAI,KAAK,KAAK,gBAAgB,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,eAAe,EAAE;gBAC1D;;mBAEG;gBACH,IAAI,CAAC,eAAe,GAAG,IAAI,6EAAoB,CAAC,IAAI,CAAC,QAAQ,EAAE,EAAE,IAAI,CAAC,CAAC;aAC1E;YACD,IAAI,CAAC,4BAA4B,EAAE,CAAC;QACxC,CAAC;;;OAVA;IAgBD,sBAAW,mCAAQ;aAAnB;YACE,OAAO,IAAI,CAAC,SAAS,CAAC;QACxB,CAAC;aACD,UAAoB,KAAe;YAC/B,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;YACvB,QAAQ,IAAI,CAAC,SAAS,EAAE;gBACpB,KAAK,QAAQ,CAAC,GAAG;oBACb,UAAU;oBACV,IAAI,CAAC,eAAe,GAAG,KAAK,CAAC;oBAC7B,IAAI,CAAC,eAAe,GAAG,2EAAQ,CAAC,wBAAwB,CAAC;oBACzD,IAAI,CAAC,gBAAgB,GAAG,KAAK,CAAC;oBAC9B,MAAM;gBACV,KAAK,QAAQ,CAAC,KAAK;oBACf,sBAAsB;oBACtB,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC;oBAC5B,IAAI,CAAC,eAAe,GAAG,2EAAQ,CAAC,+BAA+B,CAAC;oBAChE,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC;oBAC7B,MAAM;gBACV,KAAK,QAAQ,CAAC,IAAI;oBACd,4BAA4B;oBAC5B,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC;oBAC5B,IAAI,CAAC,eAAe,GAAG,2EAAQ,CAAC,wBAAwB,CAAC;oBACzD,IAAI,CAAC,gBAAgB,GAAG,KAAK,CAAC;oBAC9B,MAAM;aACb;YACD,IAAI,CAAC,4BAA4B,EAAE,CAAC;QACxC,CAAC;;;OAxBA;IA8BD;;;OAGG;IACI,4CAAoB,GAA3B;QACI,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,QAAQ,CAAC;QACpC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,gBAAgB,CAAC;IAC1C,CAAC;IACD;;;OAGG;IACI,8CAAsB,GAA7B;QACI,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,cAAc,CAAC;IACxC,CAAC;IACD;;OAEG;IACI,8CAAsB,GAA7B;QACI,IAAI,CAAC,IAAI,CAAC,eAAe,EAAE;YACvB,OAAO,EAAE,CAAC;SACb;QACD,OAAO,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC;IACrC,CAAC;IA0BD;;;OAGG;IACI,yCAAiB,GAAxB,UAAyB,IAAkB,EAAE,OAAgB,EAAE,YAAoB;QAApB,mDAAoB;QAC/E,IAAI,OAAO,CAAC,MAAM,IAAI,IAAI,CAAC,QAAQ,EAAE;YACjC,IAAI,IAAI,CAAC,mBAAmB,EAAE;gBAC1B,OAAO,IAAI,CAAC;aACf;SACJ;QAED,IAAI,CAAC,OAAO,CAAC,gBAAgB,EAAE;YAC3B,OAAO,CAAC,gBAAgB,GAAG,IAAI,6EAAoB,EAAE,CAAC;SACzD;QAED,IAAM,KAAK,GAAG,IAAI,CAAC,QAAQ,EAAE,CAAC;QAC9B,IAAM,OAAO,GAAG,OAAO,CAAC,gBAAwC,CAAC;QACjE,IAAI,CAAC,IAAI,CAAC,qBAAqB,IAAI,OAAO,CAAC,MAAM,EAAE;YAC/C,IAAI,OAAO,CAAC,SAAS,KAAK,KAAK,CAAC,WAAW,EAAE,EAAE;gBAC3C,OAAO,IAAI,CAAC;aACf;SACJ;QAED,IAAM,MAAM,GAAG,KAAK,CAAC,SAAS,EAAE,CAAC;QAEjC,SAAS;QACT,OAAO,CAAC,YAAY,GAAG,uFAAc,CAAC,uBAAuB,CACzD,KAAK,EACL,IAAI,EACJ,OAAO,EACP,IAAI,CAAC,iBAAiB,EACtB,IAAI,CAAC,qBAAqB,EAC1B,IAAI,CAAC,gBAAgB,CACxB,CAAC;QAEF,IAAI,IAAI,CAAC,gBAAgB,KAAK,gBAAgB,CAAC,IAAI,EAAE;YACjD,2BAA2B;YAC3B,OAAO,CAAC,YAAY,GAAG,IAAI,CAAC;SAC/B;QAED,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,CAAC;QAE3B,YAAY;QACZ,uFAAc,CAAC,0BAA0B,CAAC,KAAK,EAAE,OAAO,CAAC,CAAC;QAE1D,WAAW;QACX,2CAA2C;QAC3C,oBAAoB;QACpB,IAAI,OAAO,CAAC,iBAAiB,EAAE;YAC3B,OAAO,CAAC,QAAQ,GAAG,KAAK,CAAC;YACzB,OAAO,CAAC,OAAO,GAAG,KAAK,CAAC;YACxB,OAAO,CAAC,OAAO,GAAG,KAAK,CAAC;YAExB,IAAI,KAAK,CAAC,eAAe,EAAE;gBACvB,kBAAkB;gBAClB,IAAI,CAAC,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,eAAe,EAAE,OAAO,EAAE,SAAS,CAAC;uBAC9D,CAAC,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,gBAAgB,EAAE,OAAO,EAAE,UAAU,CAAC;uBACnE,CAAC,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,aAAa,EAAE,OAAO,EAAE,OAAO,CAAC;uBAC7D,CAAC,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,qBAAqB,EAAE,OAAO,EAAE,gBAAgB,CAAC;uBAC9E,CAAC,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,oBAAoB,EAAE,OAAO,EAAE,eAAe,CAAC;uBAC5E,CAAC,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,WAAW,EAAE,OAAO,EAAE,KAAK,CAAC;uBACzD,CAAC,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,cAAc,EAAE,OAAO,EAAE,QAAQ,CAAC;uBAC/D,CAAC,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,oBAAoB,EAAE,OAAO,EAAE,eAAe,CAAC;uBAC5E,CAAC,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,uBAAuB,EAAE,OAAO,EAAE,mBAAmB,CAAC,EACxF;oBACE,OAAO,KAAK,CAAC;iBAChB;gBACD,IAAI,KAAK,CAAC,SAAS,EAAE,CAAC,OAAO,EAAE,CAAC,mBAAmB,IAAI,IAAI,CAAC,YAAY,EAAE;oBACtE,uCAAuC;oBACvC,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,OAAO,EAAE,EAAE;wBAC9B,OAAO,KAAK,CAAC;qBAChB;oBACD,uFAAc,CAAC,yBAAyB,CAAC,IAAI,CAAC,YAAY,EAAE,OAAO,EAAE,MAAM,CAAC,CAAC;iBAChF;qBAAM;oBACH,OAAO,CAAC,IAAI,GAAG,KAAK,CAAC;iBACxB;gBAED,OAAO,CAAC,gBAAgB,GAAG,CAAC,IAAI,CAAC,gBAAgB,IAAI,IAAI,CAAC,iBAAiB,CAAC;aAC/E;iBAAM;gBACH,OAAO,CAAC,OAAO,GAAG,KAAK,CAAC;gBACxB,OAAO,CAAC,QAAQ,GAAG,KAAK,CAAC;gBACzB,OAAO,CAAC,KAAK,GAAG,KAAK,CAAC;gBACtB,OAAO,CAAC,cAAc,GAAG,KAAK,CAAC;gBAC/B,OAAO,CAAC,aAAa,GAAG,KAAK,CAAC;gBAC9B,OAAO,CAAC,GAAG,GAAG,KAAK,CAAC;gBACpB,OAAO,CAAC,MAAM,GAAG,KAAK,CAAC;gBACvB,OAAO,CAAC,aAAa,GAAG,KAAK,CAAC;gBAC9B,OAAO,CAAC,IAAI,GAAG,KAAK,CAAC;gBACrB,OAAO,CAAC,iBAAiB,GAAG,KAAK,CAAC;aACrC;YAED,OAAO,CAAC,gBAAgB,GAAG,CAAC,IAAI,CAAC,SAAS,KAAK,2EAAS,CAAC,mBAAmB,IAAI,IAAI,CAAC,SAAS,KAAK,2EAAS,CAAC,8BAA8B,CAAC,CAAC;SAChJ;QAED,QAAQ;QACR,uFAAc,CAAC,qBAAqB,CAChC,IAAI,EACJ,KAAK,EACL,IAAI,CAAC,oBAAoB,EACzB,IAAI,CAAC,WAAW,EAChB,IAAI,CAAC,UAAU,EACf,IAAI,CAAC,sBAAsB,CAAC,IAAI,CAAC,EACjC,OAAO,CACV,CAAC;QAEF,UAAU;QACV,uFAAc,CAAC,2BAA2B,CACtC,IAAI,EACJ,OAAO,EACP,IAAI,CAAC,cAAc,EACnB,IAAI,CAAC,QAAQ,EACb,IAAI,CAAC,eAAe,EACpB,IAAI,CAAC,cAAc,CACtB,CAAC;QAEF,kDAAkD;QAClD,uFAAc,CAAC,iCAAiC,CAC5C,KAAK,EACL,MAAM,EACN,OAAO,EACP,YAAY,CACf,CAAC;QAEF,qBAAqB;QACrB,IAAI,OAAO,CAAC,OAAO,EAAE;YACjB,OAAO,CAAC,eAAe,EAAE,CAAC;YAE1B,YAAY;YACZ,IAAM,SAAS,GAAG,IAAI,gFAAe,EAAE,CAAC;YAExC,IAAI,OAAO,CAAC,IAAI,EAAE;gBACd,SAAS,CAAC,WAAW,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC;aACpC;YAED,IAAI,OAAO,CAAC,GAAG,EAAE;gBACb,SAAS,CAAC,WAAW,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC;aACnC;YAED,IAAI,OAAO,CAAC,SAAS,EAAE;gBACnB,SAAS,CAAC,WAAW,CAAC,CAAC,EAAE,WAAW,CAAC,CAAC;aACzC;YAED,IAAI,OAAO,CAAC,gBAAgB,EAAE;gBAC1B,SAAS,CAAC,WAAW,CAAC,CAAC,EAAE,kBAAkB,CAAC,CAAC;aAChD;YAED,uFAAc,CAAC,yBAAyB,CAAC,OAAO,EAAE,SAAS,EAAE,IAAI,CAAC,qBAAqB,CAAC,CAAC;YAEzF,IAAI,OAAO,CAAC,SAAS,EAAE;gBACnB,SAAS,CAAC,WAAW,CAAC,CAAC,EAAE,WAAW,CAAC,CAAC;aACzC;YAED,aAAa;YACb,IAAM,OAAO,GAAG,CAAC,0EAAY,CAAC,YAAY,CAAC,CAAC;YAE5C,IAAI,OAAO,CAAC,MAAM,EAAE;gBAChB,OAAO,CAAC,IAAI,CAAC,0EAAY,CAAC,UAAU,CAAC,CAAC;aACzC;YAED,IAAI,OAAO,CAAC,OAAO,EAAE;gBACjB,OAAO,CAAC,IAAI,CAAC,0EAAY,CAAC,WAAW,CAAC,CAAC;aAC1C;YAED,IAAI,OAAO,CAAC,GAAG,EAAE;gBACb,OAAO,CAAC,IAAI,CAAC,0EAAY,CAAC,MAAM,CAAC,CAAC;aACrC;YAED,IAAI,OAAO,CAAC,GAAG,EAAE;gBACb,OAAO,CAAC,IAAI,CAAC,0EAAY,CAAC,OAAO,CAAC,CAAC;aACtC;YAED,uFAAc,CAAC,yBAAyB,CAAC,OAAO,EAAE,IAAI,EAAE,OAAO,EAAE,SAAS,CAAC,CAAC;YAC5E,uFAAc,CAAC,6BAA6B,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC;YAC/D,uFAAc,CAAC,gCAAgC,CAAC,OAAO,EAAE,IAAI,EAAE,OAAO,CAAC,CAAC;YAExE,IAAM,UAAU,GAAG,OAAO,CAAC;YAE3B,IAAM,QAAQ,GAAG;gBACb,OAAO,EAAE,MAAM,EAAE,gBAAgB,EAAE,aAAa;gBAChD,YAAY,EAAE,QAAQ;gBACtB,YAAY,EAAE,aAAa,EAAE,aAAa,EAAE,aAAa;gBACzD,WAAW,EAAE,WAAW,EAAE,WAAW;gBACrC,aAAa,EAAE,0BAA0B,EAAE,qBAAqB,EAAE,kBAAkB;gBAEpF,eAAe,EAAE,eAAe,EAAE,eAAe;gBACjD,gBAAgB,EAAE,gBAAgB,EAAE,gBAAgB;gBACpD,YAAY,EAAE,YAAY;gBAC1B,aAAa,EAAE,aAAa,EAAE,aAAa;gBAC3C,qBAAqB,EAAE,qBAAqB;gBAC5C,oBAAoB,EAAE,oBAAoB;gBAC1C,WAAW,EAAE,WAAW,EAAE,WAAW;gBACrC,cAAc,EAAE,cAAc;gBAC9B,eAAe,EAAE,oBAAoB,EAAE,oBAAoB;gBAC3D,QAAQ,EAAE,WAAW;gBAErB,kBAAkB,EAAE,mBAAmB,EAAE,YAAY,EAAE,YAAY;gBACnE,gBAAgB,EAAE,iBAAiB,EAAE,SAAS;gBAC9C,uBAAuB,EAAE,wBAAwB;gBACjD,cAAc,EAAE,0BAA0B,EAAE,oBAAoB;gBAChE,oBAAoB,EAAE,oBAAoB,EAAE,qBAAqB;gBAEjE,cAAc,EAAE,QAAQ,EAAE,MAAM;aACnC,CAAC;YAEF,IAAM,QAAQ,GAAG;gBACb,gBAAgB,EAAE,iBAAiB,EAAE,aAAa,EAAE,aAAa;gBACjE,cAAc,EAAE,sBAAsB,EAAE,qBAAqB;gBAC7D,YAAY,EAAE,eAAe,EAAE,qBAAqB;gBACpD,wBAAwB;aAC3B,CAAC;YAEF,IAAM,cAAc,GAAG,CAAC,UAAU,EAAE,OAAO,CAAC,CAAC;YAE7C,uFAAc,CAAC,8BAA8B,CAAC;gBAC1C,aAAa,EAAE,QAAQ;gBACvB,mBAAmB,EAAE,cAAc;gBACnC,QAAQ;gBACR,OAAO;gBACP,qBAAqB,EAAE,IAAI,CAAC,qBAAqB;aAC7C,CAAC,CAAC;YAEV,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,CAAC;YAE3B,IAAM,IAAI,GAAG,OAAO,CAAC,QAAQ,EAAE,CAAC;YAEhC,IAAM,cAAc,GAAG,OAAO,CAAC,MAAM,CAAC;YACtC,IAAI,MAAM,GAAG,KAAK,CAAC,SAAS,EAAE,CAAC,YAAY,CAAC,UAAU,EAAE;gBACpD,UAAU,EAAE,OAAO;gBACnB,aAAa,EAAE,QAAQ;gBACvB,mBAAmB,EAAE,cAAc;gBACnC,QAAQ;gBACR,OAAO,EAAE,IAAI;gBACb,SAAS;gBACT,UAAU,EAAE,IAAI,CAAC,UAAU;gBAC3B,OAAO,EAAE,IAAI,CAAC,OAAO;gBACrB,eAAe,EAAE;oBACb,qBAAqB,EAAE,IAAI,CAAC,qBAAqB;oBACjD,2BAA2B,EAAE,OAAO,CAAC,qBAAqB;iBAC7D;aACG,EAAE,MAAM,CAAC,CAAC;YAElB,IAAI,MAAM,EAAE;gBACR,iDAAiD;gBACjD,IAAI,IAAI,CAAC,sBAAsB,IAAI,cAAc,IAAI,CAAC,MAAM,CAAC,OAAO,EAAE,EAAE;oBACpE,MAAM,GAAG,cAAc,CAAC;oBACxB,OAAO,CAAC,iBAAiB,EAAE,CAAC;iBAC/B;qBAAM;oBACH,KAAK,CAAC,mBAAmB,EAAE,CAAC;oBAC5B,OAAO,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,CAAC;oBACnC,IAAI,CAAC,kBAAkB,EAAE,CAAC;iBAC7B;aACJ;SACJ;QAED,IAAI,CAAC,OAAO,CAAC,MAAM,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,OAAO,EAAE,EAAE;YAC9C,OAAO,KAAK,CAAC;SAChB;QAED,OAAO,CAAC,SAAS,GAAG,KAAK,CAAC,WAAW,EAAE,CAAC;QACxC,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC;QAEhC,OAAO,IAAI,CAAC;IAChB,CAAC;IAED;;;;OAIG;IACI,sCAAc,GAArB,UAAsB,KAAa,EAAE,IAAU,EAAE,OAAgB;QAC7D,IAAM,KAAK,GAAG,IAAI,CAAC,QAAQ,EAAE,CAAC;QAC9B,IAAM,OAAO,GAAG,OAAO,CAAC,gBAAwC,CAAC;QACjE,IAAM,MAAM,GAAG,OAAO,CAAC,MAAM,CAAC;QAC9B,IAAI,CAAC,OAAO,IAAI,CAAC,MAAM,EAAE;YACrB,OAAO;SACV;QACD,IAAI,CAAC,aAAa,GAAG,MAAM,CAAC;QAE5B,IAAI,CAAC,mBAAmB,CAAC,KAAK,CAAC,CAAC;QAChC,uFAAc,CAAC,mBAAmB,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;QAEjD,IAAM,UAAU,GAAG,KAAK,CAAC,uBAAuB,CAAC,IAAI,EAAE,MAAM,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC;QAEhF,IAAI,UAAU,EAAE;YACZ,IAAI,CAAC,cAAc,CAAC,YAAY,CAAC,MAAM,EAAE,UAAU,CAAC,CAAC;YACrD,IAAI,CAAC,kBAAkB,CAAC,MAAM,CAAC,CAAC;YAEhC,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,MAAM,IAAI,CAAC,IAAI,CAAC,QAAQ,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,MAAM,EAAE;gBAC9E,IAAI,KAAK,CAAC,eAAe,EAAE;oBACvB,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,eAAe,EAAE,MAAM,EAAE,SAAS,EAAE,eAAe,CAAC,CAAC;oBAC3E,MAAM,CAAC,QAAQ,CAAC,aAAa,EAAE,IAAI,CAAC,YAAY,CAAC,CAAC;oBAClD,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,gBAAgB,EAAE,MAAM,EAAE,UAAU,EAAE,gBAAgB,CAAC,CAAC;oBAC9E,IAAI,IAAI,CAAC,YAAY,EAAE;wBACnB,IAAI,CAAC,cAAc,CAAC,YAAY,CAC5B,YAAY,EACZ,IAAI,CAAC,YAAY,CAAC,gBAAgB,EAClC,GAAG,GAAG,IAAI,CAAC,YAAY,CAAC,KAAK,EAC7B,IAAI,CAAC,UAAU,CAClB,CAAC;wBACF,IAAM,MAAM,GAAG,IAAI,CAAC,YAAY,CAAC,gBAAgB,EAAE,CAAC;wBACpD,IAAI,CAAC,MAAM,CAAC,eAAe,EAAE,EAAE;4BAC3B,IAAI,CAAC,cAAc,CAAC,YAAY,CAAC,YAAY,EAAE,MAAM,CAAC,CAAC;yBAC1D;wBACD,MAAM,CAAC,UAAU,CAAC,aAAa,EAAE,IAAI,CAAC,YAAY,CAAC,CAAC;wBACpD,2CAA2C;wBAC3C,IAAI,KAAK,CAAC,uBAAuB,EAAE;4BAC/B,IAAI,CAAC,cAAc,CAAC,YAAY,CAAC,qBAAqB,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;yBACrE;6BAAM;4BACH,IAAI,CAAC,cAAc,CAAC,YAAY,CAAC,qBAAqB,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,CAAC,CAAC;yBACvE;qBACJ;oBACD,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,aAAa,EAAE,MAAM,EAAE,OAAO,EAAE,aAAa,CAAC,CAAC;oBACrE,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,qBAAqB,EAAE,MAAM,EAAE,eAAe,EAAE,qBAAqB,CAAC,CAAC;oBAC7F,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,oBAAoB,EAAE,MAAM,EAAE,cAAc,EAAE,oBAAoB,CAAC,CAAC;oBAC1F,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,WAAW,EAAE,MAAM,EAAE,KAAK,EAAE,WAAW,CAAC,CAAC;oBAC/D,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,cAAc,EAAE,MAAM,EAAE,QAAQ,EAAE,cAAc,CAAC,CAAC;oBACxE,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,oBAAoB,EAAE,MAAM,EAAE,cAAc,EAAE,oBAAoB,CAAC,CAAC;oBAC1F,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,uBAAuB,EAAE,MAAM,EAAE,iBAAiB,EAAE,uBAAuB,CAAC,CAAC;iBACtG;aACJ;YAED,aAAa;YACb,IAAI,IAAI,CAAC,WAAW,EAAE;gBAClB,IAAI,CAAC,cAAc,CAAC,WAAW,CAAC,WAAW,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;aAChE;YAED,IAAI,CAAC,cAAc,CAAC,WAAW,CAAC,YAAY,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC;YAE/D,iBAAiB;YACjB,IAAI,CAAC,cAAc,CAAC,WAAW,CAAC,mBAAmB,EAAE,IAAI,CAAC,kBAAkB,CAAC,CAAC;YAC9E,IAAI,CAAC,cAAc,CAAC,WAAW,CAAC,kBAAkB,EAAE,IAAI,CAAC,iBAAiB,CAAC,CAAC;YAC5E,IAAI,CAAC,cAAc,CAAC,WAAW,CAAC,YAAY,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC;YAChE,IAAI,CAAC,cAAc,CAAC,WAAW,CAAC,YAAY,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC;YAChE,IAAI,CAAC,cAAc,CAAC,WAAW,CAAC,uBAAuB,EAAE,IAAI,CAAC,sBAAsB,CAAC,CAAC;YACtF,IAAI,CAAC,cAAc,CAAC,WAAW,CAAC,wBAAwB,EAAE,IAAI,CAAC,uBAAuB,CAAC,CAAC;YACxF,IAAI,CAAC,cAAc,CAAC,WAAW,CAAC,gBAAgB,EAAE,IAAI,CAAC,eAAe,CAAC,CAAC;YACxE,IAAI,CAAC,cAAc,CAAC,WAAW,CAAC,iBAAiB,EAAE,IAAI,CAAC,gBAAgB,CAAC,CAAC;YAC1E,IAAI,CAAC,cAAc,CAAC,WAAW,CAAC,SAAS,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;YAC1D,IAAI,CAAC,cAAc,CAAC,WAAW,CAAC,cAAc,EAAE,IAAI,CAAC,aAAa,CAAC,CAAC;YACpE,IAAI,CAAC,cAAc,CAAC,WAAW,CAAC,0BAA0B,EAAE,IAAI,CAAC,yBAAyB,CAAC,CAAC;YAC5F,IAAI,CAAC,cAAc,CAAC,WAAW,CAAC,oBAAoB,EAAE,IAAI,CAAC,mBAAmB,CAAC,CAAC;YAChF,IAAI,CAAC,cAAc,CAAC,WAAW,CAAC,oBAAoB,EAAE,IAAI,CAAC,mBAAmB,CAAC,CAAC;YAChF,IAAI,CAAC,cAAc,CAAC,WAAW,CAAC,oBAAoB,EAAE,IAAI,CAAC,mBAAmB,CAAC,CAAC;YAChF,IAAI,CAAC,cAAc,CAAC,WAAW,CAAC,qBAAqB,EAAE,IAAI,CAAC,oBAAoB,CAAC,CAAC;YAElF,aAAa;YACb,uFAAc,CAAC,aAAa,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC;YAE5C,SAAS;YACT,KAAK,CAAC,YAAY,CAAC,aAAa,CAAC,IAAI,CAAC,YAAY,EAAE,IAAI,CAAC,kBAAkB,CAAC,CAAC;YAC7E,MAAM,CAAC,SAAS,CAAC,eAAe,EAAE,IAAI,CAAC,kBAAkB,CAAC,CAAC;YAC3D,IAAI,CAAC,cAAc,CAAC,YAAY,CAAC,eAAe,EAAE,IAAI,CAAC,YAAY,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;YACjF,IAAI,CAAC,cAAc,CAAC,YAAY,CAAC,gBAAgB,EAAE,IAAI,CAAC,aAAa,CAAC,CAAC;YACvE,IAAI,CAAC,cAAc,CAAC,YAAY,CAAC,aAAa,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC;YACjE,IAAI,CAAC,cAAc,CAAC,YAAY,CAAC,WAAW,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;YAC7D,IAAI,CAAC,cAAc,CAAC,YAAY,CAAC,eAAe,EAAE,IAAI,CAAC,YAAY,EAAE,GAAG,CAAC,CAAC;YAE1E,uFAAc,CAAC,eAAe,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC;YAC9C,MAAM,CAAC,UAAU,CAAC,QAAQ,EAAE,KAAK,CAAC,YAAa,CAAC,QAAQ,CAAC,CAAC;SAC7D;QAED,IAAI,UAAU,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE;YAC9B,yBAAyB;YACzB,IAAI,KAAK,CAAC,aAAa,IAAI,CAAC,IAAI,CAAC,eAAe,EAAE;gBAC9C,uFAAc,CAAC,UAAU,CAAC,KAAK,EAAE,IAAI,EAAE,MAAM,EAAE,OAAO,EAAE,IAAI,CAAC,qBAAqB,CAAC,CAAC;aACvF;YAED,OAAO;YACP,IAAI,KAAK,CAAC,UAAU,IAAI,IAAI,CAAC,QAAQ,IAAI,KAAK,CAAC,OAAO,KAAK,2DAAK,CAAC,YAAY,EAAE;gBAC3E,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;aACzB;YAED,MAAM;YACN,uFAAc,CAAC,iBAAiB,CAAC,KAAK,EAAE,IAAI,EAAE,MAAM,CAAC,CAAC;YAEtD,gBAAgB;YAChB,IAAI,OAAO,CAAC,qBAAqB,EAAE;gBAC/B,uFAAc,CAAC,yBAAyB,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;aAC1D;YAED,aAAa;YACb,uFAAc,CAAC,YAAY,CAAC,OAAO,EAAE,MAAM,EAAE,KAAK,CAAC,CAAC;SACvD;QACD,MAAM,CAAC,QAAQ,CAAC,QAAQ,EAAE,KAAK,CAAC,SAAS,EAAE,CAAC,cAAc,CAAC,KAAK,CAAC,YAAa,CAAC,CAAC,CAAC;QACjF,MAAM,CAAC,QAAQ,CAAC,WAAW,EAAE,GAAG,CAAC,CAAC;QAClC,IAAM,CAAC,GAAG,MAAM,CAAC,WAAW,CAAC,GAAG,EAAE,GAAG,IAAI,CAAC;QAC1C,MAAM,CAAC,UAAU,CAAC,MAAM,EAAE,IAAI,kEAAO,CACjC,CAAC,GAAG,EAAE,EACN,CAAC,EACD,CAAC,GAAG,CAAC,EACL,CAAC,GAAG,CAAC,CACR,CAAC,CAAC;QAEH,IAAI,CAAC,cAAc,CAAC,MAAM,EAAE,CAAC;QAC7B,IAAI,CAAC,UAAU,CAAC,IAAI,EAAE,IAAI,CAAC,aAAa,CAAC,CAAC;IAC9C,CAAC;IAED;;OAEG;IACI,sCAAc,GAArB;QACI,IAAM,OAAO,GAAkB,EAAE,CAAC;QAClC,KAAsB,UAA2B,EAA3B,SAAI,CAAC,sBAAsB,EAA3B,cAA2B,EAA3B,IAA2B,EAAE;YAA9C,IAAM,OAAO;YACd,IAAI,OAAO,CAAC,UAAU,IAAI,OAAO,CAAC,UAAU,CAAC,MAAM,GAAG,CAAC,EAAE;gBACrD,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;aACzB;SACJ;QAED,OAAO,OAAO,CAAC;IACnB,CAAC;IAED;;OAEG;IACI,yCAAiB,GAAxB;QACI,OAAO,iBAAM,iBAAiB,WAAE,CAAC,MAAM,CAAC,IAAI,CAAC,sBAAsB,CAAC,CAAC;IACzE,CAAC;IAED;;OAEG;IACI,kCAAU,GAAjB,UAAkB,OAAoB;QAClC,IAAI,iBAAM,UAAU,YAAC,OAAO,CAAC,EAAE;YAC3B,OAAO,IAAI,CAAC;SACf;QACD,OAAO,IAAI,CAAC,sBAAsB,CAAC,MAAM,GAAG,CAAC,CAAC;IAClD,CAAC;IAED;;OAEG;IACI,+BAAO,GAAd,UACI,kBAA4B,EAC5B,oBAA8B,EAC9B,cAAwB;QAExB,OAAO,IAAI,CAAC,eAAe,CAAC;QAC5B,IAAI,oBAAoB,EAAE;YACtB,KAAsB,UAA2B,EAA3B,SAAI,CAAC,sBAAsB,EAA3B,cAA2B,EAA3B,IAA2B,EAAE;gBAA9C,IAAM,OAAO;gBACd,OAAO,CAAC,OAAO,EAAE,CAAC;aACrB;SACJ;QACD,iBAAM,OAAO,YAAC,kBAAkB,EAAE,oBAAoB,EAAE,cAAc,CAAC,CAAC;IAC5E,CAAC;IAED;;;;;;OAMG;IACO,0CAAkB,GAA5B;QACI,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC,eAAe,EAAE,CAAC,CAAC,CAAC;QACnD,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC,eAAe,EAAE,CAAC,CAAC,CAAC;QACnD,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC,eAAe,EAAE,EAAE,CAAC,CAAC;QAEpD,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC,gBAAgB,EAAE,CAAC,CAAC,CAAC;QACpD,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC,gBAAgB,EAAE,CAAC,CAAC,CAAC;QACpD,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC,gBAAgB,EAAE,EAAE,CAAC,CAAC;QAErD,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC,YAAY,EAAE,CAAC,CAAC,CAAC;QAChD,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC,YAAY,EAAE,EAAE,CAAC,CAAC;QAEjD,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC,aAAa,EAAE,CAAC,CAAC,CAAC;QACjD,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC,aAAa,EAAE,CAAC,CAAC,CAAC;QACjD,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC,aAAa,EAAE,EAAE,CAAC,CAAC;QAElD,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC,qBAAqB,EAAE,CAAC,CAAC,CAAC;QACzD,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC,qBAAqB,EAAE,EAAE,CAAC,CAAC;QAE1D,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC,oBAAoB,EAAE,CAAC,CAAC,CAAC;QACxD,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC,oBAAoB,EAAE,EAAE,CAAC,CAAC;QAEzD,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC;QAC/C,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC;QAC/C,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC,WAAW,EAAE,EAAE,CAAC,CAAC;QAEhD,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC,cAAc,EAAE,CAAC,CAAC,CAAC;QAClD,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC,cAAc,EAAE,EAAE,CAAC,CAAC;QAEnD,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC,eAAe,EAAE,CAAC,CAAC,CAAC;QACnD,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC,oBAAoB,EAAE,CAAC,CAAC,CAAC;QACxD,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC,oBAAoB,EAAE,EAAE,CAAC,CAAC;QAEzD,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC,uBAAuB,EAAE,CAAC,CAAC,CAAC;QAC3D,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC,uBAAuB,EAAE,EAAE,CAAC,CAAC;QAE5D,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC,qBAAqB,EAAE,CAAC,CAAC,CAAC;QACzD,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC;QAC/C,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC,YAAY,EAAE,CAAC,CAAC,CAAC;QAEhD,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC,kBAAkB,EAAE,CAAC,CAAC,CAAC;QACtD,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC,mBAAmB,EAAE,CAAC,CAAC,CAAC;QACvD,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC,YAAY,EAAE,CAAC,CAAC,CAAC;QAChD,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC,YAAY,EAAE,CAAC,CAAC,CAAC;QAChD,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC,uBAAuB,EAAE,CAAC,CAAC,CAAC;QAC3D,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC,wBAAwB,EAAE,CAAC,CAAC,CAAC;QAC5D,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC,gBAAgB,EAAE,CAAC,CAAC,CAAC;QACpD,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC,iBAAiB,EAAE,CAAC,CAAC,CAAC;QACrD,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC,SAAS,EAAE,CAAC,CAAC,CAAC;QAC7C,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC,cAAc,EAAE,CAAC,CAAC,CAAC;QAClD,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC,0BAA0B,EAAE,CAAC,CAAC,CAAC;QAC9D,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC,oBAAoB,EAAE,CAAC,CAAC,CAAC;QACxD,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC,oBAAoB,EAAE,CAAC,CAAC,CAAC;QACxD,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC,oBAAoB,EAAE,CAAC,CAAC,CAAC;QACxD,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC,qBAAqB,EAAE,CAAC,CAAC,CAAC;QAEzD,IAAI,CAAC,cAAc,CAAC,MAAM,EAAE,CAAC;IACjC,CAAC;IAED;;;;;;OAMG;IACK,mCAAW,GAAnB,UAAoB,OAA8B,EAAE,MAAc,EAAE,IAAY,EAAE,QAAgB;QAC9F,IAAI,CAAC,OAAO,EAAE;YACV,OAAO;SACV;QACD,IAAI,CAAC,cAAc,CAAC,YAAY,CAAC,QAAQ,EAAE,OAAO,CAAC,gBAAgB,EAAE,OAAO,CAAC,KAAK,CAAC,CAAC;QACpF,IAAM,MAAM,GAAG,OAAO,CAAC,gBAAgB,EAAE,CAAC;QAC1C,IAAI,CAAC,MAAM,CAAC,eAAe,EAAE,EAAE;YAC3B,IAAI,CAAC,cAAc,CAAC,YAAY,CAAI,IAAI,WAAQ,EAAE,MAAM,CAAC,CAAC;SAC7D;QACD,MAAM,CAAC,UAAU,CAAI,IAAI,YAAS,EAAE,OAAO,CAAC,CAAC;IACjD,CAAC;IAED;;;;;OAKG;IACK,yCAAiB,GAAzB,UAA0B,OAA8B,EAAE,OAAY,EAAE,GAAW;QAC/E,IAAI,CAAC,OAAO,EAAE;YACV,OAAO,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC;YACrB,OAAO,IAAI,CAAC;SACf;QACD,IAAI,CAAC,OAAO,CAAC,oBAAoB,EAAE,EAAE;YACjC,OAAO,KAAK,CAAC;SAChB;QACD,uFAAc,CAAC,yBAAyB,CAAC,OAAO,EAAE,OAAO,EAAE,GAAG,CAAC,CAAC;QAChE,OAAO,IAAI,CAAC;IAChB,CAAC;IAED;;OAEG;IACK,oCAAY,GAApB,UAAqB,OAAY;QAC7B,IAAI,IAAI,CAAC,WAAW,KAAK,OAAO,CAAC,UAAU,EAAE;YACzC,OAAO,CAAC,UAAU,GAAG,IAAI,CAAC,WAAW,CAAC;YACtC,OAAO,CAAC,iBAAiB,EAAE,CAAC;SAC/B;QACD,QAAQ,IAAI,CAAC,UAAU,EAAE;YACrB,KAAK,SAAS,CAAC,MAAM;gBACjB,IAAI,OAAO,CAAC,kBAAkB,KAAK,IAAI,EAAE;oBACrC,OAAO,CAAC,kBAAkB,GAAG,IAAI,CAAC;oBAClC,OAAO,CAAC,wBAAwB,GAAG,KAAK,CAAC;oBACzC,OAAO,CAAC,iBAAiB,EAAE,CAAC;iBAC/B;gBACD,MAAM;YACV,KAAK,SAAS,CAAC,YAAY;gBACvB,IAAI,OAAO,CAAC,wBAAwB,KAAK,IAAI,EAAE;oBAC3C,OAAO,CAAC,kBAAkB,GAAG,KAAK,CAAC;oBACnC,OAAO,CAAC,wBAAwB,GAAG,IAAI,CAAC;oBACxC,OAAO,CAAC,iBAAiB,EAAE,CAAC;iBAC/B;gBACD,MAAM;YACV,KAAK,SAAS,CAAC,IAAI;gBACf,IAAI,OAAO,CAAC,kBAAkB,KAAK,IAAI,EAAE;oBACrC,OAAO,CAAC,kBAAkB,GAAG,KAAK,CAAC;oBACnC,OAAO,CAAC,iBAAiB,EAAE,CAAC;iBAC/B;gBACD,IAAI,OAAO,CAAC,wBAAwB,KAAK,IAAI,EAAE;oBAC3C,OAAO,CAAC,wBAAwB,GAAG,KAAK,CAAC;oBACzC,OAAO,CAAC,iBAAiB,EAAE,CAAC;iBAC/B;gBACD,MAAM;SACb;QACD,QAAQ,IAAI,CAAC,gBAAgB,EAAE;YAC3B,KAAK,gBAAgB,CAAC,gBAAgB;gBAClC,IAAI,OAAO,CAAC,yBAAyB,KAAK,IAAI,EAAE;oBAC5C,OAAO,CAAC,yBAAyB,GAAG,IAAI,CAAC;oBACzC,OAAO,CAAC,0BAA0B,GAAG,KAAK,CAAC;oBAC3C,OAAO,CAAC,iBAAiB,EAAE,CAAC;iBAC/B;gBACD,MAAM;YACV,KAAK,gBAAgB,CAAC,iBAAiB;gBACnC,IAAI,OAAO,CAAC,0BAA0B,KAAK,IAAI,EAAE;oBAC7C,OAAO,CAAC,yBAAyB,GAAG,KAAK,CAAC;oBAC1C,OAAO,CAAC,0BAA0B,GAAG,IAAI,CAAC;oBAC1C,OAAO,CAAC,iBAAiB,EAAE,CAAC;iBAC/B;gBACD,MAAM;YACV,KAAK,gBAAgB,CAAC,IAAI;gBACtB,IAAI,OAAO,CAAC,0BAA0B,KAAK,KAAK,IAAI,OAAO,CAAC,yBAAyB,KAAK,KAAK,EAAE;oBAC7F,OAAO,CAAC,0BAA0B,GAAG,KAAK,CAAC;oBAC3C,OAAO,CAAC,yBAAyB,GAAG,KAAK,CAAC;oBAC1C,OAAO,CAAC,iBAAiB,EAAE,CAAC;iBAC/B;gBACD,MAAM;SACb;QACD,QAAQ,IAAI,CAAC,gBAAgB,EAAE;YAC3B,KAAK,gBAAgB,CAAC,UAAU;gBAC5B,IAAI,OAAO,CAAC,yBAAyB,KAAK,IAAI,EAAE;oBAC5C,OAAO,CAAC,yBAAyB,GAAG,IAAI,CAAC;oBACzC,OAAO,CAAC,yBAAyB,GAAG,KAAK,CAAC;oBAC1C,OAAO,CAAC,iBAAiB,EAAE,CAAC;iBAC/B;gBACD,MAAM;YACV,KAAK,gBAAgB,CAAC,aAAa;gBAC/B,IAAI,OAAO,CAAC,yBAAyB,KAAK,IAAI,EAAE;oBAC5C,OAAO,CAAC,yBAAyB,GAAG,KAAK,CAAC;oBAC1C,OAAO,CAAC,yBAAyB,GAAG,IAAI,CAAC;oBACzC,OAAO,CAAC,iBAAiB,EAAE,CAAC;iBAC/B;gBACD,MAAM;SACb;IACL,CAAC;IAEL,cAAc;IACV;;OAEG;IACI,oCAAY,GAAnB;QACI,OAAO,eAAe,CAAC;IAC3B,CAAC;IAED;;OAEG;IACI,2CAAmB,GAA1B;QACI,OAAO,IAAI,CAAC,cAAc,CAAC;IAC/B,CAAC;IAED;;OAEG;IACI,yCAAiB,GAAxB;QACI,OAAO,IAAI,CAAC,WAAW,CAAC;IAC5B,CAAC;IAED;;OAEG;IACI,wCAAgB,GAAvB;QACI,OAAO,IAAI,CAAC,UAAU,CAAC;IAC3B,CAAC;IAED;;OAEG;IACI,6BAAK,GAAZ,UAAa,IAAY;QAAzB,iBAOC;QANG,IAAM,MAAM,GAAG,mFAAmB,CAAC,KAAK,CAAC,cAAM,WAAI,aAAa,CAAC,IAAI,EAAE,KAAI,CAAC,QAAQ,EAAE,CAAC,EAAxC,CAAwC,EAAE,IAAI,CAAC,CAAC;QAE/F,MAAM,CAAC,IAAI,GAAG,IAAI,CAAC;QACnB,MAAM,CAAC,EAAE,GAAG,IAAI,CAAC;QAEjB,OAAO,MAAM,CAAC;IAClB,CAAC;IAED;;OAEG;IACI,iCAAS,GAAhB;QACI,OAAO,mFAAmB,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;IAC/C,CAAC;IAED;;OAEG;IACW,mBAAK,GAAnB,UAAoB,cAAmB,EAAE,KAAY,EAAE,OAAe;QAClE,OAAO,mFAAmB,CAAC,KAAK,CAAC,cAAM,WAAI,aAAa,CAAC,cAAc,CAAC,IAAI,EAAE,KAAK,CAAC,EAA7C,CAA6C,EAAE,cAAc,EAAE,KAAK,EAAE,OAAO,CAAC,CAAC;IAC1H,CAAC;IAjoCD;QADC,0FAAkB,CAAC,gBAAgB,CAAC;0DACiB;IAKtD;QADC,wFAAgB,CAAC,yCAAyC,CAAC;yDACR;IAGpD;QADC,0FAAkB,CAAC,iBAAiB,CAAC;2DACiB;IAKvD;QADC,wFAAgB,CAAC,kCAAkC,CAAC;0DACA;IAGrD;QADC,0FAAkB,CAAC,aAAa,CAAC;uDACiB;IAKnD;QADC,wFAAgB,CAAC,kCAAkC,CAAC;sDACJ;IAGjD;QADC,0FAAkB,CAAC,cAAc,CAAC;wDACiB;IAKpD;QADC,wFAAgB,CAAC,kCAAkC,CAAC;uDACH;IAGlD;QADC,0FAAkB,CAAC,sBAAsB,CAAC;gEACiB;IAM5D;QADC,wFAAgB,CAAC,kCAAkC,CAAC;+DACK;IAG1D;QADC,0FAAkB,CAAC,qBAAqB,CAAC;+DACiB;IAM3D;QADC,wFAAgB,CAAC,kCAAkC,CAAC;8DACI;IAGzD;QADC,0FAAkB,CAAC,YAAY,CAAC;sDACiB;IAKlD;QADC,wFAAgB,CAAC,kCAAkC,CAAC;qDACL;IAGhD;QADC,0FAAkB,CAAC,eAAe,CAAC;yDACiB;IAKrD;QADC,wFAAgB,CAAC,kCAAkC,CAAC;wDACF;IAGnD;QADC,0FAAkB,CAAC,qBAAqB,CAAC;+DACiB;IAK3D;QADC,wFAAgB,CAAC,kCAAkC,CAAC;8DACI;IAGzD;QADC,0FAAkB,CAAC,qBAAqB,CAAC;kEACoB;IAK9D;QADC,wFAAgB,CAAC,kCAAkC,CAAC;iEACO;IA0D5D;QADC,iFAAS,EAAE;4DAGX;IASD;QADC,iFAAS,CAAC,iBAAiB,CAAC;2DACI;IAKjC;QADC,wFAAgB,CAAC,gCAAgC,CAAC;0DACpB;IAE/B;QADC,iFAAS,CAAC,kBAAkB,CAAC;4DACI;IAKlC;QADC,wFAAgB,CAAC,kCAAkC,CAAC;2DACrB;IAEhC;QADC,iFAAS,CAAC,aAAa,CAAC;uDACE;IAK3B;QADC,wFAAgB,CAAC,gCAAgC,CAAC;sDAC1B;IAQzB;QADC,yFAAiB,CAAC,SAAS,CAAC;uDACmB;IAKhD;QADC,iFAAS,CAAC,SAAS,CAAC;uDAC2B;IAWhD;QADC,iFAAS,CAAC,UAAU,CAAC;wDAC2B;IAKjD;QADC,iFAAS,CAAC,OAAO,CAAC;qDAC8B;IAKjD;QADC,iFAAS,CAAC,KAAK,CAAC;mDAC2B;IAK5C;QADC,iFAAS,CAAC,SAAS,CAAC;uDAC2B;IAMhD;QADC,iFAAS,EAAE;kDAGX;IAMD;QADC,iFAAS,EAAE;0DAGX;IAOD;QADC,iFAAS,EAAE;yDAGX;IAOD;QADC,iFAAS,EAAE;mDAGX;IAOD;QADC,iFAAS,EAAE;mDAGX;IAOD;QADC,iFAAS,EAAE;8DAGX;IAOD;QADC,iFAAS,EAAE;+DAGX;IAOD;QADC,iFAAS,EAAE;uDAGX;IAOD;QADC,iFAAS,EAAE;wDAGX;IAOD;QADC,iFAAS,EAAE;gDAGX;IAOD;QADC,iFAAS,EAAE;qDAGX;IAOD;QADC,iFAAS,EAAE;iEAGX;IAOD;QADC,iFAAS,EAAE;2DAGX;IAOD;QADC,iFAAS,EAAE;2DAGX;IAOD;QADC,iFAAS,EAAE;2DAGX;IAOD;QADC,iFAAS,EAAE;4DAGX;IAOD;QADC,iFAAS,CAAC,WAAW,CAAC;qDACI;IAE3B;QADC,wFAAgB,CAAC,8BAA8B,CAAC;oDACxB;IAGzB;QADC,iFAAS,EAAE;mDAGX;IASD;QADC,iFAAS,CAAC,WAAW,CAAC;qDACa;IAGpC;QADC,wFAAgB,CAAC,8BAA8B,CAAC;oDACJ;IAkB7C;QADC,wFAAgB,CAAC,8BAA8B,CAAC;2DAC0B;IAI3E;QADC,iFAAS,EAAE;iDAGX;IA0BD;QADC,iFAAS,EAAE;2DAC8B;IAE1C;QADC,wFAAgB,CAAC,8BAA8B,CAAC;0DACC;IAytBtD,oBAAC;CAAA,CAvoCkC,mFAAY,GAuoC9C;AAvoCyB;;;;;;;;;;;;;ACrE1B;AAAA;AAAA;AAAA;AAA8D;AAK4B;AAI1F,IAAM,SAAS,GAAG,cAAc,CAAC;AAEjC;;;GAGG;AACH;IAWI;;;OAGG;IACH,8BACW,KAAY,EACZ,QAAuB;QADvB,UAAK,GAAL,KAAK,CAAO;QACZ,aAAQ,GAAR,QAAQ,CAAe;QAR1B,qBAAgB,GAAG,KAAK,CAAC;QAU7B,IAAI,CAAC,IAAI,GAAM,SAAS,SAAI,QAAQ,CAAC,IAAI,SAAI,oBAAoB,CAAC,UAAU,EAAI,CAAC;QACjF,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;QAC/B,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,SAAS,EAAE,CAAC;IAC1C,CAAC;IAED;;;OAGG;IACI,uCAAQ,GAAf;QACI,IAAI,CAAC,KAAK,CAAC,yBAAyB,CAAC,YAAY,CAC7C,sFAAuB,CAAC,gCAAgC,EACxD,IAAI,EACJ,IAAI,CAAC,oBAAoB,CAC5B,CAAC;QACF,IAAI,CAAC,KAAK,CAAC,wBAAwB,CAAC,YAAY,CAC5C,sFAAuB,CAAC,+BAA+B,EACvD,IAAI,EACJ,IAAI,CAAC,mBAAmB,CAC3B,CAAC;IACN,CAAC;IAED;;OAEG;IACI,sCAAO,GAAd;QACI,sBAAsB;IAC1B,CAAC;IAED;;OAEG;IACI,sCAAO,GAAd;QACI,OAAO,IAAI,CAAC,KAAK,CAAC;QAClB,OAAO,IAAI,CAAC,QAAQ,CAAC;QACrB,OAAO,IAAI,CAAC,OAAO,CAAC;IACxB,CAAC;IAED;;OAEG;IACK,qCAAM,GAAd,UAAe,IAAU,EAAE,OAAgB,EAAE,KAAsB;QAC/D,IAAM,MAAM,GAAG,OAAO,CAAC,MAAM,CAAC;QAC9B,IAAI,CAAC,MAAM,IAAI,CAAC,MAAM,CAAC,OAAO,EAAE,EAAE;YAC9B,OAAO;SACV;QAED,IAAI,CAAC,QAAQ,CAAC,oBAAoB,EAAE,CAAC;QACrC,IAAI,CAAC,OAAO,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC;QAClC,IAAI,CAAC,KAAK,CAAC,OAAO,EAAE,MAAM,EAAE,2EAAQ,CAAC,gBAAgB,CAAC,CAAC;QAEvD,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC;QAE5B,WAAW;QACX,IAAI,CAAC,iBAAiB,CAClB,OAAO,EACP,MAAM,EACN,2EAAQ,CAAC,gBAAgB,EACzB,KAAK,EACL,IAAI,CAAC,4BAA4B,CAAC,OAAO,CAAC,GAAG,EAAE,KAAK,CAAC,EACrD,UAAC,UAAU,EAAE,KAAK,EAAE,iBAAiB;YAChC,iBAAmC,CAAC,cAAc,CAAC,KAAK,EAAE,IAAI,EAAE,OAAO,CAAC,CAAC;YAC1E,MAAM,CAAC,SAAS,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;YACjC,MAAM,CAAC,QAAQ,CAAC,WAAW,EAAE,GAAG,CAAC,CAAC;QACtC,CAAC,EACD,IAAI,CAAC,QAAQ,CAChB,CAAC;QAEF,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;QAC3B,IAAI,CAAC,QAAQ,CAAC,sBAAsB,EAAE,CAAC;IAC3C,CAAC;IAED;;OAEG;IACK,mDAAoB,GAA5B,UAA6B,IAAkB,EAAE,OAAgB,EAAE,KAAsB;QACrF,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,OAAO,CAAC,aAAa,EAAE,CAAC;QAErD,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,EAAE;YAC3B,OAAO;SACV;QAED,aAAa;QACb,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;QAClC,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,gBAAgB,EAAE,EAAE,OAAO,EAAE,KAAK,CAAC,CAAC;QACxD,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;IACtD,CAAC;IAED;;OAEG;IACK,kDAAmB,GAA3B,UAA4B,IAAkB,EAAE,OAAgB,EAAE,KAAsB;QACpF,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,EAAE;YAC3B,OAAO;SACV;QAED,IAAI,IAAI,CAAC,gBAAgB,EAAE;YACvB,cAAc;YACd,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;YACjC,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;YAClC,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,gBAAgB,EAAE,EAAE,OAAO,EAAE,KAAK,CAAC,CAAC;YACxD,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;SACpC;IACL,CAAC;IAED;;OAEG;IACK,2DAA4B,GAApC,UAAqC,SAAiB,EAAE,KAAsB;QAC1E,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE,CAAC,eAAe,CAAC;eACxC,CAAC,KAAK,CAAC,gBAAgB,CAAC,SAAS,CAAC,KAAK,IAAI,CAAC;eAC5C,CAAC,OAAO,KAAK,CAAC,gBAAgB,CAAC,SAAS,CAAC,KAAK,WAAW,CAAC,CAAC;IACtE,CAAC;IAEA;;MAEE;IACK,yCAAU,GAAlB,UAAmB,OAAgB;QAC/B,IAAM,QAAQ,GAAG,OAAO,CAAC,WAAW,EAA6B,CAAC;QAElE,IAAI,CAAC,QAAQ,IAAI,QAAQ,CAAC,YAAY,EAAE,KAAK,eAAe,IAAI,QAAQ,CAAC,sBAAsB,EAAE,KAAK,IAAI,CAAC,IAAI,EAAE;YAC7G,2BAA2B;YAC3B,OAAO,KAAK,CAAC;SAChB;QACD,OAAO,IAAI,CAAC;IAChB,CAAC;IA/Ia,+BAAU,GAAG,CAAC,CAAC;IAgJjC,2BAAC;CAAA;AAjJgC;;;;;;;;;;;;;AChBjC;AAAe,+HAAgE,wGAAwG,oDAAoD,qFAAqF,yFAAyF,+GAA+G,2FAA2F,oFAAoF,yIAAyI,oFAAoF,wJAAwJ,0DAA0D,mEAAmE,2B;;;;;;;;;;;;ACAzqC;AAAe,4FAA6B,sBAAsB,6BAA6B,gDAAgD,gCAAgC,6BAA6B,2BAA2B,+BAA+B,oEAAoE,iEAAiE,yDAAyD,qCAAqC,2DAA2D,4EAA4E,0EAA0E,uDAAuD,6DAA6D,0EAA0E,iFAAiF,oEAAoE,oCAAoC,6BAA6B,6BAA6B,wCAAwC,yCAAyC,iCAAiC,kCAAkC,0BAA0B,+BAA+B,2CAA2C,qCAAqC,qCAAqC,qCAAqC,sCAAsC,K;;;;;;;;;;;;ACAx/C;AAAe,6EAAc,EAAE,sBAAsB,EAAE,kCAAkC,EAAE,uCAAuC,EAAE,kEAAkE,EAAE,+BAA+B,EAAE,QAAQ,EAAE,sBAAsB,EAAE,sBAAsB,EAAE,cAAc,+FAA+F,EAAE,eAAe,EAAE,gBAAgB,EAAE,QAAQ,EAAE,sBAAsB,EAAE,sBAAsB,EAAE,gBAAgB,0DAA0D,EAAE,wCAAwC,EAAE,6DAA6D,EAAE,+BAA+B,EAAE,QAAQ,EAAE,sBAAsB,EAAE,sBAAsB,EAAE,cAAc,0FAA0F,EAAE,eAAe,EAAE,gBAAgB,EAAE,QAAQ,EAAE,sBAAsB,EAAE,sBAAsB,EAAE,gBAAgB,8DAA8D,EAAE,wCAAwC,EAAE,yEAAyE,EAAE,+BAA+B,EAAE,QAAQ,EAAE,sBAAsB,EAAE,sBAAsB,EAAE,cAAc,sGAAsG,EAAE,eAAe,EAAE,gBAAgB,EAAE,QAAQ,EAAE,sBAAsB,EAAE,sBAAsB,EAAE,gBAAgB,0DAA0D,EAAE,8CAA8C,EAAE,uEAAuE,EAAE,eAAe,EAAE,gBAAgB,EAAE,QAAQ,EAAE,sBAAsB,EAAE,gBAAgB,kDAAkD,EAAE,uEAAuE,EAAE,eAAe,EAAE,gBAAgB,EAAE,QAAQ,EAAE,uBAAuB,EAAE,sBAAsB,EAAE,gBAAgB,2FAA2F,EAAE,eAAe,EAAE,gBAAgB,EAAE,QAAQ,EAAE,uBAAuB,EAAE,sBAAsB,EAAE,gBAAgB,2DAA2D,EAAE,8CAA8C,EAAE,yEAAyE,EAAE,eAAe,EAAE,eAAe,EAAE,gBAAgB,EAAE,QAAQ,EAAE,sBAAsB,EAAE,sBAAsB,EAAE,sBAAsB,EAAE,gBAAgB,kDAAkD,EAAE,yEAAyE,EAAE,eAAe,EAAE,eAAe,EAAE,gBAAgB,EAAE,QAAQ,EAAE,sBAAsB,EAAE,sBAAsB,EAAE,sBAAsB,EAAE,gBAAgB,6FAA6F,EAAE,eAAe,EAAE,eAAe,EAAE,gBAAgB,EAAE,QAAQ,EAAE,sBAAsB,EAAE,sBAAsB,EAAE,sBAAsB,EAAE,gBAAgB,8EAA8E,EAAE,sDAAsD,EAAE,+BAA+B,EAAE,QAAQ,EAAE,sBAAsB,EAAE,cAAc,mFAAmF,EAAE,eAAe,EAAE,gBAAgB,EAAE,QAAQ,EAAE,sBAAsB,EAAE,gBAAgB,6EAA6E,0EAA0E,EAAE,6DAA6D,EAAE,aAAa,gCAAgC,EAAE,qEAAqE,EAAE,0BAA0B,iCAAiC,EAAE,sBAAsB,EAAE,0DAA0D,EAAE,aAAa,gIAAgI,EAAE,6BAA6B,wCAAwC,2CAA2C,8DAA8D,wBAAwB,aAAa,6B;;;;;;;;;;;;ACArqI;AAAe,+aAAgX,wBAAwB,+BAA+B,yBAAyB,4BAA4B,sBAAsB,4CAA4C,+CAA+C,8DAA8D,8DAA8D,qcAAqc,uDAAuD,uOAAuO,wDAAwD,qEAAqE,qEAAqE,uLAAuL,gGAAgG,iOAAiO,8FAA8F,4NAA4N,2EAA2E,6KAA6K,iFAAiF,4LAA4L,8FAA8F,4NAA4N,qGAAqG,6OAA6O,kIAAkI,yFAAyF,KAAK,2FAA2F,sDAAsD,KAAK,uHAAuH,yCAAyC,KAAK,4LAA4L,iDAAiD,qIAAqI,gDAAgD,sHAAsH,yEAAyE,uGAAuG,sHAAsH,kEAAkE,2GAA2G,kFAAkF,sDAAsD,yFAAyF,4EAA4E,gEAAgE,2LAA2L,kDAAkD,wJAAwJ,6DAA6D,8FAA8F,gDAAgD,4FAA4F,yEAAyE,gEAAgE,+HAA+H,oEAAoE,uEAAuE,sFAAsF,iHAAiH,6GAA6G,uGAAuG,uKAAuK,4DAA4D,2CAA2C,sKAAsK,2CAA2C,qDAAqD,+DAA+D,iGAAiG,uCAAuC,uGAAuG,iIAAiI,+DAA+D,uKAAuK,yEAAyE,6GAA6G,qEAAqE,wFAAwF,2DAA2D,4HAA4H,mGAAmG,gEAAgE,yCAAyC,2FAA2F,2HAA2H,8IAA8I,iIAAiI,sEAAsE,sHAAsH,8DAA8D,8DAA8D,KAAK,+KAA+K,kKAAkK,kIAAkI,uEAAuE,6CAA6C,8CAA8C,gFAAgF,uFAAuF,qHAAqH,8BAA8B,mEAAmE,0BAA0B,0BAA0B,kDAAkD,qDAAqD,0GAA0G,+CAA+C,qDAAqD,qDAAqD,8DAA8D,0FAA0F,4IAA4I,yJAAyJ,0CAA0C,8HAA8H,wHAAwH,iNAAiN,0FAA0F,2CAA2C,yFAAyF,+HAA+H,2CAA2C,KAAK,K;;;;;;;;;;;;ACAzvY;AAAe,wRAAyN,2CAA2C,uDAAuD,8CAA8C,+CAA+C,kLAAkL,0DAA0D,0FAA0F,6FAA6F,iFAAiF,uDAAuD,2CAA2C,idAAid,8GAA8G,2GAA2G,8EAA8E,uFAAuF,2GAA2G,gFAAgF,sHAAsH,uCAAuC,4BAA4B,yBAAyB,4CAA4C,qDAAqD,kEAAkE,wNAAwN,yDAAyD,sDAAsD,uDAAuD,6CAA6C,+BAA+B,2GAA2G,gFAAgF,aAAa,OAAO,iFAAiF,aAAa,0EAA0E,0EAA0E,6DAA6D,4GAA4G,gNAAgN,iDAAiD,mBAAmB,4DAA4D,sDAAsD,8EAA8E,SAAS,OAAO,+EAA+E,SAAS,mFAAmF,kFAAkF,qGAAqG,uEAAuE,wCAAwC,0JAA0J,oDAAoD,2CAA2C,oEAAoE,oCAAoC,iEAAiE,sGAAsG,4EAA4E,yGAAyG,kEAAkE,SAAS,qBAAqB,mEAAmE,SAAS,4GAA4G,oEAAoE,SAAS,qBAAqB,qEAAqE,SAAS,gGAAgG,4DAA4D,SAAS,qBAAqB,6DAA6D,SAAS,4FAA4F,8DAA8D,SAAS,OAAO,+DAA+D,SAAS,kHAAkH,8EAA8E,SAAS,OAAO,+EAA+E,SAAS,+GAA+G,4EAA4E,SAAS,OAAO,6EAA6E,SAAS,kFAAkF,0DAA0D,SAAS,OAAO,2DAA2D,SAAS,2FAA2F,gEAAgE,SAAS,OAAO,iEAAiE,SAAS,0HAA0H,kFAAkF,SAAS,OAAO,mFAAmF,SAAS,sNAAsN,K;;;;;;;;;;;;ACAxgP;AAAe,2NAA4J,6BAA6B,qDAAqD,2BAA2B,2BAA2B,4BAA4B,4BAA4B,4BAA4B,wBAAwB,wBAAwB,yBAAyB,yBAAyB,yBAAyB,iCAAiC,iCAAiC,gCAAgC,gCAAgC,uBAAuB,uBAAuB,uBAAuB,0BAA0B,0BAA0B,2BAA2B,gCAAgC,gCAAgC,mCAAmC,mCAAmC,gEAAgE,wBAAwB,yBAAyB,0DAA0D,gCAAgC,yBAAyB,yBAAyB,oCAAoC,qCAAqC,6BAA6B,8BAA8B,sBAAsB,2BAA2B,uCAAuC,iCAAiC,iCAAiC,iCAAiC,kCAAkC,MAAM,8CAA8C,4BAA4B,iDAAiD,4BAA4B,MAAM,K;;;;;;;;;;;;ACA/pD;AAAe,2GAA4C,sBAAsB,+BAA+B,2CAA2C,qCAAqC,qDAAqD,+BAA+B,iEAAiE,gCAAgC,yDAAyD,4BAA4B,2DAA2D,6BAA6B,4EAA4E,qCAAqC,0EAA0E,oCAAoC,uDAAuD,2BAA2B,6DAA6D,8BAA8B,0EAA0E,oCAAoC,iFAAiF,uCAAuC,8DAA8D,e;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAxoC;AAClB;AACmB;AACA;AACZ;AACkB;AACZ;AACR;AACV;AACL;AACI;AAEJ;AACS;AACG;AAC5B;AACgC;AAE9D,SAAe,IAAI;;;;;;oBACT,eAAe,GAAG,kBAAkB,EAAE,CAAC;oBACvC,MAAM,GAAG,QAAQ,CAAC,cAAc,CAAC,aAAa,CAAsB,CAAC;oBACrE,MAAM,GAAG,IAAI,qEAAM,CACrB,MAAM,EACN,IAAI,EACJ;wBACI,KAAK,EAAE,KAAK;wBACZ,oBAAoB,EAAE,eAAe,CAAC,MAAM;qBAC/C,CACJ,CAAC;oBAEI,KAAK,GAAG,IAAI,4DAAK,CAAC,MAAM,CAAC,CAAC;oBAC1B,MAAM,GAAG,IAAI,uFAAe,CAAC,aAAa,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,IAAI,kEAAO,CAAC,CAAC,EAAE,GAAG,EAAE,CAAC,CAAC,EAAE,KAAK,EAAE,IAAI,CAAC,CAAC;oBAChG,MAAM,CAAC,gBAAgB,GAAG,GAAG,CAAC;oBAC9B,MAAM,CAAC,gBAAgB,GAAG,EAAE,CAAC;oBAC7B,MAAM,CAAC,oBAAoB,GAAG,IAAI,CAAC;oBACnC,MAAM,CAAC,WAAW,CAAC,IAAI,kEAAO,CAAC,CAAC,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;oBAC5C,MAAM,CAAC,SAAS,CAAC,IAAI,kEAAO,CAAC,CAAC,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC;oBACzC,MAAM,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC;oBAE7B,KAAK,CAAC,wBAAwB,CAAC;wBAC3B,YAAY,EAAE,IAAI;wBAClB,YAAY,EAAE,KAAK;wBACnB,kBAAkB,EAAE,KAAK;wBACzB,kBAAkB,EAAE,KAAK;qBAC5B,CAAC,CAAC;oBAGG,gBAAgB,GAAG,IAAI,wFAAgB,CAAC,mBAAmB,EAAE,IAAI,kEAAO,CAAC,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC,EAAE,KAAK,CAAC,CAAC;oBACrG,gBAAgB,CAAC,QAAQ,GAAG,IAAI,kEAAO,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC;oBACpD,gBAAgB,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;oBAC5B,gBAAgB,GAAG,IAAI,wFAAgB,CAAC,mBAAmB,EAAE,IAAI,kEAAO,CAAC,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC;oBACvG,gBAAgB,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;oBAC7B,UAAU,GAAG,IAAI,4EAAU,CAAC,aAAa,EAAE,IAAI,kEAAO,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC;oBAC9E,UAAU,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;oBAGvB,sBAAsB,GAAG,gEAAI,CAAC,YAAY,CAAC,yBAAyB,EAAE,EAAE,EAAE,CAAC,EAAE,KAAK,CAAC,CAAC;oBAC1F,sBAAsB,CAAC,QAAQ,GAAG,IAAI,kEAAO,CAAC,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC;oBAC3D,sBAAsB,CAAC,cAAc,GAAG,IAAI,CAAC;oBAEvC,YAAY,GAAG,gEAAI,CAAC,eAAe,CAAC,cAAc,EAAE,CAAC,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC,CAAC;oBACvF,YAAY,CAAC,QAAQ,GAAG,IAAI,kEAAO,CAAC,CAAC,IAAI,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;oBACrD,YAAY,CAAC,UAAU,CAAC,eAAe,CAAC,MAAM,CAAC,CAAC;oBAChD,IAAI,eAAe,CAAC,MAAM,EAAE;wBAClB,eAAe,GAAG,IAAI,8FAAe,CAAC,IAAI,EAAE,gBAAgB,CAAC,CAAC;wBACpE,eAAe,CAAC,eAAe,CAAC,YAAY,CAAC,CAAC;qBACjD;oBAEK,cAAc,GAAoB,EAAE,CAAC;oBAC3C;wBACU,GAAG,GAAG,IAAI,8DAAa,CAAC,sBAAsB,EAAE,KAAK,CAAC,CAAC;wBAC7D,GAAG,CAAC,gBAAgB,GAAG,CAAC,CAAC;wBACzB,cAAc,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;qBAC5B;oBACD;wBACU,GAAG,GAAG,IAAI,8DAAa,CAAC,qBAAqB,EAAE,KAAK,CAAC,CAAC;wBAC5D,GAAG,CAAC,gBAAgB,GAAG,CAAC,CAAC;wBAEnB,OAAO,GAAG,IAAI,kFAAO,CAAC,gCAAgC,EAAE,KAAK,CAAC,CAAC;wBACrE,OAAO,CAAC,MAAM,GAAG,CAAC,CAAC;wBACnB,OAAO,CAAC,MAAM,GAAG,CAAC,CAAC;wBACnB,GAAG,CAAC,cAAc,GAAG,OAAO,CAAC;wBAC7B,GAAG,CAAC,YAAY,GAAG,GAAG,CAAC,cAAc,CAAC,KAAK,EAAE,CAAC;wBAC9C,GAAG,CAAC,UAAU,GAAG,IAAI,iEAAM,CAAC,KAAK,EAAE,KAAK,EAAE,KAAK,CAAC,CAAC;wBAC3C,IAAI,GAAG,IAAI,kFAAO,CAAC,gCAAgC,EAAE,KAAK,CAAC,CAAC;wBAClE,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;wBAChB,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;wBAChB,GAAG,CAAC,WAAW,GAAG,IAAI,CAAC;wBACvB,cAAc,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;qBAC5B;oBACD;wBACU,GAAG,GAAG,IAAI,8DAAa,CAAC,0BAA0B,EAAE,KAAK,CAAC,CAAC;wBACjE,GAAG,CAAC,gBAAgB,GAAG,CAAC,CAAC;wBACzB,+DAA+D;wBAC/D,GAAG,CAAC,cAAc,GAAG,IAAI,kFAAO,CAAC,kFAAkF,EAAE,KAAK,CAAC,CAAC;wBAC5H,GAAG,CAAC,YAAY,GAAG,GAAG,CAAC,cAAc,CAAC,KAAK,EAAE,CAAC;wBAC9C,GAAG,CAAC,UAAU,GAAG,IAAI,CAAC;wBACtB,cAAc,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;qBAC5B;oBACD;wBACU,GAAG,GAAG,IAAI,8DAAa,CAAC,kBAAkB,EAAE,KAAK,CAAC,CAAC;wBACzD,GAAG,CAAC,gBAAgB,GAAG,CAAC,CAAC;wBACzB,GAAG,CAAC,YAAY,GAAG,IAAI,iEAAM,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;wBACvC,GAAG,CAAC,UAAU,GAAG,IAAI,iEAAM,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;wBACrC,GAAG,CAAC,QAAQ,GAAG,IAAI,iEAAM,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;wBACnC,cAAc,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;qBAC5B;oBACD;wBACU,GAAG,GAAG,IAAI,8DAAa,CAAC,qBAAqB,EAAE,KAAK,CAAC,CAAC;wBAC5D,wFAAwF;wBACxF,GAAG,CAAC,aAAa,GAAG,IAAI,kFAAO,CAAC,sBAAsB,EAAE,KAAK,EAAE,IAAI,EAAE,KAAK,CAAC,CAAC;wBAC5E,GAAG,CAAC,YAAY,GAAG,IAAI,iEAAM,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;wBACvC,GAAG,CAAC,UAAU,GAAG,IAAI,iEAAM,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;wBACrC,cAAc,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;qBAC5B;oBACD;wBACU,GAAG,GAAG,IAAI,8DAAa,CAAC,qBAAqB,EAAE,KAAK,CAAC,CAAC;wBAC5D,GAAG,CAAC,gBAAgB,GAAG,CAAC,CAAC;wBAEnB,OAAO,GAAG,IAAI,kFAAO,CAAC,gCAAgC,EAAE,KAAK,CAAC,CAAC;wBACrE,OAAO,CAAC,MAAM,GAAG,CAAC,CAAC;wBACnB,OAAO,CAAC,MAAM,GAAG,CAAC,CAAC;wBACnB,GAAG,CAAC,cAAc,GAAG,OAAO,CAAC;wBAC7B,GAAG,CAAC,YAAY,GAAG,GAAG,CAAC,cAAc,CAAC,KAAK,EAAE,CAAC;wBAC9C,GAAG,CAAC,UAAU,GAAG,IAAI,iEAAM,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;wBAErC,IAAI,GAAG,IAAI,kFAAO,CAAC,gCAAgC,EAAE,KAAK,CAAC,CAAC;wBAClE,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;wBAChB,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;wBAChB,GAAG,CAAC,WAAW,GAAG,IAAI,CAAC;wBACvB,GAAG,CAAC,kBAAkB,GAAG,GAAG,CAAC;wBAC7B,cAAc,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;qBAC5B;oBAED,cAAc,CAAC,OAAO,CAAC,UAAC,GAAG,EAAE,KAAK;wBAC9B,+DAA+D;wBAC/D,GAAG,CAAC,eAAe,GAAG,4EAAQ,CAAC,+BAA+B,CAAC;wBAC/D,GAAG,CAAC,QAAQ,GAAG,CAAC,CAAC;wBACjB,GAAG,CAAC,eAAe,GAAG,CAAC,CAAC;wBACxB,IAAM,MAAM,GAAG,gEAAI,CAAC,YAAY,CAAI,GAAG,CAAC,IAAI,YAAS,EAAE,EAAE,EAAE,CAAC,EAAE,KAAK,CAAC,CAAC;wBACrE,MAAM,CAAC,QAAQ,GAAG,IAAI,kEAAO,CAAC,CAAC,GAAG,GAAG,KAAK,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC;wBACpD,MAAM,CAAC,cAAc,GAAG,IAAI,CAAC;wBAC7B,MAAM,CAAC,QAAQ,GAAG,GAAG,CAAC;oBAC1B,CAAC,CAAC,CAAC;yBAEC,eAAe,CAAC,SAAS,EAAzB,wBAAyB;oBAC1B,qBAAM,KAAK,CAAC,UAAU,CAAC,IAAI,CAAC;4BACvB,UAAU,EAAE,QAAQ,CAAC,cAAc,CAAC,SAAS,CAAgB;4BAC7D,YAAY,EAAE,IAAI;yBACrB,CAAC;;oBAHH,SAGG,CAAC;;;oBAGP,MAAM,CAAC,aAAa,CAAC;wBACjB,KAAK,CAAC,MAAM,EAAE,CAAC;wBACf,YAAY,CAAC,MAAM,CAAC,kEAAO,CAAC,EAAE,EAAE,EAAE,IAAI,CAAC,CAAC;oBAC5C,CAAC,CAAC,CAAC;oBACH,MAAM,CAAC,gBAAgB,CAAC,QAAQ,EAAE;wBAC9B,MAAM,CAAC,MAAM,EAAE,CAAC;oBACpB,CAAC,CAAC,CAAC;oBACF,MAAc,CAAC,YAAY,GAAG,KAAK,CAAC;;;;;CACxC;AAQD,SAAS,kBAAkB;IACvB,IAAM,IAAI,GAAG,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC;IAElC,OAAO;QACH,MAAM,EAAE,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC;QAC/B,MAAM,EAAE,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC;QAC/B,SAAS,EAAE,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC;KACxC,CAAC;AACN,CAAC;AAED,IAAI,EAAE,CAAC,KAAK,CAAC,UAAC,MAAM;IAChB,OAAO,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;AAC1B,CAAC,CAAC,CAAC","file":"main.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"babylon-mtoon-material\"] = factory();\n\telse\n\t\troot[\"babylon-mtoon-material\"] = factory();\n})(window, function() {\nreturn "," \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"main\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \tvar jsonpArray = window[\"webpackJsonpbabylon_mtoon_material\"] = window[\"webpackJsonpbabylon_mtoon_material\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([\"./src/test/index.ts\",\"vendors~main\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","import { InspectableType, IInspectable } from '@babylonjs/core/Misc/iInspectable';\r\n\r\n/**\r\n * MToonMaterial に Inspector 上で調整可能なパラメータを設定する\r\n * @param material\r\n * @link https://doc.babylonjs.com/how_to/debug_layer#extensibility\r\n */\r\nexport function getInspectableCustomProperties(): IInspectable[] {\r\n    return [\r\n        {\r\n            label: 'DiffuseColor',\r\n            propertyName: 'diffuseColor',\r\n            type: InspectableType.Color3,\r\n        },\r\n        {\r\n            label: 'AmbientColor',\r\n            propertyName: 'ambientColor',\r\n            type: InspectableType.Color3,\r\n        },\r\n        {\r\n            label: 'EmissiveColor',\r\n            propertyName: 'emissiveColor',\r\n            type: InspectableType.Color3,\r\n        },\r\n        {\r\n            label: 'ShadeColor',\r\n            propertyName: 'shadeColor',\r\n            type: InspectableType.Color3,\r\n        },\r\n        {\r\n            label: 'RimColor',\r\n            propertyName: 'rimColor',\r\n            type: InspectableType.Color3,\r\n        },\r\n        {\r\n            label: 'OutlineColor',\r\n            propertyName: 'outlineColor',\r\n            type: InspectableType.Color3,\r\n        },\r\n        {\r\n            label: 'ReceiveShadowRate',\r\n            propertyName: 'receiveShadowRate',\r\n            type: InspectableType.Slider,\r\n            min: 0,\r\n            max: 1,\r\n            step: 0.01,\r\n        },\r\n        {\r\n            label: 'ShadingGradeRate',\r\n            propertyName: 'shadingGradeRate',\r\n            type: InspectableType.Slider,\r\n            min: 0,\r\n            max: 1,\r\n            step: 0.01,\r\n        },\r\n        {\r\n            label: 'ShadeShift',\r\n            propertyName: 'shadeShift',\r\n            type: InspectableType.Slider,\r\n            min: -1,\r\n            max: 1,\r\n            step: 0.01,\r\n        },\r\n        {\r\n            label: 'ShadeToony',\r\n            propertyName: 'shadeToony',\r\n            type: InspectableType.Slider,\r\n            min: 0,\r\n            max: 1,\r\n            step: 0.01,\r\n        },\r\n        {\r\n            label: 'LightColorAttenuation',\r\n            propertyName: 'lightColorAttenuation',\r\n            type: InspectableType.Slider,\r\n            min: 0,\r\n            max: 1,\r\n            step: 0.01,\r\n        },\r\n        {\r\n            label: 'IndirectLightIntensity',\r\n            propertyName: 'indirectLightIntensity',\r\n            type: InspectableType.Slider,\r\n            min: 0,\r\n            max: 1,\r\n            step: 0.01,\r\n        },\r\n        {\r\n            label: 'RimLightingMix',\r\n            propertyName: 'rimLightingMix',\r\n            type: InspectableType.Slider,\r\n            min: 0,\r\n            max: 1,\r\n            step: 0.01,\r\n        },\r\n        {\r\n            label: 'RimFresnelPower',\r\n            propertyName: 'rimFresnelPower',\r\n            type: InspectableType.Slider,\r\n            min: 0.01,\r\n            max: 100,\r\n            step: 4,\r\n        },\r\n        {\r\n            label: 'RimLift',\r\n            propertyName: 'rimLift',\r\n            type: InspectableType.Slider,\r\n            min: 0.0,\r\n            max: 1,\r\n            step: 0.01,\r\n        },\r\n        {\r\n            label: 'OutlineWidth',\r\n            propertyName: 'outlineWidth',\r\n            type: InspectableType.Slider,\r\n            min: 0.01,\r\n            max: 1,\r\n            step: 0.01,\r\n        },\r\n        {\r\n            label: 'OutlineScaledMaxDistance',\r\n            propertyName: 'outlineScaledMaxDistance',\r\n            type: InspectableType.Slider,\r\n            min: 1.0,\r\n            max: 10.0,\r\n            step: 0.01,\r\n        },\r\n        {\r\n            label: 'OutlineLightingMix',\r\n            propertyName: 'outlineLightingMix',\r\n            type: InspectableType.Slider,\r\n            min: 0,\r\n            max: 1,\r\n            step: 0.01,\r\n        },\r\n        {\r\n            label: 'DebugMode',\r\n            propertyName: 'debugMode',\r\n            type: InspectableType.Slider,\r\n            min: 0,\r\n            max: 2,\r\n            step: 1,\r\n        },\r\n        {\r\n            label: 'OutlineWidthMode',\r\n            propertyName: 'outlineWidthMode',\r\n            type: InspectableType.Slider,\r\n            min: 0,\r\n            max: 2,\r\n            step: 1,\r\n        },\r\n        {\r\n            label: 'OutlineColorMode',\r\n            propertyName: 'outlineColorMode',\r\n            type: InspectableType.Slider,\r\n            min: 0,\r\n            max: 1,\r\n            step: 1,\r\n        },\r\n        {\r\n            label: 'CullMode',\r\n            propertyName: 'cullMode',\r\n            type: InspectableType.Slider,\r\n            min: 0,\r\n            max: 2,\r\n            step: 1,\r\n        },\r\n        {\r\n            label: 'OutlineCullMode',\r\n            propertyName: 'outlineCullMode',\r\n            type: InspectableType.Slider,\r\n            min: 0,\r\n            max: 2,\r\n            step: 1,\r\n        },\r\n        {\r\n            label: 'AlphaCutOff',\r\n            propertyName: 'alphaCutOff',\r\n            type: InspectableType.Slider,\r\n            min: 0,\r\n            max: 1,\r\n            step: 0.01,\r\n        },\r\n        {\r\n            label: 'UV Animation Scroll X',\r\n            propertyName: 'uvAnimationScrollX',\r\n            type: InspectableType.Slider,\r\n            min: -1,\r\n            max: 1,\r\n            step: 0.1,\r\n        },\r\n        {\r\n            label: 'UV Animation Scroll Y',\r\n            propertyName: 'uvAnimationScrollY',\r\n            type: InspectableType.Slider,\r\n            min: -1,\r\n            max: 1,\r\n            step: 0.1,\r\n        },\r\n        {\r\n            label: 'UV Animation Rotation',\r\n            propertyName: 'uvAnimationRotation',\r\n            type: InspectableType.Slider,\r\n            min: -0.5,\r\n            max: 0.5,\r\n            step: 0.01,\r\n        },\r\n    ];\r\n}\r\n","import { MaterialDefines } from '@babylonjs/core/Materials/materialDefines';\r\n\r\n/**\r\n * Material Defines\r\n */\r\nexport class MToonMaterialDefines extends MaterialDefines {\r\n    // MToon Specific\r\n    public MTOON_OUTLINE_WIDTH_WORLD = false;\r\n    public MTOON_OUTLINE_WIDTH_SCREEN = false;\r\n    public MTOON_OUTLINE_COLOR_FIXED = false;\r\n    public MTOON_OUTLINE_COLOR_MIXED = false;\r\n    public MTOON_DEBUG_NORMAL = false;\r\n    public MTOON_DEBUG_LITSHADERRATE = false;\r\n    public ALPHABLEND = false;\r\n\r\n    // Attributes\r\n    public NORMAL = false;\r\n    public TANGENT = false;\r\n    public UV1 = false;\r\n    public UV2 = false;\r\n    public VERTEXALPHA = false;\r\n\r\n    // Textures\r\n    public MAINUV1 = false;\r\n    public MAINUV2 = false;\r\n    public DIFFUSE = false;\r\n    public DIFFUSEDIRECTUV = 0;\r\n    public EMISSIVE = false;\r\n    public EMISSIVEDIRECTUV = 0;\r\n    public BUMP = false;\r\n    public BUMPDIRECTUV = 0;\r\n    public SHADE = false;\r\n    public SHADEDIRECTUV = 0;\r\n    public RECEIVE_SHADOW = false;\r\n    public RECEIVE_SHADOWDIRECTUV = 0;\r\n    public SHADING_GRADE = false;\r\n    public SHADING_GRADEDIRECTUV = 0;\r\n    public RIM = false;\r\n    public RIMDIRECTUV = 0;\r\n    public MATCAP = false;\r\n    public MATCAPDIRECTUV = 0;\r\n    public OUTLINE_WIDTH = false;\r\n    public OUTLINE_WIDTHDIRECTUV = 0;\r\n    public UV_ANIMATION_MASK = false;\r\n    public UV_ANIMATION_MASKDIRECTUV = 0;\r\n\r\n    // Misc\r\n    public MULTIVIEW = false;\r\n    public FOG = false;\r\n    public POINTSIZE = false;\r\n    public LOGARITHMICDEPTH = false;\r\n    public NONUNIFORMSCALING = false;\r\n    public ALPHATEST = false;\r\n    public DEPTHPREPASS = false;\r\n    public NUM_MORPH_INFLUENCERS = 0;\r\n    public NUM_BONE_INFLUENCERS = 0;\r\n    public BonesPerMesh = 0;\r\n    public TWOSIDEDLIGHTING = false;\r\n    public CLIPPLANE = false;\r\n    public CLIPPLANE2 = false;\r\n    public CLIPPLANE3 = false;\r\n    public CLIPPLANE4 = false;\r\n    public BONETEXTURE = false;\r\n    public INSTANCES = false;\r\n    public SHADOWFLOAT = false;\r\n    public MORPHTARGETS = false;\r\n    public MORPHTARGETS_NORMAL = false;\r\n    public MORPHTARGETS_TANGENT = false;\r\n    public PREMULTIPLYALPHA = false; // https://playground.babylonjs.com#LNVJJ7\r\n\r\n    /**\r\n     * @inheritdoc\r\n     */\r\n    public constructor() {\r\n        super();\r\n        this.rebuild();\r\n    }\r\n}\r\n","import { Constants } from '@babylonjs/core/Engines/constants';\r\nimport { Effect, EffectFallbacks } from '@babylonjs/core/Materials/effect';\r\nimport { Material } from '@babylonjs/core/Materials/material';\r\nimport { MaterialHelper } from '@babylonjs/core/Materials/materialHelper';\r\nimport { PushMaterial } from '@babylonjs/core/Materials/pushMaterial';\r\nimport { BaseTexture } from '@babylonjs/core/Materials/Textures/baseTexture';\r\nimport { Color3, Matrix, Vector4 } from '@babylonjs/core/Maths/math';\r\nimport { AbstractMesh } from '@babylonjs/core/Meshes/abstractMesh';\r\nimport { VertexBuffer } from '@babylonjs/core/Meshes/buffer';\r\nimport { Mesh } from '@babylonjs/core/Meshes/mesh';\r\nimport { SubMesh } from '@babylonjs/core/Meshes/subMesh';\r\nimport { expandToProperty, SerializationHelper, serialize, serializeAsColor3, serializeAsTexture } from '@babylonjs/core/Misc/decorators';\r\nimport { IAnimatable } from '@babylonjs/core/Misc/tools';\r\nimport { Scene } from '@babylonjs/core/scene';\r\nimport { Nullable } from '@babylonjs/core/types';\r\nimport { getInspectableCustomProperties } from './inspectable-custom-properties';\r\nimport { MToonMaterialDefines } from './mtoon-material-defines';\r\nimport { MToonOutlineRenderer } from './mtoon-outline-renderer';\r\n\r\n// シェーダ文字列を取得\r\nconst UboDeclaration = require('./shaders/ubo-declaration.vert').default;\r\nconst VertexDeclaration = require('./shaders/vertex-declaration.vert').default;\r\nconst FragmentDeclaration = require('./shaders/fragment-declaration.frag').default;\r\nconst BumpFragment = require('./shaders/bump-fragment.frag').default;\r\nconst LightFragment = require('./shaders/light-fragment.frag').default;\r\nconst VertexShader = require('./shaders/mtoon.vert').default;\r\nconst FragmentShader = require('./shaders/mtoon.frag').default;\r\n\r\n/**\r\n * デバッグモード\r\n */\r\nexport enum DebugMode {\r\n    None = 0,\r\n    Normal,\r\n    LitShadeRate,\r\n}\r\n/**\r\n * アウトラインカラーモード\r\n */\r\nexport enum OutlineColorMode {\r\n    FixedColor = 0,\r\n    MixedLighting,\r\n}\r\n/**\r\n * アウトライン幅モード\r\n */\r\nexport enum OutlineWidthMode {\r\n    None = 0,\r\n    WorldCorrdinates,\r\n    ScreenCoordinates,\r\n}\r\n/**\r\n * Cull モード\r\n */\r\nexport enum CullMode {\r\n    Off = 0,\r\n    Front,\r\n    Back,\r\n}\r\n\r\n/**\r\n * MToonMaterial\r\n *\r\n * MToon は日本のアニメ的表現をすることを目標としています。\r\n * 主色 (Lit Color) と陰色 (Shade Color) の 2 色を、Lighting パラメータや光源環境に応じて混合することでそれを実現します。\r\n * VRM での出力パラメータとプロパティのマッピングは下記となります。\r\n *\r\n * @link https://github.com/Santarh/MToon/\r\n * @link https://vrm.dev/univrm/shaders/mtoon/\r\n */\r\nexport class MToonMaterial extends PushMaterial {\r\n//#region Properties\r\n//#region Textures\r\n    @serializeAsTexture('diffuseTexture')\r\n    private _diffuseTexture: Nullable<BaseTexture> = null;\r\n    /**\r\n     * 通常色テクスチャ\r\n     */\r\n    @expandToProperty('_markAllSubMeshesAsTexturesAndMiscDirty')\r\n    public diffuseTexture: Nullable<BaseTexture> = null;\r\n\r\n    @serializeAsTexture('emissiveTexture')\r\n    private _emissiveTexture: Nullable<BaseTexture> = null;\r\n    /**\r\n     * 発光テクスチャ\r\n     */\r\n    @expandToProperty('_markAllSubMeshesAsTexturesDirty')\r\n    public emissiveTexture: Nullable<BaseTexture> = null;\r\n\r\n    @serializeAsTexture('bumpTexture')\r\n    private _bumpTexture: Nullable<BaseTexture> = null;\r\n    /**\r\n     * バンプマップテクスチャ\r\n     */\r\n    @expandToProperty('_markAllSubMeshesAsTexturesDirty')\r\n    public bumpTexture: Nullable<BaseTexture> = null;\r\n\r\n    @serializeAsTexture('shadeTexture')\r\n    private _shadeTexture: Nullable<BaseTexture> = null;\r\n    /**\r\n     * 陰になる部分の色テクスチャ\r\n     */\r\n    @expandToProperty('_markAllSubMeshesAsTexturesDirty')\r\n    public shadeTexture: Nullable<BaseTexture> = null;\r\n\r\n    @serializeAsTexture('receiveShadowTexture')\r\n    private _receiveShadowTexture: Nullable<BaseTexture> = null;\r\n    /**\r\n     * どれだけ影を受け付けるかのテクスチャ\r\n     * receiveShadowRate * texture.a\r\n     */\r\n    @expandToProperty('_markAllSubMeshesAsTexturesDirty')\r\n    public receiveShadowTexture: Nullable<BaseTexture> = null;\r\n\r\n    @serializeAsTexture('shadingGradeTexture')\r\n    private _shadingGradeTexture: Nullable<BaseTexture> = null;\r\n    /**\r\n     * 陰部分の暗さテクスチャ\r\n     * shadingGradeRate * (1.0 - texture.r))\r\n     */\r\n    @expandToProperty('_markAllSubMeshesAsTexturesDirty')\r\n    public shadingGradeTexture: Nullable<BaseTexture> = null;\r\n\r\n    @serializeAsTexture('rimTexture')\r\n    private _rimTexture: Nullable<BaseTexture> = null;\r\n    /**\r\n     * Parametric Rim Lighting テクスチャ\r\n     */\r\n    @expandToProperty('_markAllSubMeshesAsTexturesDirty')\r\n    public rimTexture: Nullable<BaseTexture> = null;\r\n\r\n    @serializeAsTexture('matCapTexture')\r\n    private _matCapTexture: Nullable<BaseTexture> = null;\r\n    /**\r\n     * MatCap ライティングテクスチャ\r\n     */\r\n    @expandToProperty('_markAllSubMeshesAsTexturesDirty')\r\n    public matCapTexture: Nullable<BaseTexture> = null;\r\n\r\n    @serializeAsTexture('outlineWidthTexture')\r\n    private _outlineWidthTexture: Nullable<BaseTexture> = null;\r\n    /**\r\n     * アウトラインの幅の調整テクスチャ\r\n     */\r\n    @expandToProperty('_markAllSubMeshesAsTexturesDirty')\r\n    public outlineWidthTexture: Nullable<BaseTexture> = null;\r\n\r\n    @serializeAsTexture('outlineWidthTexture')\r\n    private _uvAnimationMaskTexture: Nullable<BaseTexture> = null;\r\n    /**\r\n     * UV アニメーションマスクテクスチャ\r\n     */\r\n    @expandToProperty('_markAllSubMeshesAsTexturesDirty')\r\n    public uvAnimationMaskTexture: Nullable<BaseTexture> = null;\r\n\r\n    /**\r\n     * テクスチャ参照の一覧\r\n     */\r\n    protected get appendedTextures(): Array<Nullable<BaseTexture>> {\r\n        return [\r\n            this._diffuseTexture,\r\n            this._emissiveTexture,\r\n            this._bumpTexture,\r\n            this._shadeTexture,\r\n            this._receiveShadowTexture,\r\n            this._shadingGradeTexture,\r\n            this._rimTexture,\r\n            this._matCapTexture,\r\n            this._outlineWidthTexture,\r\n            this._uvAnimationMaskTexture,\r\n        ];\r\n    }\r\n    /**\r\n     * アクティブなテクスチャ参照の一覧\r\n     */\r\n    protected get appendedActiveTextures(): BaseTexture[] {\r\n        return this.appendedTextures.filter((t) => t !== null) as BaseTexture[];\r\n    }\r\n//#endregion\r\n\r\n//#region babylon parameters\r\n    /**\r\n     * 対応最大ライト数\r\n     */\r\n    public readonly maxSimultaneousLights = 16;\r\n    /**\r\n     * Specular 非対応\r\n     */\r\n    public readonly specularSupported = false;\r\n    /**\r\n     * 頂点カラー非対応\r\n     */\r\n    public readonly useVertexColor = false;\r\n    /**\r\n     * シェーダボーンは利用可能\r\n     */\r\n    public readonly useBones = true;\r\n    /**\r\n     * シェーダモーフターゲットは利用可能\r\n     */\r\n    public readonly useMorphTargets = true;\r\n    /**\r\n     * 頂点アルファは非対応\r\n     */\r\n    public readonly useVertexAlpha = false;\r\n    private _useLogarithmicDepth = false;\r\n    /**\r\n     * Logarithmic depth\r\n     * @link http://doc.babylonjs.com/how_to/using_logarithmic_depth_buffer\r\n     */\r\n    @serialize()\r\n    public get useLogarithmicDepth(): boolean {\r\n        return this._useLogarithmicDepth;\r\n    }\r\n    public set useLogarithmicDepth(value: boolean) {\r\n        const newValue = value && this.getScene().getEngine().getCaps().fragmentDepthSupported;\r\n        if (this._useLogarithmicDepth !== newValue) {\r\n            this._useLogarithmicDepth = newValue;\r\n            this._markAllSubMeshesAsMiscDirty();\r\n        }\r\n    }\r\n    @serialize('disableLighting')\r\n    private _disableLighting = false;\r\n    /**\r\n     * ライティングを無効にするかどうか\r\n     */\r\n    @expandToProperty('_markAllSubMeshesAsLightsDirty')\r\n    public disableLighting = false;\r\n    @serialize('twoSidedLighting')\r\n    private _twoSidedLighting = false;\r\n    /**\r\n     * 両面ライティングを行うかどうか\r\n     */\r\n    @expandToProperty('_markAllSubMeshesAsTexturesDirty')\r\n    public twoSidedLighting = false;\r\n    @serialize('alphaCutOff')\r\n    private _alphaCutOff = 0.5;\r\n    /**\r\n     * アルファテスト時のカットしきい値\r\n     */\r\n    @expandToProperty('_markAllSubMeshesAsLightsDirty')\r\n    public alphaCutOff = 0.5;\r\n//#endregion\r\n\r\n//#region Colors\r\n    /**\r\n     * diffuseTexture に乗算される色\r\n     */\r\n    @serializeAsColor3('diffuse')\r\n    public diffuseColor = new Color3(1.0, 1.0, 1.0);\r\n    /**\r\n     * 環境光\r\n     */\r\n    @serialize('ambient')\r\n    public ambientColor = new Color3(0.1, 0.1, 0.1);\r\n    /**\r\n     * シーンの AmbientColor と掛け合わせた後の色\r\n     * @see bindForSubMesh\r\n     * @hidden\r\n     */\r\n    protected globalAmbientColor = new Color3(0.0, 0.0, 0.0);\r\n    /**\r\n     * 純粋加算される発光色\r\n     */\r\n    @serialize('emissive')\r\n    public emissiveColor = new Color3(0.0, 0.0, 0.0);\r\n    /**\r\n     * shadeTexture に乗算される色\r\n     */\r\n    @serialize('shade')\r\n    public shadeColor = new Color3(0.97, 0.81, 0.86);\r\n    /**\r\n     * Rim の色\r\n     */\r\n    @serialize('rim')\r\n    public rimColor = new Color3(0.0, 0.0, 0.0);\r\n    /**\r\n     * アウトラインの色\r\n     */\r\n    @serialize('outline')\r\n    public outlineColor = new Color3(0.0, 0.0, 0.0);\r\n//#endregion\r\n\r\n//#region MToon parameters\r\n    private _bumpScale = 1.0;\r\n    @serialize()\r\n    public get bumpScale() {\r\n        return this._bumpScale;\r\n    }\r\n    public set bumpScale(value: number) {\r\n        this._bumpScale = value;\r\n    }\r\n    private _receiveShadowRate = 1.0;\r\n    @serialize()\r\n    public get receiveShadowRate() {\r\n        return this._receiveShadowRate;\r\n    }\r\n    public set receiveShadowRate(value: number) {\r\n        this._receiveShadowRate = Math.max(0.0, Math.min(1.0, value));\r\n        this._markAllSubMeshesAsLightsDirty();\r\n    }\r\n    private _shadingGradeRate = 1.0;\r\n    @serialize()\r\n    public get shadingGradeRate() {\r\n        return this._shadingGradeRate;\r\n    }\r\n    public set shadingGradeRate(value: number) {\r\n        this._shadingGradeRate = Math.max(0.0, Math.min(1.0, value));\r\n        this._markAllSubMeshesAsLightsDirty();\r\n    }\r\n    private _shadeShift = 0.0;\r\n    @serialize()\r\n    public get shadeShift() {\r\n        return this._shadeShift;\r\n    }\r\n    public set shadeShift(value: number) {\r\n        this._shadeShift = Math.max(-1.0, Math.min(1.0, value));\r\n        this._markAllSubMeshesAsLightsDirty();\r\n    }\r\n    private _shadeToony = 0.9;\r\n    @serialize()\r\n    public get shadeToony() {\r\n        return this._shadeToony;\r\n    }\r\n    public set shadeToony(value: number) {\r\n        this._shadeToony = Math.max(0.0, Math.min(1.0, value));\r\n        this._markAllSubMeshesAsLightsDirty();\r\n    }\r\n    private _lightColorAttenuation = 0.0;\r\n    @serialize()\r\n    public get lightColorAttenuation() {\r\n        return this._lightColorAttenuation;\r\n    }\r\n    public set lightColorAttenuation(value: number) {\r\n        this._lightColorAttenuation = Math.max(0.0, Math.min(1.0, value));\r\n        this._markAllSubMeshesAsLightsDirty();\r\n    }\r\n    private _indirectLightIntensity = 0.1;\r\n    @serialize()\r\n    public get indirectLightIntensity() {\r\n        return this._indirectLightIntensity;\r\n    }\r\n    public set indirectLightIntensity(value: number) {\r\n        this._indirectLightIntensity = Math.max(0.0, Math.min(1.0, value));\r\n        this._markAllSubMeshesAsLightsDirty();\r\n    }\r\n    private _rimLightingMix = 0;\r\n    @serialize()\r\n    public get rimLightingMix() {\r\n        return this._rimLightingMix;\r\n    }\r\n    public set rimLightingMix(value: number) {\r\n        this._rimLightingMix = Math.max(0.0, Math.min(1.0, value));\r\n        this._markAllSubMeshesAsLightsDirty();\r\n    }\r\n    private _rimFresnelPower = 1;\r\n    @serialize()\r\n    public get rimFresnelPower() {\r\n        return this._rimFresnelPower;\r\n    }\r\n    public set rimFresnelPower(value: number) {\r\n        this._rimFresnelPower = Math.max(0.0, Math.min(100.0, value));\r\n        this._markAllSubMeshesAsLightsDirty();\r\n    }\r\n    private _rimLift = 0;\r\n    @serialize()\r\n    public get rimLift() {\r\n        return this._rimLift;\r\n    }\r\n    public set rimLift(value: number) {\r\n        this._rimLift = Math.max(0.0, Math.min(1.0, value));\r\n        this._markAllSubMeshesAsLightsDirty();\r\n    }\r\n    private _outlineWidth = 0.5;\r\n    @serialize()\r\n    public get outlineWidth() {\r\n        return this._outlineWidth;\r\n    }\r\n    public set outlineWidth(value: number) {\r\n        this._outlineWidth = Math.max(0.01, Math.min(1.0, value));\r\n        this._markAllSubMeshesAsAttributesDirty();\r\n    }\r\n    private _outlineScaledMaxDistance = 1.0;\r\n    @serialize()\r\n    public get outlineScaledMaxDistance() {\r\n        return this._outlineScaledMaxDistance;\r\n    }\r\n    public set outlineScaledMaxDistance(value: number) {\r\n        this._outlineScaledMaxDistance = Math.max(1.0, Math.min(10.0, value));\r\n        this._markAllSubMeshesAsAttributesDirty();\r\n    }\r\n    private _outlineLightingMix = 1.0;\r\n    @serialize()\r\n    public get outlineLightingMix() {\r\n        return this._outlineLightingMix;\r\n    }\r\n    public set outlineLightingMix(value: number) {\r\n        this._outlineLightingMix = Math.max(0.0, Math.min(1.0, value));\r\n        this._markAllSubMeshesAsAttributesDirty();\r\n    }\r\n    private _uvAnimationScrollX = 0.0;\r\n    @serialize()\r\n    public get uvAnimationScrollX() {\r\n        return this._uvAnimationScrollX;\r\n    }\r\n    public set uvAnimationScrollX(value: number) {\r\n        this._uvAnimationScrollX = value;\r\n        this._markAllSubMeshesAsMiscDirty();\r\n    }\r\n    private _uvAnimationScrollY = 0.0;\r\n    @serialize()\r\n    public get uvAnimationScrollY() {\r\n        return this._uvAnimationScrollY;\r\n    }\r\n    public set uvAnimationScrollY(value: number) {\r\n        this._uvAnimationScrollY = value;\r\n        this._markAllSubMeshesAsMiscDirty();\r\n    }\r\n    private _uvAnimationRotation = 0.0;\r\n    @serialize()\r\n    public get uvAnimationRotation() {\r\n        return this._uvAnimationRotation;\r\n    }\r\n    public set uvAnimationRotation(value: number) {\r\n        this._uvAnimationRotation = value;\r\n        this._markAllSubMeshesAsMiscDirty();\r\n    }\r\n\r\n    @serialize('alphaTest')\r\n    private _alphaTest = false;\r\n    @expandToProperty('_markAllSubMeshesAsMiscDirty')\r\n    public alphaTest = false;\r\n    private _alphaBlend = false;\r\n    @serialize()\r\n    public get alphaBlend() {\r\n        return this._alphaBlend;\r\n    }\r\n    public set alphaBlend(value: boolean) {\r\n        this._alphaBlend = value;\r\n        if (value) {\r\n            this.backFaceCulling = true;\r\n        }\r\n        this._markAllSubMeshesAsMiscDirty();\r\n    }\r\n    @serialize('debugMode')\r\n    private _debugMode = DebugMode.None;\r\n    /** @hidden */\r\n    @expandToProperty('_markAllSubMeshesAsMiscDirty')\r\n    public debugMode: DebugMode = DebugMode.None;\r\n\r\n    private outlineRenderer?: MToonOutlineRenderer;\r\n    private _outlineWidthMode: OutlineWidthMode = OutlineWidthMode.None;\r\n    public get outlineWidthMode() {\r\n        return this._outlineWidthMode;\r\n    }\r\n    public set outlineWidthMode(value: OutlineWidthMode) {\r\n        this._outlineWidthMode = value;\r\n        if (value !== OutlineWidthMode.None && !this.outlineRenderer) {\r\n            /**\r\n             * このマテリアル用のアウトラインレンダラーを生成する\r\n             */\r\n            this.outlineRenderer = new MToonOutlineRenderer(this.getScene(), this);\r\n        }\r\n        this._markAllSubMeshesAsMiscDirty();\r\n    }\r\n    @expandToProperty('_markAllSubMeshesAsMiscDirty')\r\n    public outlineColorMode: OutlineColorMode = OutlineColorMode.MixedLighting;\r\n\r\n    private _cullMode: CullMode = CullMode.Back;\r\n    @serialize()\r\n    public get cullMode() {\r\n      return this._cullMode;\r\n    }\r\n    public set cullMode(value: CullMode) {\r\n        this._cullMode = value;\r\n        switch (this._cullMode) {\r\n            case CullMode.Off:\r\n                // 両面を描画する\r\n                this.backFaceCulling = false;\r\n                this.sideOrientation = Material.ClockWiseSideOrientation;\r\n                this.twoSidedLighting = false;\r\n                break;\r\n            case CullMode.Front:\r\n                // 表面を描画しない(=裏面だけ描画する)\r\n                this.backFaceCulling = true;\r\n                this.sideOrientation = Material.CounterClockWiseSideOrientation;\r\n                this.twoSidedLighting = true;\r\n                break;\r\n            case CullMode.Back:\r\n                // 裏面を描画しない(=表面だけ描画する) デフォルト\r\n                this.backFaceCulling = true;\r\n                this.sideOrientation = Material.ClockWiseSideOrientation;\r\n                this.twoSidedLighting = false;\r\n                break;\r\n        }\r\n        this._markAllSubMeshesAsMiscDirty();\r\n    }\r\n    @serialize()\r\n    private _outlineCullMode = CullMode.Front;\r\n    @expandToProperty('_markAllSubMeshesAsMiscDirty')\r\n    public outlineCullMode: CullMode = CullMode.Front;\r\n    private storedCullMode = CullMode.Back;\r\n    /**\r\n     * アウトライン用 CullMode を設定\r\n     * @hidden\r\n     */\r\n    public applyOutlineCullMode(): void {\r\n        this.storedCullMode = this.cullMode;\r\n        this.cullMode = this._outlineCullMode;\r\n    }\r\n    /**\r\n     * CullMode をリストア\r\n     * @hidden\r\n     */\r\n    public restoreOutlineCullMode(): void {\r\n        this.cullMode = this.storedCullMode;\r\n    }\r\n    /**\r\n     * @hidden\r\n     */\r\n    public getOutlineRendererName(): string {\r\n        if (!this.outlineRenderer) {\r\n            return '';\r\n        }\r\n        return this.outlineRenderer.name;\r\n    }\r\n//#endregion\r\n//#endregion\r\n\r\n    /**\r\n     * @inheritdoc\r\n     */\r\n    public constructor(name: string, scene: Scene) {\r\n        super(name, scene);\r\n\r\n        // シェーダストアに登録する\r\n        if (!Effect.IncludesShadersStore.mtoonUboDeclaration) {\r\n            Effect.IncludesShadersStore.mtoonUboDeclaration = UboDeclaration;\r\n            Effect.IncludesShadersStore.mtoonVertexDeclaration = VertexDeclaration;\r\n            Effect.IncludesShadersStore.mtoonFragmentDeclaration = FragmentDeclaration;\r\n            Effect.IncludesShadersStore.mtoonLightFragment = LightFragment;\r\n            Effect.IncludesShadersStore.mtoonBumpFragment = BumpFragment;\r\n            Effect.ShadersStore.mtoonVertexShader = VertexShader;\r\n            Effect.ShadersStore.mtoonFragmentShader = FragmentShader;\r\n        }\r\n\r\n        // Inspector にプロパティを追加\r\n        this.inspectableCustomProperties = this.inspectableCustomProperties || [];\r\n        this.inspectableCustomProperties.push(...getInspectableCustomProperties());\r\n    }\r\n\r\n    /**\r\n     * @inheritdoc\r\n     * SubMesh が利用可能かどうかチェックする\r\n     */\r\n    public isReadyForSubMesh(mesh: AbstractMesh, subMesh: SubMesh, useInstances = false): boolean {\r\n        if (subMesh.effect && this.isFrozen) {\r\n            if (this._wasPreviouslyReady) {\r\n                return true;\r\n            }\r\n        }\r\n\r\n        if (!subMesh._materialDefines) {\r\n            subMesh._materialDefines = new MToonMaterialDefines();\r\n        }\r\n\r\n        const scene = this.getScene();\r\n        const defines = subMesh._materialDefines as MToonMaterialDefines;\r\n        if (!this.checkReadyOnEveryCall && subMesh.effect) {\r\n            if (defines._renderId === scene.getRenderId()) {\r\n                return true;\r\n            }\r\n        }\r\n\r\n        const engine = scene.getEngine();\r\n\r\n        // Lights\r\n        defines._needNormals = MaterialHelper.PrepareDefinesForLights(\r\n            scene,\r\n            mesh,\r\n            defines,\r\n            this.specularSupported,\r\n            this.maxSimultaneousLights,\r\n            this._disableLighting,\r\n        );\r\n\r\n        if (this.outlineWidthMode !== OutlineWidthMode.None) {\r\n            // アウトライン描画のためには normal が必要\r\n            defines._needNormals = true;\r\n        }\r\n\r\n        this.applyDefines(defines);\r\n\r\n        // Multiview\r\n        MaterialHelper.PrepareDefinesForMultiview(scene, defines);\r\n\r\n        // Textures\r\n        // defines の変更はシェーダのリコンパイルを必要とするため、必要最小限にする\r\n        // そのため若干冗長な記述となっている\r\n        if (defines._areTexturesDirty) {\r\n            defines._needUVs = false;\r\n            defines.MAINUV1 = false;\r\n            defines.MAINUV2 = false;\r\n\r\n            if (scene.texturesEnabled) {\r\n                // 追加テクスチャの用意を確認する\r\n                if (!this.isReadyForTexture(this._diffuseTexture, defines, 'DIFFUSE')\r\n                    || !this.isReadyForTexture(this._emissiveTexture, defines, 'EMISSIVE')\r\n                    || !this.isReadyForTexture(this._shadeTexture, defines, 'SHADE')\r\n                    || !this.isReadyForTexture(this._receiveShadowTexture, defines, 'RECEIVE_SHADOW')\r\n                    || !this.isReadyForTexture(this._shadingGradeTexture, defines, 'SHADING_GRADE')\r\n                    || !this.isReadyForTexture(this._rimTexture, defines, 'RIM')\r\n                    || !this.isReadyForTexture(this._matCapTexture, defines, 'MATCAP')\r\n                    || !this.isReadyForTexture(this._outlineWidthTexture, defines, 'OUTLINE_WIDTH')\r\n                    || !this.isReadyForTexture(this._uvAnimationMaskTexture, defines, 'UV_ANIMATION_MASK')\r\n                ) {\r\n                    return false;\r\n                }\r\n                if (scene.getEngine().getCaps().standardDerivatives && this._bumpTexture) {\r\n                    // Bump texure can not be not blocking.\r\n                    if (!this._bumpTexture.isReady()) {\r\n                        return false;\r\n                    }\r\n                    MaterialHelper.PrepareDefinesForMergedUV(this._bumpTexture, defines, 'BUMP');\r\n                } else {\r\n                    defines.BUMP = false;\r\n                }\r\n\r\n                defines.TWOSIDEDLIGHTING = !this._backFaceCulling && this._twoSidedLighting;\r\n            } else {\r\n                defines.DIFFUSE = false;\r\n                defines.EMISSIVE = false;\r\n                defines.SHADE = false;\r\n                defines.RECEIVE_SHADOW = false;\r\n                defines.SHADING_GRADE = false;\r\n                defines.RIM = false;\r\n                defines.MATCAP = false;\r\n                defines.OUTLINE_WIDTH = false;\r\n                defines.BUMP = false;\r\n                defines.UV_ANIMATION_MASK = false;\r\n            }\r\n\r\n            defines.PREMULTIPLYALPHA = (this.alphaMode === Constants.ALPHA_PREMULTIPLIED || this.alphaMode === Constants.ALPHA_PREMULTIPLIED_PORTERDUFF);\r\n        }\r\n\r\n        // Misc.\r\n        MaterialHelper.PrepareDefinesForMisc(\r\n            mesh,\r\n            scene,\r\n            this._useLogarithmicDepth,\r\n            this.pointsCloud,\r\n            this.fogEnabled,\r\n            this._shouldTurnAlphaTestOn(mesh),\r\n            defines,\r\n        );\r\n\r\n        // Attribs\r\n        MaterialHelper.PrepareDefinesForAttributes(\r\n            mesh,\r\n            defines,\r\n            this.useVertexColor,\r\n            this.useBones,\r\n            this.useMorphTargets,\r\n            this.useVertexAlpha,\r\n        );\r\n\r\n        // Values that need to be evaluated on every frame\r\n        MaterialHelper.PrepareDefinesForFrameBoundValues(\r\n            scene,\r\n            engine,\r\n            defines,\r\n            useInstances,\r\n        );\r\n\r\n        // Get correct effect\r\n        if (defines.isDirty) {\r\n            defines.markAsProcessed();\r\n\r\n            // Fallbacks\r\n            const fallbacks = new EffectFallbacks();\r\n\r\n            if (defines.BUMP) {\r\n                fallbacks.addFallback(0, 'BUMP');\r\n            }\r\n\r\n            if (defines.FOG) {\r\n                fallbacks.addFallback(1, 'FOG');\r\n            }\r\n\r\n            if (defines.POINTSIZE) {\r\n                fallbacks.addFallback(0, 'POINTSIZE');\r\n            }\r\n\r\n            if (defines.LOGARITHMICDEPTH) {\r\n                fallbacks.addFallback(0, 'LOGARITHMICDEPTH');\r\n            }\r\n\r\n            MaterialHelper.HandleFallbacksForShadows(defines, fallbacks, this.maxSimultaneousLights);\r\n\r\n            if (defines.MULTIVIEW) {\r\n                fallbacks.addFallback(0, 'MULTIVIEW');\r\n            }\r\n\r\n            // Attributes\r\n            const attribs = [VertexBuffer.PositionKind];\r\n\r\n            if (defines.NORMAL) {\r\n                attribs.push(VertexBuffer.NormalKind);\r\n            }\r\n\r\n            if (defines.TANGENT) {\r\n                attribs.push(VertexBuffer.TangentKind);\r\n            }\r\n\r\n            if (defines.UV1) {\r\n                attribs.push(VertexBuffer.UVKind);\r\n            }\r\n\r\n            if (defines.UV2) {\r\n                attribs.push(VertexBuffer.UV2Kind);\r\n            }\r\n\r\n            MaterialHelper.PrepareAttributesForBones(attribs, mesh, defines, fallbacks);\r\n            MaterialHelper.PrepareAttributesForInstances(attribs, defines);\r\n            MaterialHelper.PrepareAttributesForMorphTargets(attribs, mesh, defines);\r\n\r\n            const shaderName = 'mtoon';\r\n\r\n            const uniforms = [\r\n                'world', 'view', 'viewProjection', 'vLightsType',\r\n                'visibility', 'mBones',\r\n                'vClipPlane', 'vClipPlane2', 'vClipPlane3', 'vClipPlane4',\r\n                'vFogInfos', 'vFogColor', 'pointSize',\r\n                'alphaCutOff', 'logarithmicDepthConstant', 'vTangentSpaceParams', 'boneTextureWidth',\r\n\r\n                'vDiffuseColor', 'vDiffuseInfos', 'diffuseMatrix',\r\n                'vEmissiveColor', 'vEmissiveInfos', 'emissiveMatrix',\r\n                'vBumpInfos', 'bumpMatrix',\r\n                'vShadeColor', 'vShadeInfos', 'shadeMatrix',\r\n                'vReceiveShadowInfos', 'receiveShadowMatrix',\r\n                'vShadingGradeInfos', 'shadingGradeMatrix',\r\n                'vRimColor', 'vRimInfos', 'RimMatrix',\r\n                'vMatCapInfos', 'MatCapMatrix',\r\n                'vOutlineColor', 'vOutlineWidthInfos', 'outlineWidthMatrix',\r\n                'aspect', 'isOutline',\r\n\r\n                'shadingGradeRate', 'receiveShadowRate', 'shadeShift', 'shadeToony',\r\n                'rimLightingMix', 'rimFresnelPower', 'rimLift',\r\n                'lightColorAttenuation', 'indirectLightIntensity',\r\n                'outlineWidth', 'outlineScaledMaxDistance', 'outlineLightingMix',\r\n                'uvAnimationScrollX', 'uvAnimationScrollY', 'uvAnimationRotation',\r\n\r\n                'vEyePosition', 'vEyeUp', 'time',\r\n            ];\r\n\r\n            const samplers = [\r\n                'diffuseSampler', 'emissiveSampler', 'bumpSampler', 'boneSampler',\r\n                'shadeSampler', 'receiveShadowSampler', 'shadingGradeSampler',\r\n                'rimSampler', 'matCapSampler', 'outlineWidthSampler',\r\n                'uvAnimationMaskSampler',\r\n            ];\r\n\r\n            const uniformBuffers = ['Material', 'Scene'];\r\n\r\n            MaterialHelper.PrepareUniformsAndSamplersList({\r\n                uniformsNames: uniforms,\r\n                uniformBuffersNames: uniformBuffers,\r\n                samplers,\r\n                defines,\r\n                maxSimultaneousLights: this.maxSimultaneousLights,\r\n            } as any);\r\n\r\n            this.applyDefines(defines);\r\n\r\n            const join = defines.toString();\r\n\r\n            const previousEffect = subMesh.effect;\r\n            let effect = scene.getEngine().createEffect(shaderName, {\r\n                attributes: attribs,\r\n                uniformsNames: uniforms,\r\n                uniformBuffersNames: uniformBuffers,\r\n                samplers,\r\n                defines: join,\r\n                fallbacks,\r\n                onCompiled: this.onCompiled,\r\n                onError: this.onError,\r\n                indexParameters: {\r\n                    maxSimultaneousLights: this.maxSimultaneousLights,\r\n                    maxSimultaneousMorphTargets: defines.NUM_MORPH_INFLUENCERS,\r\n                },\r\n            } as any, engine);\r\n\r\n            if (effect) {\r\n                // Use previous effect while new one is compiling\r\n                if (this.allowShaderHotSwapping && previousEffect && !effect.isReady()) {\r\n                    effect = previousEffect;\r\n                    defines.markAsUnprocessed();\r\n                } else {\r\n                    scene.resetCachedMaterial();\r\n                    subMesh.setEffect(effect, defines);\r\n                    this.buildUniformLayout();\r\n                }\r\n            }\r\n        }\r\n\r\n        if (!subMesh.effect || !subMesh.effect.isReady()) {\r\n            return false;\r\n        }\r\n\r\n        defines._renderId = scene.getRenderId();\r\n        this._wasPreviouslyReady = true;\r\n\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @inheritdoc\r\n     * 現在の値をシェーダにバインドする\r\n     * このメソッドは毎フレームごとに呼ばれるため、冗長でも高速化を優先する\r\n     */\r\n    public bindForSubMesh(world: Matrix, mesh: Mesh, subMesh: SubMesh): void {\r\n        const scene = this.getScene();\r\n        const defines = subMesh._materialDefines as MToonMaterialDefines;\r\n        const effect = subMesh.effect;\r\n        if (!defines || !effect) {\r\n            return;\r\n        }\r\n        this._activeEffect = effect;\r\n\r\n        this.bindOnlyWorldMatrix(world);\r\n        MaterialHelper.BindBonesParameters(mesh, effect);\r\n\r\n        const mustRebind = scene.isCachedMaterialInvalid(this, effect, mesh.visibility);\r\n\r\n        if (mustRebind) {\r\n            this._uniformBuffer.bindToEffect(effect, 'Material');\r\n            this.bindViewProjection(effect);\r\n\r\n            if (!this._uniformBuffer.useUbo || !this.isFrozen || !this._uniformBuffer.isSync) {\r\n                if (scene.texturesEnabled) {\r\n                    this.bindTexture(this._diffuseTexture, effect, 'diffuse', 'vDiffuseInfos');\r\n                    effect.setFloat('alphaCutOff', this._alphaCutOff);\r\n                    this.bindTexture(this._emissiveTexture, effect, 'emissive', 'vEmissiveInfos');\r\n                    if (this._bumpTexture) {\r\n                        this._uniformBuffer.updateFloat3(\r\n                            'vBumpInfos',\r\n                            this._bumpTexture.coordinatesIndex,\r\n                            1.0 / this._bumpTexture.level,\r\n                            this._bumpScale,\r\n                        );\r\n                        const matrix = this._bumpTexture.getTextureMatrix();\r\n                        if (!matrix.isIdentityAs3x2()) {\r\n                            this._uniformBuffer.updateMatrix(`bumpMatrix`, matrix);\r\n                        }\r\n                        effect.setTexture(`bumpSampler`, this._bumpTexture);\r\n                        // bumpTexture は babylon.js のデフォルトと反対の状態である\r\n                        if (scene._mirroredCameraPosition) {\r\n                            this._uniformBuffer.updateFloat2('vTangentSpaceParams', 1.0, 1.0);\r\n                        } else {\r\n                            this._uniformBuffer.updateFloat2('vTangentSpaceParams', -1.0, -1.0);\r\n                        }\r\n                    }\r\n                    this.bindTexture(this._shadeTexture, effect, 'shade', 'vShadeInfos');\r\n                    this.bindTexture(this._receiveShadowTexture, effect, 'receiveShadow', 'vReceiveShadowInfos');\r\n                    this.bindTexture(this._shadingGradeTexture, effect, 'shadingGrade', 'vShadingGradeInfos');\r\n                    this.bindTexture(this._rimTexture, effect, 'rim', 'vRimInfos');\r\n                    this.bindTexture(this._matCapTexture, effect, 'matCap', 'vMatCapInfos');\r\n                    this.bindTexture(this._outlineWidthTexture, effect, 'outlineWidth', 'vOutlineWidthInfos');\r\n                    this.bindTexture(this._uvAnimationMaskTexture, effect, 'uvAnimationMask', 'vUvAnimationMaskInfos');\r\n                }\r\n            }\r\n\r\n            // Point size\r\n            if (this.pointsCloud) {\r\n                this._uniformBuffer.updateFloat('pointSize', this.pointSize);\r\n            }\r\n\r\n            this._uniformBuffer.updateFloat('visibility', mesh.visibility);\r\n\r\n            // MToon uniforms\r\n            this._uniformBuffer.updateFloat('receiveShadowRate', this._receiveShadowRate);\r\n            this._uniformBuffer.updateFloat('shadingGradeRate', this._shadingGradeRate);\r\n            this._uniformBuffer.updateFloat('shadeShift', this._shadeShift);\r\n            this._uniformBuffer.updateFloat('shadeToony', this._shadeToony);\r\n            this._uniformBuffer.updateFloat('lightColorAttenuation', this._lightColorAttenuation);\r\n            this._uniformBuffer.updateFloat('indirectLightIntensity', this._indirectLightIntensity);\r\n            this._uniformBuffer.updateFloat('rimLightingMix', this._rimLightingMix);\r\n            this._uniformBuffer.updateFloat('rimFresnelPower', this._rimFresnelPower);\r\n            this._uniformBuffer.updateFloat('rimLift', this._rimLift);\r\n            this._uniformBuffer.updateFloat('outlineWidth', this._outlineWidth);\r\n            this._uniformBuffer.updateFloat('outlineScaledMaxDistance', this._outlineScaledMaxDistance);\r\n            this._uniformBuffer.updateFloat('outlineLightingMix', this._outlineLightingMix);\r\n            this._uniformBuffer.updateFloat('uvAnimationScrollX', this._uvAnimationScrollX);\r\n            this._uniformBuffer.updateFloat('uvAnimationScrollY', this._uvAnimationScrollY);\r\n            this._uniformBuffer.updateFloat('uvAnimationRotation', this._uvAnimationRotation);\r\n\r\n            // Clip plane\r\n            MaterialHelper.BindClipPlane(effect, scene);\r\n\r\n            // Colors\r\n            scene.ambientColor.multiplyToRef(this.ambientColor, this.globalAmbientColor);\r\n            effect.setColor3('vAmbientColor', this.globalAmbientColor);\r\n            this._uniformBuffer.updateColor4('vDiffuseColor', this.diffuseColor, this.alpha);\r\n            this._uniformBuffer.updateColor3('vEmissiveColor', this.emissiveColor);\r\n            this._uniformBuffer.updateColor3('vShadeColor', this.shadeColor);\r\n            this._uniformBuffer.updateColor3('vRimColor', this.rimColor);\r\n            this._uniformBuffer.updateColor4('vOutlineColor', this.outlineColor, 1.0);\r\n\r\n            MaterialHelper.BindEyePosition(effect, scene);\r\n            effect.setVector3('vEyeUp', scene.activeCamera!.upVector);\r\n        }\r\n\r\n        if (mustRebind || !this.isFrozen) {\r\n            // `freeze` しない限り毎回更新される値\r\n            if (scene.lightsEnabled && !this.disableLighting) {\r\n                MaterialHelper.BindLights(scene, mesh, effect, defines, this.maxSimultaneousLights);\r\n            }\r\n\r\n            // View\r\n            if (scene.fogEnabled && mesh.applyFog && scene.fogMode !== Scene.FOGMODE_NONE) {\r\n                this.bindView(effect);\r\n            }\r\n\r\n            // Fog\r\n            MaterialHelper.BindFogParameters(scene, mesh, effect);\r\n\r\n            // Morph targets\r\n            if (defines.NUM_MORPH_INFLUENCERS) {\r\n                MaterialHelper.BindMorphTargetParameters(mesh, effect);\r\n            }\r\n\r\n            // Log. depth\r\n            MaterialHelper.BindLogDepth(defines, effect, scene);\r\n        }\r\n        effect.setFloat('aspect', scene.getEngine().getAspectRatio(scene.activeCamera!));\r\n        effect.setFloat('isOutline', 0.0);\r\n        const t = window.performance.now() / 1000;\r\n        effect.setVector4('time', new Vector4(\r\n            t / 20,\r\n            t,\r\n            t * 2,\r\n            t * 3,\r\n        ));\r\n\r\n        this._uniformBuffer.update();\r\n        this._afterBind(mesh, this._activeEffect);\r\n    }\r\n\r\n    /**\r\n     * @inheritdoc\r\n     */\r\n    public getAnimatables(): IAnimatable[] {\r\n        const results: IAnimatable[] = [];\r\n        for (const texture of this.appendedActiveTextures) {\r\n            if (texture.animations && texture.animations.length > 0) {\r\n                results.push(texture);\r\n            }\r\n        }\r\n\r\n        return results;\r\n    }\r\n\r\n    /**\r\n     * @inheritdoc\r\n     */\r\n    public getActiveTextures(): BaseTexture[] {\r\n        return super.getActiveTextures().concat(this.appendedActiveTextures);\r\n    }\r\n\r\n    /**\r\n     * @inheritdoc\r\n     */\r\n    public hasTexture(texture: BaseTexture): boolean {\r\n        if (super.hasTexture(texture)) {\r\n            return true;\r\n        }\r\n        return this.appendedActiveTextures.length > 0;\r\n    }\r\n\r\n    /**\r\n     * @inheritdoc\r\n     */\r\n    public dispose(\r\n        forceDisposeEffect?: boolean,\r\n        forceDisposeTextures?: boolean,\r\n        notBoundToMesh?: boolean,\r\n    ): void {\r\n        delete this.outlineRenderer;\r\n        if (forceDisposeTextures) {\r\n            for (const texture of this.appendedActiveTextures) {\r\n                texture.dispose();\r\n            }\r\n        }\r\n        super.dispose(forceDisposeEffect, forceDisposeTextures, notBoundToMesh);\r\n    }\r\n\r\n    /**\r\n     * UniformBufferObject のレイアウトを決定する\r\n     * シェーダー内の `uniform Material` と同じ順序で add する必要がある\r\n     * UBO を利用すると効率的に変数をシェーダに渡せるが、 WebGL v2 のみ対応\r\n     * babylon.js では WebGL v1 の場合自動でフォールバックしてくれる\r\n     * 第二引数は float の数\r\n     */\r\n    protected buildUniformLayout(): void {\r\n        this._uniformBuffer.addUniform('vDiffuseColor', 4);\r\n        this._uniformBuffer.addUniform('vDiffuseInfos', 2);\r\n        this._uniformBuffer.addUniform('diffuseMatrix', 16);\r\n\r\n        this._uniformBuffer.addUniform('vEmissiveColor', 3);\r\n        this._uniformBuffer.addUniform('vEmissiveInfos', 2);\r\n        this._uniformBuffer.addUniform('emissiveMatrix', 16);\r\n\r\n        this._uniformBuffer.addUniform('vBumpInfos', 3);\r\n        this._uniformBuffer.addUniform('bumpMatrix', 16);\r\n\r\n        this._uniformBuffer.addUniform('vShadeColor', 3);\r\n        this._uniformBuffer.addUniform('vShadeInfos', 2);\r\n        this._uniformBuffer.addUniform('shadeMatrix', 16);\r\n\r\n        this._uniformBuffer.addUniform('vReceiveShadowInfos', 2);\r\n        this._uniformBuffer.addUniform('receiveShadowMatrix', 16);\r\n\r\n        this._uniformBuffer.addUniform('vShadingGradeInfos', 2);\r\n        this._uniformBuffer.addUniform('shadingGradeMatrix', 16);\r\n\r\n        this._uniformBuffer.addUniform('vRimColor', 3);\r\n        this._uniformBuffer.addUniform('vRimInfos', 2);\r\n        this._uniformBuffer.addUniform('rimMatrix', 16);\r\n\r\n        this._uniformBuffer.addUniform('vMatCapInfos', 2);\r\n        this._uniformBuffer.addUniform('matCapMatrix', 16);\r\n\r\n        this._uniformBuffer.addUniform('vOutlineColor', 3);\r\n        this._uniformBuffer.addUniform('vOutlineWidthInfos', 2);\r\n        this._uniformBuffer.addUniform('outlineWidthMatrix', 16);\r\n\r\n        this._uniformBuffer.addUniform('vUvAnimationMaskInfos', 2);\r\n        this._uniformBuffer.addUniform('uvAnimationMaskMatrix', 16);\r\n\r\n        this._uniformBuffer.addUniform('vTangentSpaceParams', 2);\r\n        this._uniformBuffer.addUniform('pointSize', 1);\r\n        this._uniformBuffer.addUniform('visibility', 1);\r\n\r\n        this._uniformBuffer.addUniform('shadingGradeRate', 1);\r\n        this._uniformBuffer.addUniform('receiveShadowRate', 1);\r\n        this._uniformBuffer.addUniform('shadeShift', 1);\r\n        this._uniformBuffer.addUniform('shadeToony', 1);\r\n        this._uniformBuffer.addUniform('lightColorAttenuation', 1);\r\n        this._uniformBuffer.addUniform('indirectLightIntensity', 1);\r\n        this._uniformBuffer.addUniform('rimLightingMix', 1);\r\n        this._uniformBuffer.addUniform('rimFresnelPower', 1);\r\n        this._uniformBuffer.addUniform('rimLift', 1);\r\n        this._uniformBuffer.addUniform('outlineWidth', 1);\r\n        this._uniformBuffer.addUniform('outlineScaledMaxDistance', 1);\r\n        this._uniformBuffer.addUniform('outlineLightingMix', 1);\r\n        this._uniformBuffer.addUniform('uvAnimationScrollX', 1);\r\n        this._uniformBuffer.addUniform('uvAnimationScrollY', 1);\r\n        this._uniformBuffer.addUniform('uvAnimationRotation', 1);\r\n\r\n        this._uniformBuffer.create();\r\n    }\r\n\r\n    /**\r\n     * テクスチャ情報をバインドする\r\n     * @param texture\r\n     * @param effect\r\n     * @param name\r\n     * @param infoName\r\n     */\r\n    private bindTexture(texture: Nullable<BaseTexture>, effect: Effect, name: string, infoName: string) {\r\n        if (!texture) {\r\n            return;\r\n        }\r\n        this._uniformBuffer.updateFloat2(infoName, texture.coordinatesIndex, texture.level);\r\n        const matrix = texture.getTextureMatrix();\r\n        if (!matrix.isIdentityAs3x2()) {\r\n            this._uniformBuffer.updateMatrix(`${name}Matrix`, matrix);\r\n        }\r\n        effect.setTexture(`${name}Sampler`, texture);\r\n    }\r\n\r\n    /**\r\n     * テクスチャの用意が終わっているか確認する\r\n     * @param texture\r\n     * @param defines\r\n     * @param key\r\n     */\r\n    private isReadyForTexture(texture: Nullable<BaseTexture>, defines: any, key: string): boolean {\r\n        if (!texture) {\r\n            defines[key] = false;\r\n            return true;\r\n        }\r\n        if (!texture.isReadyOrNotBlocking()) {\r\n            return false;\r\n        }\r\n        MaterialHelper.PrepareDefinesForMergedUV(texture, defines, key);\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * 定数を設定する\r\n     */\r\n    private applyDefines(defines: any): void {\r\n        if (this._alphaBlend !== defines.ALPHABLEND) {\r\n            defines.ALPHABLEND = this._alphaBlend;\r\n            defines.markAsUnprocessed();\r\n        }\r\n        switch (this._debugMode) {\r\n            case DebugMode.Normal:\r\n                if (defines.MTOON_DEBUG_NORMAL !== true) {\r\n                    defines.MTOON_DEBUG_NORMAL = true;\r\n                    defines.MTOON_DEBUG_LITSHADERATE = false;\r\n                    defines.markAsUnprocessed();\r\n                }\r\n                break;\r\n            case DebugMode.LitShadeRate:\r\n                if (defines.MTOON_DEBUG_LITSHADERATE !== true) {\r\n                    defines.MTOON_DEBUG_NORMAL = false;\r\n                    defines.MTOON_DEBUG_LITSHADERATE = true;\r\n                    defines.markAsUnprocessed();\r\n                }\r\n                break;\r\n            case DebugMode.None:\r\n                if (defines.MTOON_DEBUG_NORMAL === true) {\r\n                    defines.MTOON_DEBUG_NORMAL = false;\r\n                    defines.markAsUnprocessed();\r\n                }\r\n                if (defines.MTOON_DEBUG_LITSHADERATE === true) {\r\n                    defines.MTOON_DEBUG_LITSHADERATE = false;\r\n                    defines.markAsUnprocessed();\r\n                }\r\n                break;\r\n        }\r\n        switch (this.outlineWidthMode) {\r\n            case OutlineWidthMode.WorldCorrdinates:\r\n                if (defines.MTOON_OUTLINE_WIDTH_WORLD !== true) {\r\n                    defines.MTOON_OUTLINE_WIDTH_WORLD = true;\r\n                    defines.MTOON_OUTLINE_WIDTH_SCREEN = false;\r\n                    defines.markAsUnprocessed();\r\n                }\r\n                break;\r\n            case OutlineWidthMode.ScreenCoordinates:\r\n                if (defines.MTOON_OUTLINE_WIDTH_SCREEN !== true) {\r\n                    defines.MTOON_OUTLINE_WIDTH_WORLD = false;\r\n                    defines.MTOON_OUTLINE_WIDTH_SCREEN = true;\r\n                    defines.markAsUnprocessed();\r\n                }\r\n                break;\r\n            case OutlineWidthMode.None:\r\n                if (defines.MTOON_OUTLINE_WIDTH_SCREEN !== false || defines.MTOON_OUTLINE_WIDTH_WORLD !== false) {\r\n                    defines.MTOON_OUTLINE_WIDTH_SCREEN = false;\r\n                    defines.MTOON_OUTLINE_WIDTH_WORLD = false;\r\n                    defines.markAsUnprocessed();\r\n                }\r\n                break;\r\n        }\r\n        switch (this.outlineColorMode) {\r\n            case OutlineColorMode.FixedColor:\r\n                if (defines.MTOON_OUTLINE_COLOR_FIXED !== true) {\r\n                    defines.MTOON_OUTLINE_COLOR_FIXED = true;\r\n                    defines.MTOON_OUTLINE_COLOR_MIXED = false;\r\n                    defines.markAsUnprocessed();\r\n                }\r\n                break;\r\n            case OutlineColorMode.MixedLighting:\r\n                if (defines.MTOON_OUTLINE_COLOR_MIXED !== true) {\r\n                    defines.MTOON_OUTLINE_COLOR_FIXED = false;\r\n                    defines.MTOON_OUTLINE_COLOR_MIXED = true;\r\n                    defines.markAsUnprocessed();\r\n                }\r\n                break;\r\n        }\r\n    }\r\n\r\n//#region Misc\r\n    /**\r\n     * @inheritdoc\r\n     */\r\n    public getClassName() {\r\n        return 'MToonMaterial';\r\n    }\r\n\r\n    /**\r\n     * @inheritdoc\r\n     */\r\n    public getAlphaTestTexture(): Nullable<BaseTexture> {\r\n        return this.diffuseTexture;\r\n    }\r\n\r\n    /**\r\n     * @inheritdoc\r\n     */\r\n    public needAlphaBlending() {\r\n        return this._alphaBlend;\r\n    }\r\n\r\n    /**\r\n     * @inheritdoc\r\n     */\r\n    public needAlphaTesting() {\r\n        return this._alphaTest;\r\n    }\r\n\r\n    /**\r\n     * @inheritdoc\r\n     */\r\n    public clone(name: string): MToonMaterial {\r\n        const result = SerializationHelper.Clone(() => new MToonMaterial(name, this.getScene()), this);\r\n\r\n        result.name = name;\r\n        result.id = name;\r\n\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * @inheritdoc\r\n     */\r\n    public serialize(): any {\r\n        return SerializationHelper.Serialize(this);\r\n    }\r\n\r\n    /**\r\n     * @inheritdoc\r\n     */\r\n    public static Parse(parsedMaterial: any, scene: Scene, rootUrl: string): MToonMaterial {\r\n        return SerializationHelper.Parse(() => new MToonMaterial(parsedMaterial.name, scene), parsedMaterial, scene, rootUrl);\r\n    }\r\n//#endregion\r\n}\r\n","import { Engine } from '@babylonjs/core/Engines/engine';\r\nimport { Material } from '@babylonjs/core/Materials/material';\r\nimport { AbstractMesh } from '@babylonjs/core/Meshes/abstractMesh';\r\nimport { Mesh, _InstancesBatch } from '@babylonjs/core/Meshes/mesh';\r\nimport { SubMesh } from '@babylonjs/core/Meshes/subMesh';\r\nimport { Scene } from '@babylonjs/core/scene';\r\nimport { ISceneComponent, SceneComponentConstants } from '@babylonjs/core/sceneComponent';\r\nimport { Nullable } from '@babylonjs/core/types';\r\nimport { MToonMaterial } from './mtoon-material';\r\n\r\nconst BASE_NAME = 'MToonOutline';\r\n\r\n/**\r\n * MToonMaterial を別のパスで描画するレンダラ\r\n * @see OutlineRenderer\r\n */\r\nexport class MToonOutlineRenderer implements ISceneComponent {\r\n    public static rendererId = 0;\r\n\r\n    /**\r\n     * @inheritdoc\r\n     */\r\n    public readonly name: string;\r\n\r\n    private _engine: Engine;\r\n    private _savedDepthWrite = false;\r\n\r\n    /**\r\n     * @inheritdoc\r\n     * MToonMaterial ごとにインスタンスを生成する\r\n     */\r\n    public constructor(\r\n        public scene: Scene,\r\n        public material: MToonMaterial,\r\n    ) {\r\n        this.name = `${BASE_NAME}_${material.name}_${MToonOutlineRenderer.rendererId++}`;\r\n        this.scene._addComponent(this);\r\n        this._engine = this.scene.getEngine();\r\n    }\r\n\r\n    /**\r\n     * @inheritdoc\r\n     * シーン描画前後にレンダリング処理を登録する\r\n     */\r\n    public register(): void {\r\n        this.scene._beforeRenderingMeshStage.registerStep(\r\n            SceneComponentConstants.STEP_BEFORERENDERINGMESH_OUTLINE,\r\n            this,\r\n            this._beforeRenderingMesh,\r\n        );\r\n        this.scene._afterRenderingMeshStage.registerStep(\r\n            SceneComponentConstants.STEP_AFTERRENDERINGMESH_OUTLINE,\r\n            this,\r\n            this._afterRenderingMesh,\r\n        );\r\n    }\r\n\r\n    /**\r\n     * @inheritdoc\r\n     */\r\n    public rebuild(): void {\r\n        // Nothing to do here.\r\n    }\r\n\r\n    /**\r\n     * @inheritdoc\r\n     */\r\n    public dispose(): void {\r\n        delete this.scene;\r\n        delete this.material;\r\n        delete this._engine;\r\n    }\r\n\r\n    /**\r\n     * アウトラインを描画する\r\n     */\r\n    private render(mesh: Mesh, subMesh: SubMesh, batch: _InstancesBatch): void {\r\n        const effect = subMesh.effect;\r\n        if (!effect || !effect.isReady()) {\r\n            return;\r\n        }\r\n\r\n        this.material.applyOutlineCullMode();\r\n        this._engine.enableEffect(effect);\r\n        mesh._bind(subMesh, effect, Material.TriangleFillMode);\r\n\r\n        this._engine.setZOffset(-1);\r\n\r\n        // レンダリング実行\r\n        mesh._processRendering(\r\n            subMesh,\r\n            effect,\r\n            Material.TriangleFillMode,\r\n            batch,\r\n            this.isHardwareInstancedRendering(subMesh._id, batch),\r\n            (isInstance, world, effectiveMaterial) => {\r\n                (effectiveMaterial as MToonMaterial).bindForSubMesh(world, mesh, subMesh);\r\n                effect.setMatrix('world', world);\r\n                effect.setFloat('isOutline', 1.0);\r\n            },\r\n            this.material,\r\n        );\r\n\r\n        this._engine.setZOffset(0);\r\n        this.material.restoreOutlineCullMode();\r\n    }\r\n\r\n    /**\r\n     * このメッシュを描画する前に実行されるコールバック\r\n     */\r\n    private _beforeRenderingMesh(mesh: AbstractMesh, subMesh: SubMesh, batch: _InstancesBatch): void {\r\n        this._savedDepthWrite = this._engine.getDepthWrite();\r\n\r\n        if (!this.willRender(subMesh)) {\r\n            return;\r\n        }\r\n\r\n        // 深度ナシで後ろに描画\r\n        this._engine.setDepthWrite(false);\r\n        this.render(subMesh.getRenderingMesh(), subMesh, batch);\r\n        this._engine.setDepthWrite(this._savedDepthWrite);\r\n    }\r\n\r\n    /**\r\n     * このメッシュを描画した後に実行されるコールバック\r\n     */\r\n    private _afterRenderingMesh(mesh: AbstractMesh, subMesh: SubMesh, batch: _InstancesBatch): void {\r\n        if (!this.willRender(subMesh)) {\r\n            return;\r\n        }\r\n\r\n        if (this._savedDepthWrite) {\r\n            // 深度アリで再度書き込む\r\n            this._engine.setDepthWrite(true);\r\n            this._engine.setColorWrite(false);\r\n            this.render(subMesh.getRenderingMesh(), subMesh, batch);\r\n            this._engine.setColorWrite(true);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * インスタンシングを行うかどうか\r\n     */\r\n    private isHardwareInstancedRendering(subMeshId: number, batch: _InstancesBatch): boolean {\r\n        return (this._engine.getCaps().instancedArrays)\r\n            && (batch.visibleInstances[subMeshId] !== null)\r\n            && (typeof batch.visibleInstances[subMeshId] !== 'undefined');\r\n    }\r\n\r\n     /**\r\n     * このメッシュでアウトラインを描画するかどうか\r\n     */\r\n    private willRender(subMesh: SubMesh): boolean {\r\n        const material = subMesh.getMaterial() as Nullable<MToonMaterial>;\r\n\r\n        if (!material || material.getClassName() !== 'MToonMaterial' || material.getOutlineRendererName() !== this.name) {\r\n            // このコンポーネントの Material ではない\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n}\r\n","export default \"// replace vBumpUV to mainUv\\r\\nvec2 uvOffset = vec2(0.0, 0.0);\\r\\n\\r\\n#if defined(BUMP) || defined(PARALLAX)\\r\\n\\t#ifdef NORMALXYSCALE\\r\\n\\t\\tfloat normalScale = 1.0;\\r\\n\\t#else\\r\\n\\t\\tfloat normalScale = vBumpInfos.y;\\r\\n\\t#endif\\r\\n\\r\\n\\t#if defined(TANGENT) && defined(NORMAL)\\r\\n\\t\\tmat3 TBN = vTBN;\\r\\n\\t#else\\r\\n\\t\\tmat3 TBN = cotangent_frame(normalW * normalScale, vPositionW, mainUv);\\r\\n\\t#endif\\r\\n#elif defined(ANISOTROPIC)\\r\\n\\t#if defined(TANGENT) && defined(NORMAL)\\r\\n\\t\\tmat3 TBN = vTBN;\\r\\n\\t#else\\r\\n\\t\\tmat3 TBN = cotangent_frame(normalW, vPositionW, vMainUV1, vec2(1., 1.));\\r\\n\\t#endif\\r\\n#endif\\r\\n\\r\\n#ifdef PARALLAX\\r\\n\\tmat3 invTBN = transposeMat3(TBN);\\r\\n\\r\\n\\t#ifdef PARALLAXOCCLUSION\\r\\n\\t\\tuvOffset = parallaxOcclusion(invTBN * -viewDirectionW, invTBN * normalW, mainUv, vBumpInfos.z);\\r\\n\\t#else\\r\\n\\t\\tuvOffset = parallaxOffset(invTBN * viewDirectionW, vBumpInfos.z);\\r\\n\\t#endif\\r\\n#endif\\r\\n\\r\\n#ifdef BUMP\\r\\n\\t#ifdef OBJECTSPACE_NORMALMAP\\r\\n\\t\\tnormalW = normalize(texture2D(bumpSampler, mainUv).xyz  * 2.0 - 1.0);\\r\\n\\t\\tnormalW = normalize(mat3(normalMatrix) * normalW);\\r\\n\\t#else\\r\\n\\t\\tnormalW = perturbNormal(TBN, mainUv + uvOffset);\\r\\n\\t#endif\\r\\n#endif\\r\\n\"","export default \"uniform mat4 viewProjection;\\r\\nuniform mat4 view;\\r\\nuniform float visibility;\\r\\n\\r\\n// Colors\\r\\nuniform vec4 vDiffuseColor;\\r\\nuniform vec3 vEmissiveColor;\\r\\nuniform vec3 vShadeColor;\\r\\nuniform vec3 vRimColor;\\r\\nuniform vec4 vOutlineColor;\\r\\n\\r\\n// Samplers\\r\\n#ifdef DIFFUSE\\r\\nuniform vec2 vDiffuseInfos;\\r\\n#endif\\r\\n\\r\\n#ifdef EMISSIVE\\r\\nuniform vec2 vEmissiveInfos;\\r\\n#endif\\r\\n\\r\\n#ifdef BUMP\\r\\nuniform vec3 vBumpInfos;\\r\\nuniform vec2 vTangentSpaceParams;\\r\\n#endif\\r\\n\\r\\n#ifdef SHADE\\r\\nuniform vec2 vShadeInfos;\\r\\n#endif\\r\\n\\r\\n#ifdef RECEIVE_SHADOW\\r\\nuniform vec2 vReceiveShadowInfos;\\r\\n#endif\\r\\n\\r\\n#ifdef SHADING_GRADE\\r\\nuniform vec2 vShadingGradeInfos;\\r\\n#endif\\r\\n\\r\\n#ifdef RIM\\r\\nuniform vec2 vRimInfos;\\r\\n#endif\\r\\n\\r\\n#ifdef MATCAP\\r\\nuniform vec2 vMatCapInfos;\\r\\n#endif\\r\\n\\r\\n#ifdef OUTLINE_WIDTH\\r\\nuniform vec2 vOutlineWidthInfos;\\r\\n#endif\\r\\n\\r\\n#ifdef UV_ANIMATION_MASK\\r\\nuniform vec2 vUvAnimationMaskInfos;\\r\\n#endif\\r\\n\\r\\n// MToon params\\r\\nuniform float shadingGradeRate;\\r\\nuniform float receiveShadowRate;\\r\\nuniform float shadeShift;\\r\\nuniform float shadeToony;\\r\\nuniform float lightColorAttenuation;\\r\\nuniform float indirectLightIntensity;\\r\\nuniform float rimLightingMix;\\r\\nuniform float rimFresnelPower;\\r\\nuniform float rimLift;\\r\\nuniform float outlineWidth;\\r\\nuniform float outlineScaledMaxDistance;\\r\\nuniform float outlineLightingMix;\\r\\nuniform float uvAnimationScrollX;\\r\\nuniform float uvAnimationScrollY;\\r\\nuniform float uvAnimationRotation;\\r\\n\"","export default \"#ifdef LIGHT{X}\\r\\n    #ifdef SHADOW{X}\\r\\n        #ifdef SHADOWCLOSEESM{X}\\r\\n            #if defined(SHADOWCUBE{X})\\r\\n                shadow = computeShadowWithCloseESMCube(light{X}.vLightData.xyz, shadowSampler{X}, light{X}.shadowsInfo.x, light{X}.shadowsInfo.z, light{X}.depthValues);\\r\\n            #else\\r\\n                shadow = computeShadowWithCloseESM(vPositionFromLight{X}, vDepthMetric{X}, shadowSampler{X}, light{X}.shadowsInfo.x, light{X}.shadowsInfo.z, light{X}.shadowsInfo.w);\\r\\n            #endif\\r\\n        #elif defined(SHADOWESM{X})\\r\\n            #if defined(SHADOWCUBE{X})\\r\\n                shadow = computeShadowWithESMCube(light{X}.vLightData.xyz, shadowSampler{X}, light{X}.shadowsInfo.x, light{X}.shadowsInfo.z, light{X}.depthValues);\\r\\n            #else\\r\\n                shadow = computeShadowWithESM(vPositionFromLight{X}, vDepthMetric{X}, shadowSampler{X}, light{X}.shadowsInfo.x, light{X}.shadowsInfo.z, light{X}.shadowsInfo.w);\\r\\n            #endif\\r\\n        #elif defined(SHADOWPOISSON{X})\\r\\n            #if defined(SHADOWCUBE{X})\\r\\n                shadow = computeShadowWithPoissonSamplingCube(light{X}.vLightData.xyz, shadowSampler{X}, light{X}.shadowsInfo.y, light{X}.shadowsInfo.x, light{X}.depthValues);\\r\\n            #else\\r\\n                shadow = computeShadowWithPoissonSampling(vPositionFromLight{X}, vDepthMetric{X}, shadowSampler{X}, light{X}.shadowsInfo.y, light{X}.shadowsInfo.x, light{X}.shadowsInfo.w);\\r\\n            #endif\\r\\n        #elif defined(SHADOWPCF{X})\\r\\n            #if defined(SHADOWLOWQUALITY{X})\\r\\n                shadow = computeShadowWithPCF1(vPositionFromLight{X}, vDepthMetric{X}, shadowSampler{X}, light{X}.shadowsInfo.x, light{X}.shadowsInfo.w);\\r\\n            #elif defined(SHADOWMEDIUMQUALITY{X})\\r\\n                shadow = computeShadowWithPCF3(vPositionFromLight{X}, vDepthMetric{X}, shadowSampler{X}, light{X}.shadowsInfo.yz, light{X}.shadowsInfo.x, light{X}.shadowsInfo.w);\\r\\n            #else\\r\\n                shadow = computeShadowWithPCF5(vPositionFromLight{X}, vDepthMetric{X}, shadowSampler{X}, light{X}.shadowsInfo.yz, light{X}.shadowsInfo.x, light{X}.shadowsInfo.w);\\r\\n            #endif\\r\\n        #elif defined(SHADOWPCSS{X})\\r\\n            #if defined(SHADOWLOWQUALITY{X})\\r\\n                shadow = computeShadowWithPCSS16(vPositionFromLight{X}, vDepthMetric{X}, depthSampler{X}, shadowSampler{X}, light{X}.shadowsInfo.y, light{X}.shadowsInfo.z, light{X}.shadowsInfo.x, light{X}.shadowsInfo.w);\\r\\n            #elif defined(SHADOWMEDIUMQUALITY{X})\\r\\n                shadow = computeShadowWithPCSS32(vPositionFromLight{X}, vDepthMetric{X}, depthSampler{X}, shadowSampler{X}, light{X}.shadowsInfo.y, light{X}.shadowsInfo.z, light{X}.shadowsInfo.x, light{X}.shadowsInfo.w);\\r\\n            #else\\r\\n                shadow = computeShadowWithPCSS64(vPositionFromLight{X}, vDepthMetric{X}, depthSampler{X}, shadowSampler{X}, light{X}.shadowsInfo.y, light{X}.shadowsInfo.z, light{X}.shadowsInfo.x, light{X}.shadowsInfo.w);\\r\\n            #endif\\r\\n        #else\\r\\n            #if defined(SHADOWCUBE{X})\\r\\n                shadow = computeShadowCube(light{X}.vLightData.xyz, shadowSampler{X}, light{X}.shadowsInfo.x, light{X}.depthValues);\\r\\n            #else\\r\\n                shadow = computeShadow(vPositionFromLight{X}, vDepthMetric{X}, shadowSampler{X}, light{X}.shadowsInfo.x, light{X}.shadowsInfo.w);\\r\\n            #endif\\r\\n        #endif\\r\\n    #else\\r\\n        shadow = 1.;\\r\\n    #endif\\r\\n\\r\\n    // ここで MToon のライティングを適用\\r\\n    #ifdef SPOTLIGHT{X}\\r\\n        lightDirection = computeSpotLightDirection(light{X}.vLightData);\\r\\n    #elif defined(HEMILIGHT{X})\\r\\n        lightDirection = computeHemisphericLightDirection(light{X}.vLightData, normalW.xyz);\\r\\n    #elif defined(POINTLIGHT{X}) || defined(DIRLIGHT{X})\\r\\n        lightDirection = computeLightDirection(light{X}.vLightData);\\r\\n    #endif\\r\\n    mtoonDiffuse = computeMToonDiffuseLighting(viewDirectionW.xyz, normalW.xyz, mainUv, lightDirection, light{X}.vLightDiffuse.rgba, shadow);\\r\\n    diffuseBase += mtoonDiffuse.rgb;\\r\\n    alpha = min(alpha, mtoonDiffuse.a);\\r\\n    #ifdef ALPHATEST\\r\\n        if (alpha < alphaCutOff) {\\r\\n            discard;\\r\\n        }\\r\\n    #endif\\r\\n#endif\\r\\n\"","export default \"#include<__decl__mtoonFragment>\\r\\n\\r\\n#if defined(BUMP) || !defined(NORMAL)\\r\\n#extension GL_OES_standard_derivatives : enable\\r\\n#endif\\r\\n\\r\\n#ifdef LOGARITHMICDEPTH\\r\\n#extension GL_EXT_frag_depth : enable\\r\\n#endif\\r\\n\\r\\n// Constants\\r\\n#define RECIPROCAL_PI2 0.15915494\\r\\n#define PI_2 6.28318530718\\r\\n#define EPS_COL 0.00001\\r\\n\\r\\nuniform vec3 vEyePosition;\\r\\nuniform vec3 vEyeUp;\\r\\nuniform vec3 vAmbientColor;\\r\\nuniform float aspect;\\r\\nuniform float isOutline;\\r\\nuniform vec4 time;\\r\\n\\r\\n// Input\\r\\nvarying vec3 vPositionW;\\r\\n\\r\\n#ifdef NORMAL\\r\\nvarying vec3 vNormalW;\\r\\n#endif\\r\\n\\r\\n#ifdef MAINUV1\\r\\n    varying vec2 vMainUV1;\\r\\n#endif\\r\\n\\r\\n#ifdef MAINUV2\\r\\n    varying vec2 vMainUV2;\\r\\n#endif\\r\\n\\r\\n// Helper functions\\r\\n#include<helperFunctions>\\r\\n\\r\\n// Lights\\r\\n#include<__decl__lightFragment>[0..maxSimultaneousLights]\\r\\n\\r\\n#include<lightsFragmentFunctions>\\r\\n#include<shadowsFragmentFunctions>\\r\\n\\r\\n// Samplers\\r\\n#ifdef DIFFUSE\\r\\n    #if DIFFUSEDIRECTUV == 1\\r\\n        #define vDiffuseUV vMainUV1\\r\\n    #elif DIFFUSEDIRECTUV == 2\\r\\n        #define vDiffuseUV vMainUV2\\r\\n    #else\\r\\n        varying vec2 vDiffuseUV;\\r\\n    #endif\\r\\n    uniform sampler2D diffuseSampler;\\r\\n#endif\\r\\n\\r\\n#ifdef EMISSIVE\\r\\n    #if EMISSIVEDIRECTUV == 1\\r\\n        #define vEmissiveUV vMainUV1\\r\\n    #elif EMISSIVEDIRECTUV == 2\\r\\n        #define vEmissiveUV vMainUV2\\r\\n    #else\\r\\n        varying vec2 vEmissiveUV;\\r\\n    #endif\\r\\n    uniform sampler2D emissiveSampler;\\r\\n#endif\\r\\n\\r\\n#ifdef ALPHATEST\\r\\n     uniform float alphaCutOff;\\r\\n#endif\\r\\n\\r\\n#ifdef SHADE\\r\\n    uniform sampler2D shadeSampler;\\r\\n    #if SHADEDIRECTUV == 1\\r\\n        #define vShadeUV vMainUV1\\r\\n    #elif SHADEDIRECTUV == 2\\r\\n        #define vShadeUV vMainUV2\\r\\n    #else\\r\\n        varying vec2 vShadeUV;\\r\\n    #endif\\r\\n#endif\\r\\n#ifdef RECEIVE_SHADOW\\r\\n    uniform sampler2D receiveShadowSampler;\\r\\n    #if RECEIVE_SHADOWDIRECTUV == 1\\r\\n        #define vReceiveShadowUV vMainUV1\\r\\n    #elif RECEIVE_SHADOWDIRECTUV == 2\\r\\n        #define vReceiveShadowUV vMainUV2\\r\\n    #else\\r\\n        varying vec2 vReceiveShadowUV;\\r\\n    #endif\\r\\n#endif\\r\\n#ifdef SHADING_GRADE\\r\\n    uniform sampler2D shadingGradeSampler;\\r\\n    #if SHADING_GRADEDIRECTUV == 1\\r\\n        #define vShadingGradeUV vMainUV1\\r\\n    #elif SHADING_GRADEDIRECTUV == 2\\r\\n        #define vShadingGradeUV vMainUV2\\r\\n    #else\\r\\n        varying vec2 vShadingGradeUV;\\r\\n    #endif\\r\\n#endif\\r\\n#ifdef RIM\\r\\n    uniform sampler2D rimSampler;\\r\\n    #if RIMDIRECTUV == 1\\r\\n        #define vRimUV vMainUV1\\r\\n    #elif RIMDIRECTUV == 2\\r\\n        #define vRimUV vMainUV2\\r\\n    #else\\r\\n        varying vec2 vRimUV;\\r\\n    #endif\\r\\n#endif\\r\\n#ifdef MATCAP\\r\\n    uniform sampler2D matCapSampler;\\r\\n    #if MATCAPDIRECTUV == 1\\r\\n        #define vMatCapUV vMainUV1\\r\\n    #elif MATCAPDIRECTUV == 2\\r\\n        #define vMatCapUV vMainUV2\\r\\n    #else\\r\\n        varying vec2 vMatCapUV;\\r\\n    #endif\\r\\n#endif\\r\\n#ifdef OUTLINE_WIDTH\\r\\n    uniform sampler2D outlineWidthSampler;\\r\\n    #if OUTLINE_WIDTHDIRECTUV == 1\\r\\n        #define vOutlineWidthUV vMainUV1\\r\\n    #elif OUTLINE_WIDTHDIRECTUV == 2\\r\\n        #define vOutlineWidthUV vMainUV2\\r\\n    #else\\r\\n        varying vec2 vOutlineWidthUV;\\r\\n    #endif\\r\\n#endif\\r\\n#ifdef UV_ANIMATION_MASK\\r\\n    uniform sampler2D uvAnimationMaskSampler;\\r\\n    #if UV_ANIMATION_MASKDIRECTUV == 1\\r\\n        #define vUvAnimationMaskUV vMainUV1\\r\\n    #elif UV_ANIMATION_MASKDIRECTUV == 2\\r\\n        #define vUvAnimationMaskUV vMainUV2\\r\\n    #else\\r\\n        varying vec2 vUvAnimationMaskUV;\\r\\n    #endif\\r\\n#endif\\r\\n\\r\\n/**\\r\\n* DirectionalLight, PointLight の角度を計算\\r\\n*/\\r\\nvec3 computeLightDirection(vec4 lightData) {\\r\\n      return normalize(mix(lightData.xyz - vPositionW, -lightData.xyz, lightData.w));\\r\\n}\\r\\n\\r\\n/**\\r\\n* SpotLight の角度を計算\\r\\n*/\\r\\nvec3 computeSpotLightDirection(vec4 lightData) {\\r\\n     return normalize(lightData.xyz - vPositionW);\\r\\n}\\r\\n\\r\\n/**\\r\\n* HemisphericLight の角度を計算\\r\\n*/\\r\\nvec3 computeHemisphericLightDirection(vec4 lightData, vec3 vNormal) {\\r\\n     return normalize(lightData.xyz);\\r\\n}\\r\\n\\r\\n/**\\r\\n* MToon シェーダーの陰実装\\r\\n*/\\r\\nvec4 computeMToonDiffuseLighting(vec3 worldView, vec3 worldNormal, vec2 mainUv, vec3 lightDirection, vec4 lightDiffuse, float shadowAttenuation) {\\r\\n    float _receiveShadow = receiveShadowRate;\\r\\n#ifdef RECEIVE_SHADOW\\r\\n    _receiveShadow = _receiveShadow * texture2D(receiveShadowSampler, mainUv).r * vReceiveShadowInfos.y;\\r\\n#endif\\r\\n\\r\\n    float _shadingGrade = 0.0;\\r\\n#ifdef SHADING_GRADE\\r\\n    _shadingGrade = 1.0 - texture2D(shadingGradeSampler, mainUv).r * vShadingGradeInfos.y;\\r\\n#endif\\r\\n    _shadingGrade = 1.0 - shadingGradeRate * _shadingGrade;\\r\\n\\r\\n    // Lighting\\r\\n    vec3 _lightColor = lightDiffuse.rgb * step(0.5, length(lightDirection)); // length(lightDir) is zero if directional light is disabled.\\r\\n    float _dotNL = dot(lightDirection, worldNormal);\\r\\n#ifdef MTOON_FORWARD_ADD\\r\\n    float _lightAttenuation = 1.0;\\r\\n#else\\r\\n    float _lightAttenuation = shadowAttenuation * mix(1.0, shadowAttenuation, _receiveShadow);\\r\\n#endif\\r\\n\\r\\n    // lighting intensity\\r\\n    float _lightIntensity = _dotNL;\\r\\n    _lightIntensity = _lightIntensity * 0.5 + 0.5; // from [-1, +1] to [0, 1]\\r\\n    _lightIntensity = _lightIntensity * _lightAttenuation; // receive shadow\\r\\n    _lightIntensity = _lightIntensity * _shadingGrade; // darker\\r\\n    _lightIntensity = _lightIntensity * 2.0 - 1.0; // from [0, 1] to [-1, +1]\\r\\n    // tooned. mapping from [minIntensityThreshold, maxIntensityThreshold] to [0, 1]\\r\\n    float _maxIntensityThreshold = mix(1.0, shadeShift, shadeToony);\\r\\n    float _minIntensityThreshold = shadeShift;\\r\\n    _lightIntensity = clamp((_lightIntensity - _minIntensityThreshold) / max(EPS_COL, (_maxIntensityThreshold - _minIntensityThreshold)), 0.0, 1.0);\\r\\n\\r\\n    // Albedo color\\r\\n    vec3 _shade = vShadeColor;\\r\\n#ifdef SHADE\\r\\n    _shade = _shade * texture2D(shadeSampler, mainUv).rgb * vShadeInfos.y;\\r\\n#endif\\r\\n\\r\\n    vec4 _lit = vDiffuseColor;\\r\\n#ifdef DIFFUSE\\r\\n    _lit = _lit * texture2D(diffuseSampler, mainUv) * vDiffuseInfos.y;\\r\\n#endif\\r\\n    vec3 _col = mix(_shade.rgb, _lit.rgb, _lightIntensity);\\r\\n\\r\\n    // Direct Light\\r\\n    vec3 _lighting = _lightColor;\\r\\n    _lighting = mix(_lighting, vec3(max(EPS_COL, max(_lighting.x, max(_lighting.y, _lighting.z)))), lightColorAttenuation); // color atten\\r\\n#ifdef MTOON_FORWARD_ADD\\r\\n    _lighting *= 0.5; // darken if additional light\\r\\n    _lighting *= min(0, dotNL) + 1.0; // darken dotNL < 0 area by using half lambert\\r\\n    _lighting *= shadowAttenuation; // darken if receiving shadow\\r\\n#else\\r\\n    // base light does not darken.\\r\\n#endif\\r\\n    _col *= _lighting;\\r\\n\\r\\n    // Indirect Light\\r\\n#ifdef MTOON_FORWARD_ADD\\r\\n#else\\r\\n    vec3 _toonedGI = vAmbientColor.rgb; // TODO: GI\\r\\n    vec3 _indirectLighting = mix(_toonedGI, vAmbientColor.rgb, indirectLightIntensity);\\r\\n    _indirectLighting = mix(_indirectLighting, vec3(max(EPS_COL, max(_indirectLighting.x, max(_indirectLighting.y, _indirectLighting.z)))), lightColorAttenuation); // color atten\\r\\n    _col += _indirectLighting * _lit.rgb;\\r\\n\\r\\n    _col = min(_col.rgb, _lit.rgb); // comment out if you want to PBR absolutely.\\r\\n#endif\\r\\n\\r\\n    // parametric rim lighting\\r\\n#ifdef MTOON_FORWARD_ADD\\r\\n    vec3 _staticRimLighting = vec3(0.0);\\r\\n    vec3 _mixedRimLighting = _lighting;\\r\\n#else\\r\\n    vec3 _staticRimLighting = vec3(1.0);\\r\\n    vec3 _mixedRimLighting = _lighting + _indirectLighting;\\r\\n#endif\\r\\n    vec3 _rimLighting = mix(_staticRimLighting, _mixedRimLighting, rimLightingMix);\\r\\n    vec3 _rimColor = vRimColor.rgb;\\r\\n#ifdef RIM\\r\\n    _rimColor = _rimColor * texture2D(rimSampler, vRimUV + mainUv).rgb * vRimInfos.y;\\r\\n#endif\\r\\n    vec3 _rim = pow(clamp(1.0 - dot(worldNormal, worldView) + rimLift, 0.0, 1.0), rimFresnelPower) * _rimColor.rgb;\\r\\n    _col += mix(_rim * _rimLighting, vec3(0.0), isOutline);\\r\\n\\r\\n    // additive matcap\\r\\n#ifdef MTOON_FORWARD_ADD\\r\\n#else\\r\\n#ifdef MATCAP\\r\\n    vec3 _worldViewUp = normalize(vEyeUp - worldView * dot(worldView, vEyeUp));\\r\\n    vec3 _worldViewRight = normalize(cross(worldView, _worldViewUp));\\r\\n    vec2 _matCapUv = vec2(dot(_worldViewRight, worldNormal), dot(_worldViewUp, worldNormal)) * 0.5 + 0.5;\\r\\n    // uv.y is reversed\\r\\n    _matCapUv.y = (1.0 - _matCapUv.y);\\r\\n    vec3 _matCapLighting = texture2D(matCapSampler, _matCapUv).rgb * vMatCapInfos.y;\\r\\n    _col += mix(_matCapLighting, vec3(0.0), isOutline);\\r\\n#endif\\r\\n#endif\\r\\n\\r\\n    // Emission\\r\\n#ifdef MTOON_FORWARD_ADD\\r\\n#else\\r\\n    vec3 _emission = vEmissiveColor.rgb;\\r\\n#ifdef EMISSIVE\\r\\n     _emission *= texture2D(emissiveSampler, mainUv).rgb * vEmissiveInfos.y;\\r\\n#endif\\r\\n     _col += mix(_emission, vec3(0.0), isOutline);\\r\\n#endif\\r\\n\\r\\n    float _alpha = 1.0;\\r\\n\\r\\n#ifdef ALPHABLEND\\r\\n    _alpha = mix(_lit.a, _lit.a * vOutlineColor.a, isOutline);\\r\\n#endif\\r\\n\\r\\n    // outline\\r\\n#ifdef MTOON_OUTLINE_COLOR_FIXED\\r\\n    _col = mix(_col, vOutlineColor.rgb, isOutline);\\r\\n#elif defined(MTOON_OUTLINE_COLOR_MIXED)\\r\\n    _col = mix(_col, vOutlineColor.rgb * mix(vec3(1.0), _col, outlineLightingMix), isOutline);\\r\\n#else\\r\\n#endif\\r\\n\\r\\n    // debug\\r\\n#ifdef MTOON_DEBUG_NORMAL\\r\\n    #ifdef MTOON_FORWARD_ADD\\r\\n        return vec4(0.0);\\r\\n    #else\\r\\n        return vec4(worldNormal * 0.5 + 0.5, _lit.a);\\r\\n    #endif\\r\\n#elif defined(MTOON_DEBUG_LITSHADERATE)\\r\\n    #ifdef MTOON_FORWARD_ADD\\r\\n        return vec4(0.0);\\r\\n    #else\\r\\n        return vec4(_lightIntensity, _lit.a);\\r\\n    #endif\\r\\n#endif\\r\\n\\r\\n    return vec4(_col, _alpha);\\r\\n}\\r\\n\\r\\n#include<bumpFragmentFunctions>\\r\\n#include<clipPlaneFragmentDeclaration>\\r\\n#include<logDepthDeclaration>\\r\\n#include<fogFragmentDeclaration>\\r\\n\\r\\nvoid main(void) {\\r\\n#ifdef MTOON_CLIP_IF_OUTLINE_IS_NONE\\r\\n    #ifdef MTOON_OUTLINE_WIDTH_WORLD\\r\\n    #elif defined(MTOON_OUTLINE_WIDTH_SCREEN)\\r\\n    #else\\r\\n        discard;\\r\\n    #endif\\r\\n#endif\\r\\n\\r\\n#include<clipPlaneFragment>\\r\\n\\r\\n    vec3 viewDirectionW = normalize(vEyePosition - vPositionW);\\r\\n\\r\\n    // Base color\\r\\n    vec4 baseColor = vec4(1., 1., 1., 1.);\\r\\n    vec3 diffuseColor = vec3(1., 1., 1.);\\r\\n\\r\\n    // Alpha\\r\\n    float alpha = 1.0;\\r\\n\\r\\n    // Bump\\r\\n#ifdef NORMAL\\r\\n     vec3 normalW = normalize(vNormalW);\\r\\n#else\\r\\n     vec3 normalW = normalize(-cross(dFdx(vPositionW), dFdy(vPositionW)));\\r\\n#endif\\r\\n\\r\\n#include<depthPrePass>\\r\\n\\r\\n    // Ambient color\\r\\n    vec3 baseAmbientColor = vec3(1., 1., 1.);\\r\\n    float glossiness = 0.;\\r\\n\\r\\n    // Lighting\\r\\n    vec3 diffuseBase = vec3(0., 0., 0.);\\r\\n    lightingInfo info;\\r\\n    float shadow = 1.;\\r\\n    vec3 lightDirection = vec3(0.0, 1.0, 0.0);\\r\\n    vec4 mtoonDiffuse = vec4(0.0, 0.0, 0.0, 1.0);\\r\\n\\r\\n    // MToon UV\\r\\n    // 全てのテクスチャは diffuse(_MainTex) の UV 情報を利用する\\r\\n    vec2 mainUv = vec2(0.0);\\r\\n#ifdef DIFFUSE\\r\\n    mainUv += vDiffuseUV;\\r\\n#elif defined(MAINUV1)\\r\\n    mainUv += vMainUV1;\\r\\n#elif defined(MAINUV2)\\r\\n    mainUv += vMainUV2;\\r\\n#endif\\r\\n\\r\\n    // uv anim\\r\\n    float uvAnim = time.y;\\r\\n#ifdef UV_ANIMATION_MASK\\r\\n    uvAnim *= texture2D(uvAnimationMaskSampler, mainUv).r;\\r\\n#endif\\r\\n    // translate uv in bottom-left origin coordinates.\\r\\n    mainUv += vec2(uvAnimationScrollX, uvAnimationScrollY) * uvAnim;\\r\\n    // rotate uv counter-clockwise around (0.5, 0.5) in bottom-left origin coordinates.\\r\\n    float rotateRad = uvAnimationRotation * PI_2 * uvAnim;\\r\\n    vec2 rotatePivot = vec2(0.5, 0.5);\\r\\n    mainUv = mat2(cos(rotateRad), -sin(rotateRad), sin(rotateRad), cos(rotateRad)) * (mainUv - rotatePivot) + rotatePivot;\\r\\n\\r\\n#include<mtoonBumpFragment>\\r\\n\\r\\n#ifdef TWOSIDEDLIGHTING\\r\\n    normalW = gl_FrontFacing ? normalW : -normalW;\\r\\n#endif\\r\\n\\r\\n// 通常の lightFragment ではなく、自前実装の mtoonLightFragment を読み込む\\r\\n#include<mtoonLightFragment>[0..maxSimultaneousLights]\\r\\n\\r\\n    vec3 finalDiffuse = clamp(diffuseBase, 0.0, 1.0) * baseColor.rgb;\\r\\n\\r\\n    // Composition\\r\\n    vec4 color = vec4(finalDiffuse, clamp(alpha, 0.0, 1.0));\\r\\n\\r\\n    color.rgb = max(color.rgb, 0.);\\r\\n#include<logDepthFragment>\\r\\n#include<fogFragment>\\r\\n\\r\\n    color.a *= visibility;\\r\\n\\r\\n#ifdef PREMULTIPLYALPHA\\r\\n    // Convert to associative (premultiplied) format if needed.\\r\\n    color.rgb *= color.a;\\r\\n#endif\\r\\n\\r\\n    gl_FragColor = color;\\r\\n}\\r\\n\"","export default \"// この include は特別で、 UboDeclaration または VertexDeclaration のどちらかに置換される\\r\\n// @see effect.ts\\r\\n#include<__decl__mtoonVertex>\\r\\n\\r\\n// 基本的に default.vertex.fx を踏襲している\\r\\n\\r\\n// Attributes\\r\\n\\r\\nattribute vec3 position;\\r\\n#ifdef NORMAL\\r\\nattribute vec3 normal;\\r\\n#endif\\r\\n#ifdef TANGENT\\r\\nattribute vec4 tangent;\\r\\n#endif\\r\\n#ifdef UV1\\r\\nattribute vec2 uv;\\r\\n#endif\\r\\n#ifdef UV2\\r\\nattribute vec2 uv2;\\r\\n#endif\\r\\n\\r\\n#include<helperFunctions>\\r\\n\\r\\n#include<bonesDeclaration>\\r\\n\\r\\n// Uniforms\\r\\n#include<instancesDeclaration>\\r\\n\\r\\n#ifdef MAINUV1\\r\\nvarying vec2 vMainUV1;\\r\\n#endif\\r\\n\\r\\n#ifdef MAINUV2\\r\\nvarying vec2 vMainUV2;\\r\\n#endif\\r\\n\\r\\n#if defined(DIFFUSE) && DIFFUSEDIRECTUV == 0\\r\\nvarying vec2 vDiffuseUV;\\r\\n#endif\\r\\n\\r\\n#if defined(EMISSIVE) && EMISSIVEDIRECTUV == 0\\r\\nvarying vec2 vEmissiveUV;\\r\\n#endif\\r\\n\\r\\n#if defined(BUMP) && BUMPDIRECTUV == 0\\r\\nvarying vec2 vBumpUV;\\r\\n#endif\\r\\n\\r\\n// Output\\r\\nvarying vec3 vPositionW;\\r\\n#ifdef NORMAL\\r\\nvarying vec3 vNormalW;\\r\\n#endif\\r\\n\\r\\n#include<bumpVertexDeclaration>\\r\\n\\r\\n#include<clipPlaneVertexDeclaration>\\r\\n\\r\\n#include<fogVertexDeclaration>\\r\\n#include<__decl__lightFragment>[0..maxSimultaneousLights]\\r\\n\\r\\n#include<morphTargetsVertexGlobalDeclaration>\\r\\n#include<morphTargetsVertexDeclaration>[0..maxSimultaneousMorphTargets]\\r\\n\\r\\n#include<logDepthDeclaration>\\r\\n\\r\\n\\r\\n// Additional Uniforms\\r\\n#if defined(SHADE) && SHADEDIRECTUV == 0\\r\\n    varying vec2 vShadeUV;\\r\\n#endif\\r\\n#if defined(RECEIVE_SHADOW) && RECEIVE_SHADOWDIRECTUV == 0\\r\\n    varying vec2 vReceiveShadowUV;\\r\\n#endif\\r\\n#if defined(SHADING_GRADE) && SHADING_GRADEDIRECTUV == 0\\r\\n    varying vec2 vShadingGradeUV;\\r\\n#endif\\r\\n#if defined(RIM) && RIMDIRECTUV == 0\\r\\n    varying vec2 vRimUV;\\r\\n#endif\\r\\n#if defined(MATCAP) && MATCAPDIRECTUV == 0\\r\\n    varying vec2 vMatCapUV;\\r\\n#endif\\r\\n#if defined(OUTLINE_WIDTH) && OUTLINE_WIDTHDIRECTUV == 0\\r\\n    varying vec2 vOutlineWidthUV;\\r\\n#endif\\r\\n#ifdef OUTLINE_WIDTH\\r\\n    uniform sampler2D outlineWidthSampler;\\r\\n#endif\\r\\n#if defined(UV_ANIMATION_MASK) && UV_ANIMATION_MASKDIRECTUV == 0\\r\\n    varying vec2 vUvAnimationMaskUV;\\r\\n#endif\\r\\n\\r\\nuniform float aspect;\\r\\nuniform float isOutline;\\r\\n\\r\\nvoid main(void) {\\r\\n\\r\\n    vec3 positionUpdated = position;\\r\\n#ifdef NORMAL\\r\\n    vec3 normalUpdated = normal;\\r\\n#endif\\r\\n#ifdef TANGENT\\r\\n    vec4 tangentUpdated = tangent;\\r\\n#endif\\r\\n\\r\\n#include<morphTargetsVertex>[0..maxSimultaneousMorphTargets]\\r\\n\\r\\n#include<instancesVertex>\\r\\n#include<bonesVertex>\\r\\n\\r\\n    // Texture coordinates\\r\\n#ifndef UV1\\r\\n    vec2 uv = vec2(0., 0.);\\r\\n#endif\\r\\n#ifndef UV2\\r\\n    vec2 uv2 = vec2(0., 0.);\\r\\n#endif\\r\\n\\r\\n#ifdef MAINUV1\\r\\n    vMainUV1 = uv;\\r\\n#endif\\r\\n\\r\\n#ifdef MAINUV2\\r\\n    vMainUV2 = uv2;\\r\\n#endif\\r\\n\\r\\n    float outlineTex = 1.0;\\r\\n    if (isOutline == 1.0) {\\r\\n#ifdef OUTLINE_WIDTH\\r\\n    #if OUTLINE_WIDTHDIRECTUV == 0\\r\\n        if (vOutlineWidthInfos.x == 0.) {\\r\\n            vOutlineWidthUV = vec2(outlineWidthMatrix * vec4(uv, 1.0, 0.0));\\r\\n        } else {\\r\\n            vOutlineWidthUV = vec2(outlineWidthMatrix * vec4(uv2, 1.0, 0.0));\\r\\n        }\\r\\n    #elif defined(MAINUV1)\\r\\n        vec2 vOutlineWidthUV = vMainUV1;\\r\\n    #elif defined(MAINUV2)\\r\\n        vec2 vOutlineWidthUV = vMainUV2;\\r\\n    #else\\r\\n        vec2 vOutlineWidthUV = vec2(0., 0.);\\r\\n    #endif\\r\\n    outlineTex = texture2D(outlineWidthSampler, vOutlineWidthUV).r * vOutlineWidthInfos.y;\\r\\n#endif\\r\\n\\r\\n#ifdef MTOON_OUTLINE_WIDTH_WORLD\\r\\n        // ワールド座標の normal 分だけ移動する\\r\\n        vec3 outlineOffset = normalize(finalWorld * vec4(normalUpdated, 1.0)).xyz * 0.01 * outlineWidth * outlineTex;\\r\\n        positionUpdated.xyz += outlineOffset;\\r\\n#endif\\r\\n    } // End isOutline == 1.0\\r\\n\\r\\n    vec4 vertex = vec4(1.0);\\r\\n#ifdef MULTIVIEW\\r\\n    if (gl_ViewID_OVR == 0u) {\\r\\n        vertex = viewProjection * finalWorld * vec4(positionUpdated, 1.0);\\r\\n    } else {\\r\\n        vertex = viewProjectionR * finalWorld * vec4(positionUpdated, 1.0);\\r\\n    }\\r\\n#else\\r\\n    vertex = viewProjection * finalWorld * vec4(positionUpdated, 1.0);\\r\\n#endif\\r\\n\\r\\n#ifdef MTOON_OUTLINE_WIDTH_SCREEN\\r\\n    if (isOutline == 1.0) {\\r\\n        vec4 projectedNormal = normalize(viewProjection * finalWorld * vec4(normalUpdated, 1.0));\\r\\n        projectedNormal *= min(vertex.w, outlineScaledMaxDistance);\\r\\n        projectedNormal.x *= aspect;\\r\\n        vertex.xy += 0.01 * outlineWidth * outlineTex * projectedNormal.xy * clamp(1.0 - abs(normalize(view * vec4(normalUpdated, 1.0)).z), 0.0, 1.0); // ignore offset when normal toward camera\\r\\n    }\\r\\n#endif\\r\\n\\r\\n    gl_Position = vertex;\\r\\n\\r\\n    vec4 worldPos = finalWorld * vec4(positionUpdated, 1.0);\\r\\n    vPositionW = vec3(worldPos);\\r\\n\\r\\n#ifdef NORMAL\\r\\n    mat3 normalWorld = mat3(finalWorld);\\r\\n\\r\\n    #ifdef NONUNIFORMSCALING\\r\\n        normalWorld = transposeMat3(inverseMat3(normalWorld));\\r\\n    #endif\\r\\n\\r\\n    vNormalW = normalize(normalWorld * normalUpdated);\\r\\n#endif\\r\\n\\r\\n#if defined(DIFFUSE) && DIFFUSEDIRECTUV == 0\\r\\n    if (vDiffuseInfos.x == 0.)\\r\\n    {\\r\\n        vDiffuseUV = vec2(diffuseMatrix * vec4(uv, 1.0, 0.0));\\r\\n    }\\r\\n    else\\r\\n    {\\r\\n        vDiffuseUV = vec2(diffuseMatrix * vec4(uv2, 1.0, 0.0));\\r\\n    }\\r\\n#endif\\r\\n\\r\\n#if defined(EMISSIVE) && EMISSIVEDIRECTUV == 0\\r\\n    if (vEmissiveInfos.x == 0.)\\r\\n    {\\r\\n        vEmissiveUV = vec2(emissiveMatrix * vec4(uv, 1.0, 0.0));\\r\\n    }\\r\\n    else\\r\\n    {\\r\\n        vEmissiveUV = vec2(emissiveMatrix * vec4(uv2, 1.0, 0.0));\\r\\n    }\\r\\n#endif\\r\\n\\r\\n#if defined(BUMP) && BUMPDIRECTUV == 0\\r\\n    if (vBumpInfos.x == 0.)\\r\\n    {\\r\\n        vBumpUV = vec2(bumpMatrix * vec4(uv, 1.0, 0.0));\\r\\n    }\\r\\n    else\\r\\n    {\\r\\n        vBumpUV = vec2(bumpMatrix * vec4(uv2, 1.0, 0.0));\\r\\n    }\\r\\n#endif\\r\\n\\r\\n#if defined(SHADE) && SHADEDIRECTUV == 0\\r\\n    if (vShadeInfos.x == 0.) {\\r\\n        vShadeUV = vec2(shadeMatrix * vec4(uv, 1.0, 0.0));\\r\\n    } else {\\r\\n        vShadeUV = vec2(shadeMatrix * vec4(uv2, 1.0, 0.0));\\r\\n    }\\r\\n#endif\\r\\n#if defined(RECEIVE_SHADOW) && RECEIVE_SHADOWDIRECTUV == 0\\r\\n    if (vReceiveShadowInfos.x == 0.) {\\r\\n        vReceiveShadowUV = vec2(receiveShadowMatrix * vec4(uv, 1.0, 0.0));\\r\\n    } else {\\r\\n        vReceiveShadowUV = vec2(receiveShadowMatrix * vec4(uv2, 1.0, 0.0));\\r\\n    }\\r\\n#endif\\r\\n#if defined(SHADING_GRADE) && SHADING_GRADEDIRECTUV == 0\\r\\n    if (vShadingGradeInfos.x == 0.) {\\r\\n        vShadingGradeUV = vec2(shadingGradeMatrix * vec4(uv, 1.0, 0.0));\\r\\n    } else {\\r\\n        vShadingGradeUV = vec2(shadingGradeMatrix * vec4(uv2, 1.0, 0.0));\\r\\n    }\\r\\n#endif\\r\\n#if defined(RIM) && RIMDIRECTUV == 0\\r\\n    if (vRimInfos.x == 0.) {\\r\\n        vRimUV = vec2(rimMatrix * vec4(uv, 1.0, 0.0));\\r\\n    } else {\\r\\n        vRimUV = vec2(rimMatrix * vec4(uv2, 1.0, 0.0));\\r\\n    }\\r\\n#endif\\r\\n#if defined(MATCAP) && MATCAPDIRECTUV == 0\\r\\n    if (vMatCapInfos.x == 0.) {\\r\\n        vMatCapUV = vec2(matCapMatrix * vec4(uv, 1.0, 0.0));\\r\\n    } else {\\r\\n        vMatCapUV = vec2(matCapMatrix * vec4(uv2, 1.0, 0.0));\\r\\n    }\\r\\n#endif\\r\\n#if defined(UV_ANIMATION_MASK) && UV_ANIMATION_MASKDIRECTUV == 0\\r\\n    if (vUvAnimationMaskInfos.x == 0.) {\\r\\n        vUvAnimationMaskUV = vec2(uvAnimationMaskMatrix * vec4(uv, 1.0, 0.0));\\r\\n    } else {\\r\\n        vUvAnimationMaskUV = vec2(uvAnimationMaskMatrix * vec4(uv2, 1.0, 0.0));\\r\\n    }\\r\\n#endif\\r\\n\\r\\n#include<bumpVertex>\\r\\n#include<clipPlaneVertex>\\r\\n#include<fogVertex>\\r\\n#include<shadowsVertex>[0..maxSimultaneousLights]\\r\\n\\r\\n#include<pointCloudVertex>\\r\\n#include<logDepthVertex>\\r\\n\\r\\n}\\r\\n\"","export default \"// include<__decl__mtoonVertex> または include<__decl__mtoonFragment> と書いた時に WebGL2 の場合展開される\\r\\n// @see effect.ts\\r\\n\\r\\nlayout(std140, column_major) uniform;\\r\\n\\r\\nuniform Material\\r\\n{\\r\\n    // Color & Texture\\r\\n    vec4 vDiffuseColor;\\r\\n    vec2 vDiffuseInfos;\\r\\n    mat4 diffuseMatrix;\\r\\n    vec4 vEmissiveColor;\\r\\n    vec2 vEmissiveInfos;\\r\\n    mat4 emissiveMatrix;\\r\\n    vec3 vBumpInfos;\\r\\n    mat4 bumpMatrix;\\r\\n    vec3 vShadeColor;\\r\\n    vec2 vShadeInfos;\\r\\n    mat4 shadeMatrix;\\r\\n    vec2 vReceiveShadowInfos;\\r\\n    mat4 receiveShadowMatrix;\\r\\n    vec2 vShadingGradeInfos;\\r\\n    mat4 shadingGradeMatrix;\\r\\n    vec3 vRimColor;\\r\\n    vec2 vRimInfos;\\r\\n    mat4 rimMatrix;\\r\\n    vec2 vMatCapInfos;\\r\\n    mat4 matCapMatrix;\\r\\n    vec4 vOutlineColor;\\r\\n    vec2 vOutlineWidthInfos;\\r\\n    mat4 outlineWidthMatrix;\\r\\n    vec2 vUvAnimationMaskInfos;\\r\\n    mat4 uvAnimationMaskMatrix;\\r\\n\\r\\n    // babylon specific\\r\\n    vec2 vTangentSpaceParams;\\r\\n    float pointSize;\\r\\n    float visibility;\\r\\n\\r\\n    // MToon params\\r\\n    float shadingGradeRate;\\r\\n    float receiveShadowRate;\\r\\n    float shadeShift;\\r\\n    float shadeToony;\\r\\n    float lightColorAttenuation;\\r\\n    float indirectLightIntensity;\\r\\n    float rimLightingMix;\\r\\n    float rimFresnelPower;\\r\\n    float rimLift;\\r\\n    float outlineWidth;\\r\\n    float outlineScaledMaxDistance;\\r\\n    float outlineLightingMix;\\r\\n    float uvAnimationScrollX;\\r\\n    float uvAnimationScrollY;\\r\\n    float uvAnimationRotation;\\r\\n};\\r\\n\\r\\n// babylon specific\\r\\nuniform Scene {\\r\\n    mat4 viewProjection;\\r\\n#ifdef MULTIVIEW\\r\\n    mat4 viewProjectionR;\\r\\n#endif\\r\\n    mat4 view;\\r\\n};\\r\\n\"","export default \"// Uniforms\\r\\nuniform mat4 viewProjection;\\r\\nuniform mat4 view;\\r\\nuniform float outlineWidth;\\r\\nuniform float outlineScaledMaxDistance;\\r\\nuniform float outlineLightingMix;\\r\\n\\r\\n#ifdef DIFFUSE\\r\\nuniform mat4 diffuseMatrix;\\r\\nuniform vec2 vDiffuseInfos;\\r\\n#endif\\r\\n\\r\\n#ifdef EMISSIVE\\r\\nuniform vec2 vEmissiveInfos;\\r\\nuniform mat4 emissiveMatrix;\\r\\n#endif\\r\\n\\r\\n#ifdef BUMP\\r\\nuniform vec3 vBumpInfos;\\r\\nuniform mat4 bumpMatrix;\\r\\n#endif\\r\\n\\r\\n#ifdef SHADE\\r\\nuniform vec2 vShadeInfos;\\r\\nuniform mat4 shadeMatrix;\\r\\n#endif\\r\\n\\r\\n#ifdef RECEIVE_SHADOW\\r\\nuniform vec2 vReceiveShadowInfos;\\r\\nuniform mat4 receiveShadowMatrix;\\r\\n#endif\\r\\n\\r\\n#ifdef SHADING_GRADE\\r\\nuniform vec2 vShadingGradeInfos;\\r\\nuniform mat4 shadingGradeMatrix;\\r\\n#endif\\r\\n\\r\\n#ifdef RIM\\r\\nuniform vec2 vRimInfos;\\r\\nuniform mat4 rimMatrix;\\r\\n#endif\\r\\n\\r\\n#ifdef MATCAP\\r\\nuniform vec2 vMatCapInfos;\\r\\nuniform mat4 matCapMatrix;\\r\\n#endif\\r\\n\\r\\n#ifdef OUTLINE_WIDTH\\r\\nuniform vec2 vOutlineWidthInfos;\\r\\nuniform mat4 outlineWidthMatrix;\\r\\n#endif\\r\\n\\r\\n#ifdef UV_ANIMATION_MASK\\r\\nuniform vec2 vUvAnimationMaskInfos;\\r\\nuniform mat4 uvAnimationMaskMatrix;\\r\\n#endif\\r\\n\\r\\n#ifdef POINTSIZE\\r\\nuniform float pointSize;\\r\\n#endif\\r\\n\"","import { ArcRotateCamera } from '@babylonjs/core/Cameras/arcRotateCamera';\r\nimport { Engine } from '@babylonjs/core/Engines/engine';\r\nimport { DirectionalLight } from '@babylonjs/core/Lights/directionalLight';\r\nimport { HemisphericLight } from '@babylonjs/core/Lights/hemisphericLight';\r\nimport { PointLight } from '@babylonjs/core/Lights/pointLight';\r\nimport { ShadowGenerator } from '@babylonjs/core/Lights/Shadows/shadowGenerator';\r\nimport { Texture } from '@babylonjs/core/Materials/Textures/texture';\r\nimport { Color3, Vector3 } from '@babylonjs/core/Maths/math';\r\nimport { Mesh } from '@babylonjs/core/Meshes/mesh';\r\nimport { Scene } from '@babylonjs/core/scene';\r\nimport { MToonMaterial } from '../mtoon-material';\r\n\r\nimport '@babylonjs/core/Helpers/sceneHelpers';\r\nimport '@babylonjs/core/Meshes/Builders/sphereBuilder';\r\nimport '@babylonjs/core/Meshes/Builders/torusKnotBuilder';\r\nimport '@babylonjs/inspector';\r\nimport { Material } from '@babylonjs/core/Materials/material';\r\n\r\nasync function main() {\r\n    const debugProperties = getDebugProperties();\r\n    const canvas = document.getElementById('main-canvas') as HTMLCanvasElement;\r\n    const engine = new Engine(\r\n        canvas,\r\n        true,\r\n        {\r\n            alpha: false,\r\n            disableWebGL2Support: debugProperties.webgl1,\r\n        },\r\n    );\r\n\r\n    const scene = new Scene(engine);\r\n    const camera = new ArcRotateCamera('MainCamera1', 0, 0, 3, new Vector3(0, 1.5, 0), scene, true);\r\n    camera.lowerRadiusLimit = 0.1;\r\n    camera.upperRadiusLimit = 20;\r\n    camera.wheelDeltaPercentage = 0.01;\r\n    camera.setPosition(new Vector3(0, 1.5, -3));\r\n    camera.setTarget(new Vector3(0, 1.5, 0));\r\n    camera.attachControl(canvas);\r\n\r\n    scene.createDefaultEnvironment({\r\n        createGround: true,\r\n        createSkybox: false,\r\n        enableGroundMirror: false,\r\n        enableGroundShadow: false,\r\n    });\r\n\r\n    // Lights\r\n    const directionalLight = new DirectionalLight('DirectionalLight1', new Vector3(1, -0.5, 0.0), scene);\r\n    directionalLight.position = new Vector3(-50, 25, 0);\r\n    directionalLight.setEnabled(true);\r\n    const hemisphericLight = new HemisphericLight('HemisphericLight1', new Vector3(-0.2, -0.8, -1), scene);\r\n    hemisphericLight.setEnabled(false);\r\n    const pointLight = new PointLight('PointLight1', new Vector3(0, 0, 1), scene);\r\n    pointLight.setEnabled(false);\r\n\r\n    // Meshes\r\n    const standardMaterialSphere = Mesh.CreateSphere('StandardMaterialSphere1', 16, 1, scene);\r\n    standardMaterialSphere.position = new Vector3(1.2, 1.2, 0);\r\n    standardMaterialSphere.receiveShadows = true;\r\n\r\n    const shadowCaster = Mesh.CreateTorusKnot('ShadowCaster', 1, 0.2, 32, 32, 2, 3, scene);\r\n    shadowCaster.position = new Vector3(-10.0, 5.0, 0.0);\r\n    shadowCaster.setEnabled(debugProperties.shadow);\r\n    if (debugProperties.shadow) {\r\n        const shadowGenerator = new ShadowGenerator(1024, directionalLight);\r\n        shadowGenerator.addShadowCaster(shadowCaster);\r\n    }\r\n\r\n    const mtoonMaterials: MToonMaterial[] = [];\r\n    {\r\n        const mat = new MToonMaterial('MtoonMaterialDefault', scene);\r\n        mat.outlineWidthMode = 1;\r\n        mtoonMaterials.push(mat);\r\n    }\r\n    {\r\n        const mat = new MToonMaterial('MtoonMaterialNormal', scene);\r\n        mat.outlineWidthMode = 1;\r\n        // Textures from https://www.babylonjs-playground.com/#20OAV9#33\r\n        const diffuse = new Texture('http://i.imgur.com/Wk1cGEq.png', scene);\r\n        diffuse.uScale = 4;\r\n        diffuse.vScale = 4;\r\n        mat.diffuseTexture = diffuse;\r\n        mat.shadeTexture = mat.diffuseTexture.clone();\r\n        mat.shadeColor = new Color3(0.871, 0.196, 0.416);\r\n        const bump = new Texture('http://i.imgur.com/wGyk6os.png', scene);\r\n        bump.uScale = 4;\r\n        bump.vScale = 4;\r\n        mat.bumpTexture = bump;\r\n        mtoonMaterials.push(mat);\r\n    }\r\n    {\r\n        const mat = new MToonMaterial('MtoonMaterialTransparent', scene);\r\n        mat.outlineWidthMode = 1;\r\n        // Textures from https://www.babylonjs-playground.com/#YDO1F#18\r\n        mat.diffuseTexture = new Texture('https://upload.wikimedia.org/wikipedia/commons/8/87/Alaskan_Malamute%2BBlank.png', scene);\r\n        mat.shadeTexture = mat.diffuseTexture.clone();\r\n        mat.alphaBlend = true;\r\n        mtoonMaterials.push(mat);\r\n    }\r\n    {\r\n        const mat = new MToonMaterial('MtoonMaterialRim', scene);\r\n        mat.outlineWidthMode = 1;\r\n        mat.diffuseColor = new Color3(0, 0, 0);\r\n        mat.shadeColor = new Color3(0, 0, 0);\r\n        mat.rimColor = new Color3(1, 1, 1);\r\n        mtoonMaterials.push(mat);\r\n    }\r\n    {\r\n        const mat = new MToonMaterial('MtoonMaterialMatCap', scene);\r\n        // Textures from https://www.outworldz.com/cgi/free-seamless-textures.plx?c=UV%20Checker\r\n        mat.matCapTexture = new Texture('resources/matcap.png', scene, true, false);\r\n        mat.diffuseColor = new Color3(0, 0, 0);\r\n        mat.shadeColor = new Color3(0, 0, 0);\r\n        mtoonMaterials.push(mat);\r\n    }\r\n    {\r\n        const mat = new MToonMaterial('MtoonMaterialScroll', scene);\r\n        mat.outlineWidthMode = 1;\r\n        // Textures from https://www.babylonjs-playground.com/#20OAV9#33\r\n        const diffuse = new Texture('http://i.imgur.com/Wk1cGEq.png', scene);\r\n        diffuse.uScale = 4;\r\n        diffuse.vScale = 4;\r\n        mat.diffuseTexture = diffuse;\r\n        mat.shadeTexture = mat.diffuseTexture.clone();\r\n        mat.shadeColor = new Color3(0.5, 0.5, 0.5);\r\n\r\n        const bump = new Texture('http://i.imgur.com/wGyk6os.png', scene);\r\n        bump.uScale = 4;\r\n        bump.vScale = 4;\r\n        mat.bumpTexture = bump;\r\n        mat.uvAnimationScrollX = 0.5;\r\n        mtoonMaterials.push(mat);\r\n    }\r\n\r\n    mtoonMaterials.forEach((mat, index) => {\r\n        // MToonMaterial は glTF(右手座標) を考慮しているため、 CullMode をデフォルトから反転させる\r\n        mat.sideOrientation = Material.CounterClockWiseSideOrientation;\r\n        mat.cullMode = 1;\r\n        mat.outlineCullMode = 2;\r\n        const sphere = Mesh.CreateSphere(`${mat.name}_Sphere`, 16, 1, scene);\r\n        sphere.position = new Vector3(-1.2 * index, 1.2, 0);\r\n        sphere.receiveShadows = true;\r\n        sphere.material = mat;\r\n    });\r\n\r\n    if (debugProperties.inspector) {\r\n       await scene.debugLayer.show({\r\n            globalRoot: document.getElementById('wrapper') as HTMLElement,\r\n            handleResize: true,\r\n        });\r\n    }\r\n\r\n    engine.runRenderLoop(() => {\r\n        scene.render();\r\n        shadowCaster.rotate(Vector3.Up(), 0.01);\r\n    });\r\n    window.addEventListener('resize', () => {\r\n        engine.resize();\r\n    });\r\n    (window as any).currentScene = scene;\r\n}\r\n\r\ninterface DebugProperties {\r\n    webgl1: boolean;\r\n    shadow: boolean;\r\n    inspector: boolean;\r\n}\r\n\r\nfunction getDebugProperties(): DebugProperties {\r\n    const href = window.location.href;\r\n\r\n    return {\r\n        webgl1: href.includes('webgl1'),\r\n        shadow: href.includes('shadow'),\r\n        inspector: href.includes('inspector'),\r\n    };\r\n}\r\n\r\nmain().catch((reason) => {\r\n    console.error(reason);\r\n});\r\n"],"sourceRoot":""}